<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>69log</title>
  <subtitle>福岡でwebの仕事をしています</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.kazu69.net/"/>
  <updated>2017-11-26T12:49:58.000Z</updated>
  <id>http://blog.kazu69.net/</id>
  
  <author>
    <name>kazu69</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Node.jsのアドオンをN-APIで実装する</title>
    <link href="http://blog.kazu69.net/2017/11/19/nodejs-native-add-on-with-napi/"/>
    <id>http://blog.kazu69.net/2017/11/19/nodejs-native-add-on-with-napi/</id>
    <published>2017-11-19T10:53:35.000Z</published>
    <updated>2017-11-26T12:49:58.000Z</updated>
    
    <content type="html"><![CDATA[<p>Node.js 8.0からは<a href="https://nodejs.org/api/n-api.html" target="_blank" rel="external">N-API</a>というものが試験的にサポートされている。<br>これはNode.js APIのABI(Application Binary Interface)-stableな中間レイヤでこれを使うことでネティブアドオンの開発が効率的にになる。</p>
<a id="more"></a>
<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>Node.jsをネイティブ拡張するには<a href="https://github.com/nodejs/nan" target="_blank" rel="external">NAN</a>や<a href="https://github.com/v8/v8" target="_blank" rel="external">V8</a>に依存しているため、<br>その内部実装に関しての知識が少なからず必要になってくるということが問題となっている。</p>
<p>また、これらはバージョンごとでAPIは安定性が保証されてないので、<br>ネイティブな機能のリリースには各バージョンでのコンパイルが必要となり、<br>開発者の負担のかかる状況とのこと。</p>
<p>そこでNode.js8.0からABI-stableなN-APIが試験的に追加されている。</p>
<p>N-APIをつかうことで、一度コンパイルしているモジュールはN-APIをサポートしているNode.jsのどのバージョンでも利用できる。<br>(現在は8.0以降のサポートだけど、今後は会のバージョンへの移植も検討されている)</p>
<p>N-APIを使うことでV8に依存していたネイティブアドオンをプラットフォームやアーキテクチャごとにビルドする必要がなくなる。</p>
<p>とういうことで、V8とN-APIでネイティブアドオンを作ってみた。</p>
<h3 id="node-gyp"><a href="#node-gyp" class="headerlink" title="node-gyp"></a>node-gyp</h3><p>まずはじめに<a href="https://github.com/nodejs/node-gyp" target="_blank" rel="external">node-gyp</a>を使うのでインストールしておく必要がある。<br>ChromiumやV8同様にGYP(Generate Your Projects)をつかってプロジェクトファイルを生成し、アドオンを作ります。<br>(もちろん利用するにはpython &lt;= 2.7も必要)</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -g node-gyp</div></pre></td></tr></table></figure>
<p>今回使うC++プログラム。</p>
<figure class="highlight h"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> _PRIME_NUMBER_H_</span></div><div class="line"><span class="meta">#<span class="meta-keyword">define</span> _PRIME_NUMBER_H_</span></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">PrimeNumber</span></span></div><div class="line">&#123;</div><div class="line">    <span class="comment">// accessor</span></div><div class="line">    <span class="keyword">public</span>:</div><div class="line">    <span class="function"><span class="keyword">int</span> <span class="title">isPrime</span><span class="params">(<span class="keyword">int</span> number)</span></span>;</div><div class="line">&#125;;</div><div class="line"><span class="meta">#<span class="meta-keyword">endif</span> <span class="comment">// _PRIME_NUMBER_H_</span></span></div></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdbool.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"prime_number.hpp"</span></span></div><div class="line"></div><div class="line"><span class="comment">// function definition</span></div><div class="line"><span class="keyword">int</span> PrimeNumber::isPrime(<span class="keyword">int</span> number)</div><div class="line">&#123;</div><div class="line">    <span class="keyword">bool</span> result = <span class="literal">true</span>;</div><div class="line">    <span class="keyword">int</span> i;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(i = <span class="number">2</span>; i &lt; number; ++i) &#123;</div><div class="line">        <span class="keyword">if</span> (number % i == <span class="number">0</span>) &#123;</div><div class="line">            result = <span class="literal">false</span>;</div><div class="line">            <span class="keyword">break</span>;            </div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>最終的に以下のようにJavaScriptから呼び出せれば良い。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// test.js</span></div><div class="line"><span class="keyword">const</span> primeNumber = <span class="built_in">require</span>(<span class="string">'./build/Release/primeNumber.node'</span>);</div><div class="line"><span class="built_in">console</span>.log(primeNumber.isPrimeNumber(<span class="number">5</span>)); <span class="comment">// =&gt; true</span></div><div class="line"><span class="built_in">console</span>.log(primeNumber.isPrimeNumber(<span class="number">6</span>)); <span class="comment">// =&gt; false</span></div></pre></td></tr></table></figure>
<h3 id="V8をそのまま使う"><a href="#V8をそのまま使う" class="headerlink" title="V8をそのまま使う"></a>V8をそのまま使う</h3><p>binding.gyp を作成</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">'targets'</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">'target_name'</span>: <span class="string">'primeNumber'</span>,</div><div class="line">      <span class="string">'sources'</span>: [<span class="string">'primeNumber.cpp'</span>, <span class="string">'../prime_number/prime_number.cpp'</span>],</div><div class="line">      <span class="string">'conditions'</span>: [</div><div class="line">        [</div><div class="line">          <span class="string">'OS=="linux"'</span>, </div><div class="line">          &#123;</div><div class="line">            <span class="string">"defines"</span>: [ <span class="string">"_GNU_SOURCE"</span> ],</div><div class="line">            <span class="string">"cflags"</span>: [ <span class="string">"-g"</span>, <span class="string">"-O2"</span>, <span class="string">"-std=c++11"</span>, ],</div><div class="line">          &#125;</div><div class="line">        ],</div><div class="line">        [</div><div class="line">          <span class="string">'OS=="win"'</span>, </div><div class="line">          &#123;</div><div class="line">            <span class="string">'libraries'</span>: [</div><div class="line">              <span class="string">'dbghelp.lib'</span>,</div><div class="line">              <span class="string">'Netapi32.lib'</span></div><div class="line">            ],</div><div class="line">            <span class="string">'dll_files'</span>: [</div><div class="line">              <span class="string">'dbghelp.dll'</span>,</div><div class="line">              <span class="string">'Netapi32.dll'</span></div><div class="line">            ],</div><div class="line">          &#125;</div><div class="line">        ],</div><div class="line">        [</div><div class="line">          <span class="string">'OS=="mac"'</span>,</div><div class="line">          &#123;</div><div class="line">            <span class="string">'xcode_settings'</span>: &#123;</div><div class="line">              <span class="string">'CLANG_CXX_LIBRARY'</span>: <span class="string">'libc++'</span>,</div><div class="line">              <span class="string">'CLANG_CXX_LANGUAGE_STANDARD'</span>:<span class="string">'c++11'</span>,</div><div class="line">            &#125;</div><div class="line">          &#125;</div><div class="line">        ],</div><div class="line">      ]</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>V8をそのまま使っている。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;node.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;v8.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"../prime_number/prime_number.hpp"</span></span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Method</span><span class="params">(<span class="keyword">const</span> v8::FunctionCallbackInfo&lt;v8::Value&gt;&amp; args)</span> </span>&#123;</div><div class="line">  v8::Isolate* isolate = args.GetIsolate();</div><div class="line"></div><div class="line">  <span class="keyword">double</span> number = args[<span class="number">0</span>]-&gt;NumberValue();</div><div class="line">  <span class="keyword">bool</span> data;</div><div class="line">  PrimeNumber primeNumber;</div><div class="line"></div><div class="line">  data = primeNumber.isPrime(number);</div><div class="line">  v8::Local&lt;v8::Boolean&gt; result = v8::Boolean::New(isolate, data); </div><div class="line"></div><div class="line">  args.GetReturnValue().Set(result);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">(v8::Local&lt;v8::Object&gt; exports)</span> </span>&#123;</div><div class="line">  NODE_SET_METHOD(exports, <span class="string">"isPrimeNumber"</span>, Method);</div><div class="line">&#125;</div><div class="line"></div><div class="line">NODE_MODULE(NODE_GYP_MODULE_NAME, init)</div></pre></td></tr></table></figure>
<p>プロジェクト作成とビルド</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">node-gyp configure</div><div class="line">node-gyp build</div></pre></td></tr></table></figure>
<p>実行する</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node test.js</div></pre></td></tr></table></figure>
<h3 id="N-API"><a href="#N-API" class="headerlink" title="N-API"></a>N-API</h3><p>同じくbinding.gyp を作成</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"targets"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"target_name"</span>: <span class="string">"primeNumber"</span>,</div><div class="line">      <span class="string">"sources"</span>: [ <span class="string">"primeNumber.cpp"</span>, <span class="string">"../prime_number/prime_number.cpp"</span> ]</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>そして、N-APIを使う。</p>
<figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;node_api.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;assert.h&gt;</span></span></div><div class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"../prime_number/prime_number.hpp"</span></span></div><div class="line"></div><div class="line"><span class="function">napi_value <span class="title">Method</span><span class="params">(napi_env env, napi_callback_info info)</span></span></div><div class="line">&#123;</div><div class="line">  napi_status status;</div><div class="line">  <span class="keyword">size_t</span> argc = <span class="number">1</span>;</div><div class="line">  napi_value args[<span class="number">0</span>];</div><div class="line"></div><div class="line">  status = napi_get_cb_info(env, info, &amp;argc, args, <span class="literal">nullptr</span>, <span class="literal">nullptr</span>);</div><div class="line">  assert(status == napi_ok);</div><div class="line"></div><div class="line">  <span class="comment">// 引数の数をチェック</span></div><div class="line">  <span class="keyword">if</span> (argc == <span class="number">0</span>) &#123;</div><div class="line">    napi_throw_type_error(env, <span class="string">"Wrong number of arguments"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="literal">nullptr</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="comment">// 引数の型をチェック</span></div><div class="line">  napi_valuetype valuetype;</div><div class="line">  status = napi_typeof(env, args[<span class="number">0</span>], &amp;valuetype);</div><div class="line">  <span class="keyword">if</span> (valuetype != napi_number) &#123;</div><div class="line">    napi_throw_type_error(env, <span class="string">"Wrong arguments"</span>);</div><div class="line">    <span class="keyword">return</span> <span class="literal">nullptr</span>;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">  <span class="keyword">int32_t</span> number;</div><div class="line">  status = napi_get_value_int32(env, args[<span class="number">0</span>], &amp;number);</div><div class="line">  assert(status == napi_ok);</div><div class="line"></div><div class="line">  <span class="keyword">bool</span> data;</div><div class="line">  PrimeNumber primeNumber;</div><div class="line">  data = primeNumber.isPrime((<span class="keyword">int</span>)number);</div><div class="line"></div><div class="line">  napi_value result;</div><div class="line">  status = napi_get_boolean(env, data, &amp;result);</div><div class="line">  assert(status == napi_ok);</div><div class="line"></div><div class="line">  <span class="keyword">return</span> result;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">Init</span><span class="params">(napi_env env, napi_value exports, napi_value <span class="keyword">module</span>, <span class="keyword">void</span>* priv)</span> </span>&#123;</div><div class="line">  napi_status status;</div><div class="line">  napi_value fn;</div><div class="line">  status =  napi_create_function(env, <span class="literal">NULL</span>, Method, <span class="literal">NULL</span>, &amp;fn);</div><div class="line">  <span class="keyword">if</span> (status != napi_ok) <span class="keyword">return</span>;</div><div class="line">  status = napi_set_named_property(env, exports, <span class="string">"isPrimeNumber"</span>, fn);</div><div class="line">  <span class="keyword">if</span> (status != napi_ok) <span class="keyword">return</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line">NAPI_MODULE(isPrimeNumber, Init)</div></pre></td></tr></table></figure>
<p>後は同じく、プロジェクト作成してビルド。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">node-gyp configure</div><div class="line">node-gyp build</div></pre></td></tr></table></figure>
<p>実行する際にはオプションが必要。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">node --napi-modules test.js</div></pre></td></tr></table></figure>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>実際に仕事でこんなことないんですが、サービスによっては複数の言語で動いているとかや、<br>すでにC/C++で完成している機能をJS側から呼び出したいというとき。<br>またC/C++のプロジェクトの移植でモジュール開発する際などで使う際はN-APIサポートしておくと捗りそう。</p>
<p><a href="https://github.com/kazu69/nodejs-addon-example" target="_blank" rel="external">今回作成したサンプル</a></p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://nodejs.org/api/n-api.html" target="_blank" rel="external">N-API</a><br><a href="https://medium.com/the-node-js-collection/n-api-next-generation-node-js-apis-for-native-modules-169af5235b06" target="_blank" rel="external">N-API: Next generation Node.js APIs for native modules</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Node.js 8.0からは&lt;a href=&quot;https://nodejs.org/api/n-api.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;N-API&lt;/a&gt;というものが試験的にサポートされている。&lt;br&gt;これはNode.js APIのABI(Application Binary Interface)-stableな中間レイヤでこれを使うことでネティブアドオンの開発が効率的にになる。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>brewのHOMEBREW_ENV_FILTERINGフラグを知った</title>
    <link href="http://blog.kazu69.net/2017/10/20/filter_environment_variables_brew/"/>
    <id>http://blog.kazu69.net/2017/10/20/filter_environment_variables_brew/</id>
    <published>2017-10-20T01:49:32.000Z</published>
    <updated>2017-10-28T08:21:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>brewが実行のたびにcurlエラーという状況になり、しばしはまったのでメモ。</p>
<a id="more"></a>
<p>以下のよう現象になった。<br>brewのたびにエラーが起きるので何もできない。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">$ brew</div><div class="line">==&gt; Downloading https://homebrew.bintray.com/bottles-portable/portable-ruby-2.3.3.leopard_64.bottle.1.tar.gz</div><div class="line"></div><div class="line">curl: (51) SSL: certificate verification failed (result: 5)</div><div class="line">Error: Download failed: https://homebrew.bintray.com/bottles-portable/portable-ruby-2.3.3.leopard_64.bottle.1.tar.gz</div><div class="line">Error: Failed to install vendor Ruby.</div></pre></td></tr></table></figure>
<p>エラー内容から<strong>CURL_CA_BUNDLE</strong> あたりを疑い、パスとcurlのバージョン、certあたりを確認し、<strong>SSL_CERT_FILE</strong>が設定されていることがわかり、unsetするもいっこうに解消しない。</p>
<p>他の環境変数が影響しているのか、結局原因がわからないままになったが、同様の現象で<a href="https://github.com/Homebrew/brew/issues/3246" target="_blank" rel="external">issue</a>があり、<strong>HOMEBREW_ENV_FILTERING</strong>で環境変数をフィルタリングすることを知り試してみると、無事に解消した。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ HOMEBREW_ENV_FILTERING=1 brew</div><div class="line">==&gt; Downloading https://homebrew.bintray.com/bottles-portable/portable-ruby-2.3.3.leopard_64.bottle.1.tar.gz</div><div class="line"><span class="comment">######################################################################## 100.0%</span></div><div class="line">==&gt; Pouring portable-ruby-2.3.3.leopard_64.bottle.1.tar.gz</div></pre></td></tr></table></figure>
<p><a href="https://github.com/Homebrew/brew/pull/1753" target="_blank" rel="external">HOMEBREW_ENV_FILTERINGに関してはv1.11</a>で追加されており、実装は以下の通り。</p>
<p><a href="https://github.com/Homebrew/brew/blob/b2e2e4b917805b8cf0a86bbc4a1517146a1f0d33/bin/brew#L61-L71" target="_blank" rel="external">https://github.com/Homebrew/brew/blob/b2e2e4b917805b8cf0a86bbc4a1517146a1f0d33/bin/brew#L61-L71</a></p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> [[ -n <span class="string">"<span class="variable">$HOMEBREW_ENV_FILTERING</span>"</span> ]]</div><div class="line"><span class="keyword">then</span></div><div class="line">  PATH=<span class="string">"/usr/bin:/bin:/usr/sbin:/sbin"</span></div><div class="line"></div><div class="line"></div><div class="line">  FILTERED_ENV=()</div><div class="line">  <span class="keyword">for</span> VAR <span class="keyword">in</span> HOME SHELL PATH TERM LOGNAME USER <span class="string">"<span class="variable">$&#123;!HOMEBREW_@&#125;</span>"</span></div><div class="line">  <span class="keyword">do</span></div><div class="line">    FILTERED_ENV+=( <span class="string">"<span class="variable">$&#123;VAR&#125;</span>=<span class="variable">$&#123;!VAR&#125;</span>"</span> )</div><div class="line">  <span class="keyword">done</span></div><div class="line"></div><div class="line"></div><div class="line">  /usr/bin/env -i <span class="string">"<span class="variable">$&#123;FILTERED_ENV[@]&#125;</span>"</span> /bin/bash <span class="string">"<span class="variable">$HOMEBREW_LIBRARY</span>/Homebrew/brew.sh"</span> <span class="string">"<span class="variable">$@</span>"</span></div><div class="line"><span class="keyword">else</span></div><div class="line">  <span class="built_in">source</span> <span class="string">"<span class="variable">$HOMEBREW_LIBRARY</span>/Homebrew/brew.sh"</span></div><div class="line"><span class="keyword">fi</span></div></pre></td></tr></table></figure>
<p>で実際に手元でやってみると以下のようになる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">$ HOMEBREW_ENV_FILTERING=1 brew config</div><div class="line">HOMEBREW_VERSION: 1.3.6</div><div class="line">ORIGIN: https://github.com/Homebrew/brew</div><div class="line">HEAD: 270b752f5d9d218bfbed6fe85b6974fa653fb25f</div><div class="line">Last commit: 10 days ago</div><div class="line">Core tap ORIGIN: https://github.com/Homebrew/homebrew-core</div><div class="line">Core tap HEAD: b6e963c1ce72391194f9b81126afc400885f1bc5</div><div class="line">Core tap last commit: 25 minutes ago</div><div class="line">HOMEBREW_PREFIX: /usr/<span class="built_in">local</span></div><div class="line">HOMEBREW_REPOSITORY: /usr/<span class="built_in">local</span>/Homebrew</div><div class="line">HOMEBREW_CELLAR: /usr/<span class="built_in">local</span>/Cellar</div><div class="line">HOMEBREW_BOTTLE_DOMAIN: https://homebrew.bintray.com</div><div class="line">CPU: quad-core 64-bit broadwell</div><div class="line">Homebrew Ruby: 2.3.3 =&gt; /usr/<span class="built_in">local</span>/Homebrew/Library/Homebrew/vendor/portable-ruby/2.3.3/bin/ruby</div><div class="line">Clang: 8.0 build 800</div><div class="line">Git: 2.10.1 =&gt; /Applications/Xcode.app/Contents/Developer/usr/bin/git</div><div class="line">Perl: /usr/bin/perl</div><div class="line">Python: /usr/bin/python</div><div class="line">Ruby: /usr/bin/ruby =&gt; /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby</div><div class="line">Java: 1.6.0_65-b14-468</div><div class="line">macOS: 10.11.6-x86_64</div><div class="line">Xcode: 8.2.1</div><div class="line">CLT: 8.2.0.0.1.1480973914</div><div class="line">X11: 2.7.9 =&gt; /opt/X11</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">$ brew config</div><div class="line">HOMEBREW_VERSION: 1.3.6</div><div class="line">ORIGIN: https://github.com/Homebrew/brew</div><div class="line">HEAD: 270b752f5d9d218bfbed6fe85b6974fa653fb25f</div><div class="line">Last commit: 10 days ago</div><div class="line">Core tap ORIGIN: https://github.com/Homebrew/homebrew-core</div><div class="line">Core tap HEAD: b6e963c1ce72391194f9b81126afc400885f1bc5</div><div class="line">Core tap last commit: 44 minutes ago</div><div class="line">HOMEBREW_PREFIX: /usr/<span class="built_in">local</span></div><div class="line">HOMEBREW_REPOSITORY: /usr/<span class="built_in">local</span>/Homebrew</div><div class="line">HOMEBREW_CELLAR: /usr/<span class="built_in">local</span>/Cellar</div><div class="line">HOMEBREW_BOTTLE_DOMAIN: https://homebrew.bintray.com</div><div class="line">CPU: quad-core 64-bit broadwell</div><div class="line">Homebrew Ruby: 2.3.3 =&gt; /usr/<span class="built_in">local</span>/Homebrew/Library/Homebrew/vendor/portable-ruby/2.3.3/bin/ruby</div><div class="line">Clang: 8.0 build 800</div><div class="line">Git: 2.14.3 =&gt; /usr/<span class="built_in">local</span>/bin/git</div><div class="line">Perl: /usr/bin/perl</div><div class="line">Python: /usr/bin/python</div><div class="line">Ruby: /Users/XXX/.rbenv/shims/ruby =&gt; /Users/XXX/.rbenv/versions/2.3.3/bin/ruby</div><div class="line">Java: 1.6.0_65-b14-468</div><div class="line">macOS: 10.11.6-x86_64</div><div class="line">Xcode: 8.2.1</div><div class="line">CLT: 8.2.0.0.1.1480973914</div><div class="line">X11: 2.7.9 =&gt; /opt/X11</div></pre></td></tr></table></figure>
<figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">15c15</div><div class="line">&lt; Git: 2.14.3 =&gt; /usr/local/bin/git</div><div class="line"><span class="comment">---</span></div><div class="line">&gt; Git: 2.10.1 =&gt; /Applications/Xcode.app/Contents/Developer/usr/bin/git</div><div class="line">18c18</div><div class="line">&lt; Ruby: /Users/XXX/.rbenv/shims/ruby =&gt; /Users/XXX/.rbenv/versions/2.3.3/bin/ruby</div><div class="line"><span class="comment">---</span></div><div class="line">&gt; Ruby: /usr/bin/ruby =&gt; /System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/bin/ruby</div></pre></td></tr></table></figure>
<p>というように手元の環境をフィルタリングしてデフォルトのものを使う感じになのかな。<br>まずbrewがトラブった場合は試してみるとよさそう。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;brewが実行のたびにcurlエラーという状況になり、しばしはまったのでメモ。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>稼働中のapacheプロセスやphpエラーgdbで追う</title>
    <link href="http://blog.kazu69.net/2017/09/11/running-apache-process-php-error-gdb/"/>
    <id>http://blog.kazu69.net/2017/09/11/running-apache-process-php-error-gdb/</id>
    <published>2017-09-11T01:40:10.000Z</published>
    <updated>2017-09-18T23:31:02.000Z</updated>
    
    <content type="html"><![CDATA[<p>稼働中のサービスにおいてapacheのプロセスが閾値を超える事象が頻発したり、<br>phpのバグを踏んだりした際に。なにが原因なのか究明のために行ったときの備忘録。</p>
<a id="more"></a>
<p>必ずSegmentation Faultが起きるようにphpを拡張して、デバッグしていく。</p>
<h3 id="php-extentionsを作成"><a href="#php-extentionsを作成" class="headerlink" title="php extentionsを作成"></a>php extentionsを作成</h3><p>まずSegmentation Faultとなるようにphpを拡張する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># php取得</span></div><div class="line">curl -s -O http://jp2.php.net/distributions/php-5.6.31.tar.gz</div><div class="line">tar -zxvf php-5.6.31.tar.gz</div><div class="line"><span class="built_in">cd</span> php-5.6.31/ext</div><div class="line"></div><div class="line"><span class="comment"># 拡張を作成するためのスケルトンを作成</span></div><div class="line">./ext_skel --extname=example</div><div class="line">Creating directory example</div><div class="line">Creating basic files: config.m4 config.w32 .gitignore example.c php_example.h CREDITS EXPERIMENTAL tests/001.phpt example.php [<span class="keyword">done</span>].</div><div class="line"></div><div class="line">To use your new extension, you will have to execute the following steps:</div><div class="line"></div><div class="line">1.  $ <span class="built_in">cd</span> ..</div><div class="line">2.  $ vi ext/example/config.m4</div><div class="line">3.  $ ./buildconf</div><div class="line">4.  $ ./configure --[with|<span class="built_in">enable</span>]-example</div><div class="line">5.  $ make</div><div class="line">6.  $ ./sapi/cli/php -f ext/example/example.php</div><div class="line">7.  $ vi ext/example/example.c</div><div class="line">8.  $ make</div><div class="line"></div><div class="line">Repeat steps 3-6 until you are satisfied with ext/example/config.m4 and</div><div class="line">step 6 confirms that your module is compiled into PHP. Then, start writing</div><div class="line">code and repeat the last two steps as often as necessary.</div><div class="line"></div><div class="line"><span class="comment"># 表示された手順に従い拡張を作成していく</span></div><div class="line"><span class="built_in">cd</span> example</div><div class="line"></div><div class="line">vi config.m4</div></pre></td></tr></table></figure>
<p>生成されたconfig.m4を編集する。<br>以下の箇所をコメントインする</p>
<figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">/* config.m4 */</div><div class="line"><span class="deletion">- dnl PHP_ARG_WITH(example, for example support,</span></div><div class="line"><span class="deletion">- dnl Make sure that the comment is aligned:</span></div><div class="line"><span class="deletion">- dnl [  --with-example             Include example support])</span></div><div class="line"><span class="addition">+ PHP_ARG_WITH(example, for example support,</span></div><div class="line"><span class="addition">+ Make sure that the comment is aligned:</span></div><div class="line"><span class="addition">+ [  --with-example             Include example support])</span></div></pre></td></tr></table></figure>
<p>拡張モジュールをビルドのためにphpizeする</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div></pre></td><td class="code"><pre><div class="line">phpize</div><div class="line"></div><div class="line">Configuring <span class="keyword">for</span>:</div><div class="line">PHP Api Version:         20121113</div><div class="line">Zend Module Api No:      20121212</div><div class="line">Zend Extension Api No:   220121212</div><div class="line"></div><div class="line">./configure</div><div class="line">...</div><div class="line">creating libtool</div><div class="line">appending configuration tag <span class="string">"CXX"</span> to libtool</div><div class="line">configure: creating ./config.status</div><div class="line">config.status: creating config.h</div><div class="line"></div><div class="line">make</div><div class="line"></div><div class="line">...</div><div class="line">----------------------------------------------------------------------</div><div class="line">Libraries have been installed <span class="keyword">in</span>:</div><div class="line">   /Users/kazu/Dropbox/workspace/debug-gdb/php-5.6.31/ext/example/modules</div><div class="line"></div><div class="line">If you ever happen to want to link against installed libraries</div><div class="line"><span class="keyword">in</span> a given directory, LIBDIR, you must either use libtool, and</div><div class="line">specify the full pathname of the library, or use the `-LLIBDIR<span class="string">'</span></div><div class="line">flag during linking and do at least one of the following:</div><div class="line">   - add LIBDIR to the `DYLD_LIBRARY_PATH' environment variable</div><div class="line">     during execution</div><div class="line"></div><div class="line">See any operating system documentation about shared libraries <span class="keyword">for</span></div><div class="line">more information, such as the ld(1) and ld.so(8) manual pages.</div><div class="line">----------------------------------------------------------------------</div><div class="line"></div><div class="line">Build complete.</div><div class="line">Don<span class="string">'t forget to run '</span>make <span class="built_in">test</span><span class="string">'.</span></div><div class="line"></div><div class="line">php -d extension=modules/example.so example.php</div><div class="line">Functions available in the test extension:</div><div class="line">confirm_example_compiled</div><div class="line"></div><div class="line">Congratulations! You have successfully modified ext/example/config.m4. Module example is now compiled into PHP.</div><div class="line"></div><div class="line">vi example.c</div></pre></td></tr></table></figure>
<p>example.cに拡張を追加していく。<br>拡張を実装する。</p>
<figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div></pre></td><td class="code"><pre><div class="line">/* example.c */</div><div class="line"></div><div class="line"> const zend_function_entry example_functions[] = &#123;</div><div class="line">	 PHP_FE(confirm_example_compiled,	NULL)		/* For testing,  remove later. */</div><div class="line">     /* 新しいphpメソッドを追加する */</div><div class="line"><span class="addition">+	 PHP_FE(down_method, NULL)</span></div><div class="line">	 PHP_FE_END	/* Must be the last line in example_functions[] */</div><div class="line"> &#125;;</div><div class="line"></div><div class="line">PHP_FUNCTION(confirm_example_compiled)</div><div class="line">&#123;</div><div class="line">	char *arg = NULL;</div><div class="line">	int arg_len, len;</div><div class="line">	char *strg;</div><div class="line"></div><div class="line">	if (zend_parse_parameters(ZEND_NUM_ARGS() TSRMLS_CC, "s", &amp;arg, &amp;arg_len) == FAILURE) &#123;</div><div class="line">		return;</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	len = spprintf(&amp;strg, 0, "Congratulations! You have successfully modified ext/%.78s/config.m4. Module %.78s is now compiled into PHP.", "example", arg);</div><div class="line">	RETURN_STRINGL(strg, len, 0);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="addition">+ /* NULLアドレスの参照で必ず落ちる */</span></div><div class="line"><span class="addition">+ PHP_FUNCTION(down_method)</span></div><div class="line"><span class="addition">+ &#123;</span></div><div class="line"><span class="addition">+ 	char *ptr = NULL ;</span></div><div class="line"><span class="addition">+     strcpy(ptr, "down") ;</span></div><div class="line"><span class="addition">+ &#125;</span></div><div class="line"></div><div class="line">zend_module_entry example_module_entry = &#123;</div><div class="line">	STANDARD_MODULE_HEADER,</div><div class="line">	"example",</div><div class="line">	example_functions,</div><div class="line"><span class="deletion">-	PHP_MINIT(example),</span></div><div class="line"><span class="deletion">-	PHP_MSHUTDOWN(example),</span></div><div class="line"><span class="deletion">-	PHP_RINIT(example),		/* Replace with NULL if there's nothing to do at request start */</span></div><div class="line"><span class="deletion">-	PHP_RSHUTDOWN(example),	/* Replace with NULL if there's nothing to do at request end */</span></div><div class="line"><span class="deletion">-	PHP_MINFO(example),</span></div><div class="line"><span class="deletion">-	PHP_EXAMPLE_VERSION,</span></div><div class="line">	STANDARD_MODULE_PROPERTIES</div><div class="line">&#125;;</div><div class="line">zend_module_entry example_module_entry = &#123;</div><div class="line"> 	STANDARD_MODULE_HEADER,</div><div class="line"> 	"example",</div><div class="line"> 	example_functions,</div><div class="line"><span class="addition">+	NULL,</span></div><div class="line"><span class="addition">+	NULL,</span></div><div class="line"><span class="addition">+	NULL,		/* Replace with NULL if there's nothing to do at request start */</span></div><div class="line"><span class="addition">+	NULL,	/* Replace with NULL if there's nothing to do at request end */</span></div><div class="line"><span class="addition">+	NULL,</span></div><div class="line"><span class="addition">+	NO_VERSION_YET,</span></div><div class="line"> 	STANDARD_MODULE_PROPERTIES</div><div class="line">&#125;;</div></pre></td></tr></table></figure>
<p>makeする</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">make</div><div class="line">...</div></pre></td></tr></table></figure>
<p>一応これで必ずSegmentation Faultふがおきるphpのメソッドができた。</p>
<h3 id="コンテナの起動"><a href="#コンテナの起動" class="headerlink" title="コンテナの起動"></a>コンテナの起動</h3><p>いろいろとコアな変更もしたいので <strong>privileged</strong> でコンテナを起動。</p>
<p>コアファイルへのアクセスやプロセスのtraceなどを行うため、コンテナ起動時にはcapabilityの追加の追加をしておく。</p>
<p>またcoreファイルのシステムリソールを変更する(unlimitedではエラーになるので十分に大きな数字を渡す)。</p>
<p>コンテナ内のシステムコールへのアクセスがセキュリティ的にだめなので、<strong>security-opt</strong> オプションを追加。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># build and run container</span></div><div class="line">docker build -t kazu69/debug_apache_php_with_gdb .</div><div class="line"></div><div class="line"><span class="comment"># run container</span></div><div class="line">docker run -d \</div><div class="line">           -p 8080:80 \</div><div class="line">           --privileged \</div><div class="line">           --<span class="built_in">ulimit</span> core=9999999999 \</div><div class="line">           --<span class="built_in">cap</span>-add=SYS_PTRACE \</div><div class="line">           --security-opt seccomp:unconfined \</div><div class="line">           kazu69/debug_apache_php_with_gdb</div></pre></td></tr></table></figure>
<h3 id="straceでシステムコールを眺める"><a href="#straceでシステムコールを眺める" class="headerlink" title="straceでシステムコールを眺める"></a>straceでシステムコールを眺める</h3><p>デバッグの際によく使われるのがstrace。<br>プロセスがどの動きをしているのか(カーネルのシステムコール)をtraceする。</p>
<p>今回はphpで <strong>gethostbyaddr</strong> を実行してそれをtraceしてみる。<br>わかりやすいようにapacheのコプロセスを1つにしている。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># -T 各システムコールにかかった時間</span></div><div class="line"><span class="comment"># t timestampを出力</span></div><div class="line"><span class="comment"># ff forkしたプロセスのシステムコールもトレース</span></div><div class="line"><span class="comment"># p プロセスID</span></div><div class="line"><span class="comment"># o 指定したファイルに出力</span></div><div class="line"></div><div class="line"><span class="comment"># strace -T -t -ff -o &lt;path-to-log-file&gt; -p &lt;pid&gt;</span></div><div class="line"></div><div class="line">pstree -p</div><div class="line">apache2(1)---apache2(44)</div><div class="line"></div><div class="line">strace -p 44</div><div class="line">Process 44 attached</div><div class="line">accept4(3, &#123;sa_family=AF_INET, sin_port=htons(55964), sin_addr=inet_addr(<span class="string">"172.17.0.1"</span>)&#125;, [16], SOCK_CLOEXEC) = 11</div><div class="line">gettimeofday(&#123;1505745624, 9024&#125;, NULL)  = 0</div><div class="line">getsockname(11, &#123;sa_family=AF_INET, sin_port=htons(80), sin_addr=inet_addr(<span class="string">"172.17.0.2"</span>)&#125;, [16]) = 0</div><div class="line">fcntl(11, F_GETFL)                      = 0x2 (flags O_RDWR)</div><div class="line">fcntl(11, F_SETFL, O_RDWR|O_NONBLOCK)   = 0</div><div class="line">gettimeofday(&#123;1505745624, 9284&#125;, NULL)  = 0</div><div class="line">mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f11695fc000</div><div class="line">gettimeofday(&#123;1505745624, 9440&#125;, NULL)  = 0</div><div class="line">mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f11695fa000</div><div class="line"><span class="built_in">read</span>(11, <span class="string">"GET / HTTP/1.1\r\nHost: localhost:"</span>..., 8000) = 503</div><div class="line">gettimeofday(&#123;1505745624, 9617&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9679&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9739&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9771&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9803&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9836&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9870&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9920&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9947&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 9986&#125;, NULL)  = 0</div><div class="line">gettimeofday(&#123;1505745624, 10038&#125;, NULL) = 0</div><div class="line">gettimeofday(&#123;1505745624, 10198&#125;, NULL) = 0</div><div class="line">gettimeofday(&#123;1505745624, 10257&#125;, NULL) = 0</div><div class="line"><span class="built_in">stat</span>(<span class="string">"/var/www/html/"</span>, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">open(<span class="string">"/var/www/.htaccess"</span>, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)</div><div class="line">open(<span class="string">"/var/www/html/.htaccess"</span>, O_RDONLY|O_CLOEXEC) = -1 ENOENT (No such file or directory)</div><div class="line">mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f11695f8000</div><div class="line">mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f11695f6000</div><div class="line"><span class="built_in">stat</span>(<span class="string">"/var/www/html/index.php"</span>, &#123;st_mode=S_IFREG|0644, st_size=44, ...&#125;) = 0</div><div class="line">setitimer(ITIMER_PROF, &#123;it_interval=&#123;0, 0&#125;, it_value=&#123;30, 0&#125;&#125;, NULL) = 0</div><div class="line">rt_sigaction(SIGPROF, &#123;0x7f11652f0190, [PROF], SA_RESTORER|SA_RESTART, 0x7f11688f20e0&#125;, &#123;SIG_DFL, [], 0&#125;, 8) = 0</div><div class="line">rt_sigprocmask(SIG_UNBLOCK, [PROF], NULL, 8) = 0</div><div class="line">getcwd(<span class="string">"/var/www/html"</span>, 4095)           = 14</div><div class="line"><span class="built_in">chdir</span>(<span class="string">"/var/www/html"</span>)                  = 0</div><div class="line">lstat(<span class="string">"/var/www/html/index.php"</span>, &#123;st_mode=S_IFREG|0644, st_size=44, ...&#125;) = 0</div><div class="line">lstat(<span class="string">"/var/www/html"</span>, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">lstat(<span class="string">"/var/www"</span>, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">lstat(<span class="string">"/var"</span>, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">open(<span class="string">"/var/www/html/index.php"</span>, O_RDONLY) = 12</div><div class="line">fstat(12, &#123;st_mode=S_IFREG|0644, st_size=44, ...&#125;) = 0</div><div class="line">fstat(12, &#123;st_mode=S_IFREG|0644, st_size=44, ...&#125;) = 0</div><div class="line">fstat(12, &#123;st_mode=S_IFREG|0644, st_size=44, ...&#125;) = 0</div><div class="line">mmap(NULL, 44, PROT_READ, MAP_SHARED, 12, 0) = 0x7f11695f5000</div><div class="line">munmap(0x7f11695f5000, 44)              = 0</div><div class="line">close(12)                               = 0</div><div class="line">open(<span class="string">"/etc/hosts"</span>, O_RDONLY|O_CLOEXEC)  = 12</div><div class="line">fstat(12, &#123;st_mode=S_IFREG|0644, st_size=174, ...&#125;) = 0</div><div class="line">mmap(NULL, 4096, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f11695f5000</div><div class="line"><span class="built_in">read</span>(12, <span class="string">"127.0.0.1\tlocalhost\n::1\tlocalhos"</span>..., 4096) = 174</div><div class="line"><span class="built_in">read</span>(12, <span class="string">""</span>, 4096)                      = 0</div><div class="line">close(12)                               = 0</div><div class="line">munmap(0x7f11695f5000, 4096)            = 0</div><div class="line">open(<span class="string">"/etc/ld.so.cache"</span>, O_RDONLY|O_CLOEXEC) = 12</div><div class="line">fstat(12, &#123;st_mode=S_IFREG|0644, st_size=15545, ...&#125;) = 0</div><div class="line">mmap(NULL, 15545, PROT_READ, MAP_PRIVATE, 12, 0) = 0x7f11695f2000</div><div class="line">close(12)                               = 0</div><div class="line">access(<span class="string">"/etc/ld.so.nohwcap"</span>, F_OK)      = -1 ENOENT (No such file or directory)</div><div class="line">open(<span class="string">"/lib/x86_64-linux-gnu/libnss_dns.so.2"</span>, O_RDONLY|O_CLOEXEC) = 12</div><div class="line"><span class="built_in">read</span>(12, <span class="string">"\177ELF\2\1\1\0\0\0\0\0\0\0\0\0\3\0&gt;\0\1\0\0\0\0\21\0\0\0\0\0\0"</span>..., 832) = 832</div><div class="line">fstat(12, &#123;st_mode=S_IFREG|0644, st_size=22952, ...&#125;) = 0</div><div class="line">mmap(NULL, 2117896, PROT_READ|PROT_EXEC, MAP_PRIVATE|MAP_DENYWRITE, 12, 0) = 0x7f115f1fe000</div><div class="line">mprotect(0x7f115f203000, 2093056, PROT_NONE) = 0</div><div class="line">mmap(0x7f115f402000, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_FIXED|MAP_DENYWRITE, 12, 0x4000) = 0x7f115f402000</div><div class="line">close(12)                               = 0</div><div class="line">mprotect(0x7f115f402000, 4096, PROT_READ) = 0</div><div class="line">munmap(0x7f11695f2000, 15545)           = 0</div><div class="line"><span class="built_in">stat</span>(<span class="string">"/etc/resolv.conf"</span>, &#123;st_mode=S_IFREG|0644, st_size=153, ...&#125;) = 0</div><div class="line">socket(PF_INET, SOCK_DGRAM|SOCK_NONBLOCK, IPPROTO_IP) = 12</div><div class="line">connect(12, &#123;sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(<span class="string">"192.168.65.1"</span>)&#125;, 16) = 0</div><div class="line">gettimeofday(&#123;1505745624, 15912&#125;, NULL) = 0</div><div class="line">poll([&#123;fd=12, events=POLLOUT&#125;], 1, 0)   = 1 ([&#123;fd=12, revents=POLLOUT&#125;])</div><div class="line">sendto(12, <span class="string">"\307\302\1\0\0\1\0\0\0\0\0\0\0018\0018\0018\0018\7in-addr\4arp"</span>..., 38, MSG_NOSIGNAL, NULL, 0) = 38</div><div class="line">poll([&#123;fd=12, events=POLLIN&#125;], 1, 5000) = 1 ([&#123;fd=12, revents=POLLIN&#125;])</div><div class="line">ioctl(12, FIONREAD, [82])               = 0</div><div class="line">recvfrom(12, <span class="string">"\307\302\201\200\0\1\0\1\0\0\0\0\0018\0018\0018\0018\7in-addr\4arp"</span>..., 1024, 0, &#123;sa_family=AF_INET, sin_port=htons(53), sin_addr=inet_addr(<span class="string">"192.168.65.1"</span>)&#125;, [16]) = 82</div><div class="line">close(12)                               = 0</div><div class="line">mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f11695f4000</div><div class="line"><span class="built_in">chdir</span>(<span class="string">"/var/www/html"</span>)                  = 0</div><div class="line">setitimer(ITIMER_PROF, &#123;it_interval=&#123;0, 0&#125;, it_value=&#123;0, 0&#125;&#125;, NULL) = 0</div><div class="line">setitimer(ITIMER_PROF, &#123;it_interval=&#123;0, 0&#125;, it_value=&#123;0, 0&#125;&#125;, NULL) = 0</div><div class="line">mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f11695f2000</div><div class="line">mmap(NULL, 8192, PROT_READ|PROT_WRITE, MAP_PRIVATE|MAP_ANONYMOUS, -1, 0) = 0x7f11695f0000</div><div class="line">gettimeofday(&#123;1505745624, 54797&#125;, NULL) = 0</div><div class="line"><span class="built_in">read</span>(11, 0x7f11695fa048, 8000)          = -1 EAGAIN (Resource temporarily unavailable)</div><div class="line">gettimeofday(&#123;1505745624, 56175&#125;, NULL) = 0</div><div class="line">writev(11, [&#123;<span class="string">"HTTP/1.1 200 OK\r\nDate: Mon, 18 S"</span>..., 230&#125;, &#123;<span class="string">"google-public-dns-a.google.com"</span>, 30&#125;], 2) = 260</div><div class="line">gettimeofday(&#123;1505745624, 57097&#125;, NULL) = 0</div><div class="line">write(8, <span class="string">"172.17.0.1 - - [18/Sep/2017:14:4"</span>..., 197) = 197</div><div class="line"><span class="built_in">times</span>(&#123;tms_utime=0, tms_stime=0, tms_cutime=0, tms_cstime=0&#125;) = 4298231454</div><div class="line">gettimeofday(&#123;1505745624, 58609&#125;, NULL) = 0</div><div class="line">gettimeofday(&#123;1505745624, 58935&#125;, NULL) = 0</div><div class="line">poll([&#123;fd=11, events=POLLIN&#125;], 1, 5000) = 0 (Timeout)</div><div class="line">gettimeofday(&#123;1505745629, 68368&#125;, NULL) = 0</div><div class="line">gettimeofday(&#123;1505745629, 68817&#125;, NULL) = 0</div><div class="line">gettimeofday(&#123;1505745629, 69508&#125;, NULL) = 0</div><div class="line">gettimeofday(&#123;1505745629, 70214&#125;, NULL) = 0</div><div class="line">shutdown(11, SHUT_WR)                   = 0</div><div class="line">poll([&#123;fd=11, events=POLLIN&#125;], 1, 2000) = 0 (Timeout)</div><div class="line">close(11)                               = 0</div><div class="line"><span class="built_in">read</span>(4, 0x7ffd1b7c265f, 1)              = -1 EAGAIN (Resource temporarily unavailable)</div><div class="line">gettimeofday(&#123;1505745631, 75664&#125;, NULL) = 0</div></pre></td></tr></table></figure>
<p>なんとなく TCPで53ポートで通信して、<br>HTTP/1.1でレスポンスが来ていることなどもわかる。<br>プロセスの動きをトレースすることでプログラムとカーネル側かの問題を切り分けることができる。</p>
<h3 id="gdbを使って原因を追う"><a href="#gdbを使って原因を追う" class="headerlink" title="gdbを使って原因を追う"></a>gdbを使って原因を追う</h3><p>最初に使った必ずエラーとなるphpを実行してSegmentation Faultを起こし、<br>coreファイルを出力してgdbでデバッグしてみる。</p>
<p>coreファイルはダンプした時点でのメモリ内容をそのまま記録しているので、そこから原因を特定できる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># php moduleが読込まれていること確認</span></div><div class="line">php -m | grep example</div><div class="line">example</div><div class="line"></div><div class="line"><span class="comment"># Segmentation faultになる</span></div><div class="line">/usr/<span class="built_in">local</span>/bin/php /var/www/html/error.php</div><div class="line">Segmentation fault (core dumped)</div><div class="line"></div><div class="line"><span class="comment"># プロセス確認</span></div><div class="line"><span class="comment"># child processは1つにしておく</span></div><div class="line">pstree -p</div><div class="line">apache2(1)---apache2(16)</div><div class="line"></div><div class="line">ps -e -o ppid,pid,<span class="built_in">stat</span>,<span class="built_in">command</span> | grep apache2</div><div class="line">    0     1 Ss   apache2 -DFOREGROUND</div><div class="line">    1    16 S    apache2 -DFOREGROUND</div></pre></td></tr></table></figure>
<p>apacheなどのプロセスが長時間実行されている場合などは、<br>gcore(generate-core-file)でcoreダンプファイルを作成してみる。</p>
<p>gdbでプロセスにアタッチすることでデバッグはできるが、gdbがプロセス制御を奪うため、next, step, run, continueなどでプログラムを実行しないと停止している状態となるため稼働中のapcheのプロセスなどには使えない。</p>
<p>gcoreを使った場合はcoreダンプファイルを作成している間だけattachされるため、プログラムの停止を最小に止めることができる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div></pre></td><td class="code"><pre><div class="line">gcore 16</div><div class="line"></div><div class="line">[Thread debugging using libthread_db enabled]</div><div class="line">Using host libthread_db library <span class="string">"/lib/x86_64-linux-gnu/libthread_db.so.1"</span>.</div><div class="line">0x00007f8754335190 <span class="keyword">in</span> __write_nocancel () at ../sysdeps/unix/syscall-template.S:84</div><div class="line">84	../sysdeps/unix/syscall-template.S: No such file or directory.</div><div class="line">warning: target file /proc/15/cmdline contained unexpected null characters</div><div class="line">Saved corefile core.16</div><div class="line"></div><div class="line"><span class="comment"># core ファイルができている</span></div><div class="line">ls</div><div class="line">core.16</div><div class="line"></div><div class="line"><span class="comment"># coreファイルにアタッチする</span></div><div class="line">gdb /usr/sbin/apache2 -c core.16</div><div class="line">GNU gdb (Debian 7.12-6) 7.12.0.20161007-git</div><div class="line">Copyright (C) 2016 Free Software Foundation, Inc.</div><div class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</div><div class="line">This is free software: you are free to change and redistribute it.</div><div class="line">There is NO WARRANTY, to the extent permitted by law.  Type <span class="string">"show copying"</span></div><div class="line">and <span class="string">"show warranty"</span> <span class="keyword">for</span> details.</div><div class="line">This GDB was configured as <span class="string">"x86_64-linux-gnu"</span>.</div><div class="line">Type <span class="string">"show configuration"</span> <span class="keyword">for</span> configuration details.</div><div class="line">For bug reporting instructions, please see:</div><div class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</div><div class="line">Find the GDB manual and other documentation resources online at:</div><div class="line">&lt;http://www.gnu.org/software/gdb/documentation/&gt;.</div><div class="line">For <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">"help"</span>.</div><div class="line">Type <span class="string">"apropos word"</span> to search <span class="keyword">for</span> commands related to <span class="string">"word"</span>...</div><div class="line">Reading symbols from /usr/sbin/apache2...(no debugging symbols found)...<span class="keyword">done</span>.</div><div class="line">[New LWP 16]</div><div class="line">[Thread debugging using libthread_db enabled]</div><div class="line">Using host libthread_db library <span class="string">"/lib/x86_64-linux-gnu/libthread_db.so.1"</span>.</div><div class="line">Core was generated by `apache2<span class="string">'.</span></div><div class="line">#0  0x00007f9a03637690 in __poll_nocancel () at ../sysdeps/unix/syscall-template.S:84</div><div class="line">84	../sysdeps/unix/syscall-template.S: No such file or directory.</div></pre></td></tr></table></figure>
<p>またSegmentation Faultが起きる場合はプロセスいなくなるので、あらかじめcoreファイルを出力するように設定しておくこともある。<br>この場合、エラーが発生すると所定のcoreファイルが出力される。</p>
<p>今回はphpで実際にSegmentation Faultを起こしてcoreファイルを吐き出す。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">curl http://localhost:8080/error.php</div><div class="line"></div><div class="line">ls /tmp</div><div class="line">core.cc0a7a572fde.apache2.1505406197</div></pre></td></tr></table></figure>
<p>gdbでcoreファイルをデバッグ</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">gdb /usr/sbin/apache2 -c core.cc0a7a572fde.apache2.1505406197</div><div class="line"></div><div class="line">GNU gdb (Debian 7.7.1+dfsg-5) 7.7.1</div><div class="line">Copyright (C) 2014 Free Software Foundation, Inc.</div><div class="line">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</div><div class="line">This is free software: you are free to change and redistribute it.</div><div class="line">There is NO WARRANTY, to the extent permitted by law.  Type <span class="string">"show copying"</span></div><div class="line">and <span class="string">"show warranty"</span> <span class="keyword">for</span> details.</div><div class="line">This GDB was configured as <span class="string">"x86_64-linux-gnu"</span>.</div><div class="line">Type <span class="string">"show configuration"</span> <span class="keyword">for</span> configuration details.</div><div class="line">For bug reporting instructions, please see:</div><div class="line">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</div><div class="line">Find the GDB manual and other documentation resources online at:</div><div class="line">&lt;http://www.gnu.org/software/gdb/documentation/&gt;.</div><div class="line">For <span class="built_in">help</span>, <span class="built_in">type</span> <span class="string">"help"</span>.</div><div class="line">Type <span class="string">"apropos word"</span> to search <span class="keyword">for</span> commands related to <span class="string">"word"</span>...</div><div class="line">Reading symbols from /usr/sbin/apache2...(no debugging symbols found)...<span class="keyword">done</span>.</div><div class="line">[New LWP 31]</div><div class="line">[Thread debugging using libthread_db enabled]</div><div class="line">Using host libthread_db library <span class="string">"/lib/x86_64-linux-gnu/libthread_db.so.1"</span>.</div><div class="line">Core was generated by `apache2 -DFOREGROUND<span class="string">'.</span></div><div class="line">Program terminated with signal SIGSEGV, Segmentation fault.</div><div class="line">#0  zif_down_method (ht=0, return_value=0x7f70ac52b210, return_value_ptr=0x7f70ac4f9088, this_ptr=0x0, return_value_used=0) at /tmp/extensions/example/example.c:72</div><div class="line">72	    strcpy(ptr, "down") ;</div><div class="line"></div><div class="line"># バックトレース</div><div class="line">(gdb) bt</div><div class="line">#0  zif_down_method (ht=0, return_value=0x7f70ac52b210, return_value_ptr=0x7f70ac4f9088, this_ptr=0x0, return_value_used=0) at /tmp/extensions/example/example.c:72</div><div class="line">#1  0x00007f70a8241173 in zend_do_fcall_common_helper_SPEC () from /usr/lib/apache2/modules/libphp5.so</div><div class="line">#2  0x00007f70a81ca360 in execute_ex () from /usr/lib/apache2/modules/libphp5.so</div><div class="line">#3  0x00007f70a81929d0 in zend_execute_scripts () from /usr/lib/apache2/modules/libphp5.so</div><div class="line">#4  0x00007f70a812dfc0 in php_execute_script () from /usr/lib/apache2/modules/libphp5.so</div><div class="line">#5  0x00007f70a82428ca in php_handler () from /usr/lib/apache2/modules/libphp5.so</div><div class="line">#6  0x000055798cdc3880 in ap_run_handler ()</div><div class="line">#7  0x000055798cdc3dc9 in ap_invoke_handler ()</div><div class="line">#8  0x000055798cdd9ca2 in ap_process_async_request ()</div><div class="line">#9  0x000055798cdd9e40 in ap_process_request ()</div><div class="line">#10 0x000055798cdd6742 in ?? ()</div><div class="line">#11 0x000055798cdcd130 in ap_run_process_connection ()</div><div class="line">#12 0x00007f70a8c757ba in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so</div><div class="line">#13 0x00007f70a8c75a01 in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so</div><div class="line">#14 0x00007f70a8c76667 in ?? () from /usr/lib/apache2/modules/mod_mpm_prefork.so</div><div class="line">#15 0x000055798cda784e in ap_run_mpm ()</div><div class="line">#16 0x000055798cda0673 in main ()</div><div class="line"></div><div class="line"># エラーが発生したファイル</div><div class="line">print (char *)executor_globals.active_op_array-&gt;filename</div><div class="line">$1 = 0x7f70ac529bc8 "/var/www/html/error.php"</div><div class="line"></div><div class="line"># エラーの発生した行数</div><div class="line">print executor_globals.current_execute_data.opline-&gt;lineno</div><div class="line">$2=2</div></pre></td></tr></table></figure>
<p>上記の内容から想定通りexample.c 72行目で落ちていることがわかる。</p>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>普段アプリケーションレイヤーを開発している人からすると、だいたいこの辺かなという感じで問題点を追うことができるが、はっきりとして原因を掴むために、<br>straceやgdbなどで追求できるようにしておくことは良いことだと思われた。</p>
<p>低レイヤーでの開発している人にとっては目新しいことではないでしょうが…</p>
<h3 id="今回使ったサンプル"><a href="#今回使ったサンプル" class="headerlink" title="今回使ったサンプル"></a>今回使ったサンプル</h3><p><a href="https://github.com/kazu69/example-debug-apache-service-operating" target="_blank" rel="external">example-debug-apache-service-operating</a></p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://techblog.yahoo.co.jp/tips/php/" target="_blank" rel="external">PHPでのデバッグ方法</a><br><a href="https://net-newbie.com/phpext/" target="_blank" rel="external">PHP Extension 開発入門</a><br><a href="https://httpd.apache.org/dev/debugging.html#gdb" target="_blank" rel="external">Apache HTTPD Debugging Guide - The Apache HTTP Server Project</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;稼働中のサービスにおいてapacheのプロセスが閾値を超える事象が頻発したり、&lt;br&gt;phpのバグを踏んだりした際に。なにが原因なのか究明のために行ったときの備忘録。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/web/"/>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/web/memo/"/>
    
    
  </entry>
  
  <entry>
    <title>Goのメモリ管理を眺めてみた</title>
    <link href="http://blog.kazu69.net/2017/08/20/memory-management-go/"/>
    <id>http://blog.kazu69.net/2017/08/20/memory-management-go/</id>
    <published>2017-08-19T15:28:05.000Z</published>
    <updated>2017-08-27T23:23:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>Golangでツールやアプリケーションを作ったりしてるが、<br>メモリ管理がどのようになっているのか気になったので眺めてみた。</p>
<a id="more"></a>
<h3 id="メモリ領域"><a href="#メモリ領域" class="headerlink" title="メモリ領域"></a>メモリ領域</h3><p>ざっくり復習のためメモリ領域についてまとめる。</p>
<p>メモリ領域は</p>
<table>
<thead>
<tr>
<th>メモリ領域</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>プログラム領域</td>
<td>マシン語に変換されたプログラムが格納される。この機械語を1行ずつ実行することで、プログラムが実行される。</td>
</tr>
<tr>
<td>静的領域</td>
<td>グローバル変数や静的変数などが入る。プログラム実行時にメモリ領域が確保される。メモリサイズは固定される。</td>
</tr>
<tr>
<td>ヒープ領域</td>
<td>塊という意味。プログラム実行時に確保されるが、実行時にしかメモリサイズがわからないので任意のサイズとなる。C言語のmalloc関数やnew演算子などで確保・管理される。新たにデータ猟奇が必要になると、未使用のメモリ領域を(飛び飛びになってしまうこともある)統合し、ノードに還元する。あらかじめ大きな確保する場合などに使われる。</td>
</tr>
<tr>
<td>スタック領域</td>
<td>積み重ねるという意味。一時変数、関数の引数、返り値などが一時的に格納される。メモリのサイズは固定で最後に積まれたメモリから最初に解放される(後入れ先だし: FILO)に則る。変数を定義しすぎたりするとメモリ領域を超えてオーバーフローする(スタックオーバーフロー)。現在のスコープで必要としている領域だけ確保できれば良い。</td>
</tr>
</tbody>
</table>
<p>ヒープで確保されたメモリが不要になった場合、プログラム側で開放できてないと猟奇が確保されたままになる(メモリリーク)。プログラムで開放するのではなく自動で開放する仕組みを持っているものもある。<br>この機能をガベージ・コレクトという。</p>
<h3 id="Golangのメモリ管理"><a href="#Golangのメモリ管理" class="headerlink" title="Golangのメモリ管理"></a>Golangのメモリ管理</h3><p>Golangのメモリ管理を見てみる。</p>
<p>goではビルド時に <a href="https://github.com/golang/go/wiki/CompilerOptimizations#escape-analysis-and-inlining" target="_blank" rel="external">-gcflags -mフラグを渡すことでコードを解析</a>できる。</p>
<p>ということで試してみる。</p>
<p>まずローカル変数を返すだけ</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span> main</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">    Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span> <span class="title">int</span></span> &#123;</div><div class="line">	v := <span class="number">1</span></div><div class="line">	<span class="keyword">return</span> v</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:7: can inline Test</div><div class="line">./main.go:3: can inline main</div><div class="line">./main.go:4: inlining call to Test</div></pre></td></tr></table></figure>
<p>この場合はスタックを使っている。</p>
<p>つづいてメモリのアドレスを返してみる。</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span> *<span class="title">int</span></span> &#123;</div><div class="line">	v := <span class="number">1</span></div><div class="line">	<span class="keyword">return</span> &amp;v</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:7: can inline Test</div><div class="line">./main.go:3: can inline main</div><div class="line">./main.go:4: inlining call to Test</div><div class="line">./main.go:4: main &amp;v does not escape</div><div class="line">./main.go:9: &amp;v escapes to heap</div><div class="line">./main.go:8: moved to heap: v</div></pre></td></tr></table></figure>
<p>この場合は、ヒープに置かれた。<br>アドレスからポインタの中身にアクセスする場合</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span> <span class="title">int</span></span> &#123;</div><div class="line">	v := <span class="number">1</span></div><div class="line">	p := &amp;v</div><div class="line">	<span class="keyword">return</span> *p</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:7: can inline Test</div><div class="line">./main.go:3: can inline main</div><div class="line">./main.go:4: inlining call to Test</div><div class="line">./main.go:4: main &amp;v does not escape</div><div class="line">./main.go:9: Test &amp;v does not escape</div></pre></td></tr></table></figure>
<p>この場合はスタックに置かれる。</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span> *<span class="title">int</span></span> &#123;</div><div class="line">	v := <span class="built_in">new</span>(<span class="keyword">int</span>)</div><div class="line"></div><div class="line">	<span class="keyword">return</span> v</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:11: can inline Test</div><div class="line">./main.go:7: can inline main</div><div class="line">./main.go:8: inlining call to Test</div><div class="line">./main.go:8: main new(int) does not escape</div><div class="line">./main.go:12: new(int) escapes to heap</div></pre></td></tr></table></figure>
<p>ポインタを返すのでヒープに置かれる。<br>new演算子でメモリを確保してポインタを返さない場合</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span></span> &#123;</div><div class="line">	v := <span class="built_in">new</span>(<span class="keyword">int</span>)</div><div class="line"></div><div class="line">	<span class="keyword">if</span> v == <span class="literal">nil</span> &#123;</div><div class="line">		<span class="keyword">return</span></div><div class="line">	&#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:11: can inline Test</div><div class="line">./main.go:7: can inline main</div><div class="line">./main.go:8: inlining call to Test</div><div class="line">./main.go:8: main new(int) does not escape</div><div class="line">./main.go:12: Test new(int) does not escape</div></pre></td></tr></table></figure>
<p>関数内でのみ使われるだけなので、スタックに置かれている。<br>ローカル変数でも他の関数に渡すと</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span></span> &#123;</div><div class="line">	v := <span class="number">1</span></div><div class="line">	fmt.Println(v)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:11: v escapes to heap</div><div class="line">./main.go:11: Test ... argument does not escape</div></pre></td></tr></table></figure>
<p>ヒープに置かれている。</p>
<p>続いて構造体を使ってみる。<br>シンプルに構造体を返すだけ</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">type</span> Human <span class="keyword">struct</span> &#123;</div><div class="line">	Name <span class="keyword">string</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span> <span class="title">Human</span></span> &#123;</div><div class="line">	human := Human&#123;</div><div class="line">		Name: <span class="string">"Bob"</span>,</div><div class="line">	&#125;</div><div class="line"></div><div class="line">	<span class="keyword">return</span> human</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:11: can inline Test</div><div class="line">./main.go:7: can inline main</div><div class="line">./main.go:8: inlining call to Test</div></pre></td></tr></table></figure>
<p>スタックに置かれている。</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span> *<span class="title">Human</span></span> &#123;</div><div class="line">	human := <span class="built_in">new</span>(Human)</div><div class="line">	human.Name = <span class="string">"Bob"</span></div><div class="line"></div><div class="line">	<span class="keyword">return</span> human</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:11: can inline Test</div><div class="line">./main.go:7: can inline main</div><div class="line">./main.go:8: inlining call to Test</div><div class="line">./main.go:8: main new(Human) does not escape</div><div class="line">./main.go:12: new(Human) escapes to heap</div></pre></td></tr></table></figure>
<p>ポインタを返すのでヒープに置かれている。<br>new演算子を使っても関数内で処理が終わってる場合</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span></span> &#123;</div><div class="line">	human := <span class="built_in">new</span>(Human)</div><div class="line">	human.Name = <span class="string">"Bob"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:11: can inline Test</div><div class="line">./main.go:7: can inline main</div><div class="line">./main.go:8: inlining call to Test</div><div class="line">./main.go:8: main new(Human) does not escape</div><div class="line">./main.go:12: Test new(Human) does not escape</div></pre></td></tr></table></figure>
<p>変数はスタックに置かれている。<br>ポインタを保存した変数を返す場合</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</div><div class="line">	Test()</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">func</span> <span class="title">Test</span><span class="params">()</span> *<span class="title">Human</span></span> &#123;</div><div class="line">	human := &amp;Human&#123;<span class="string">"Tom"</span>&#125;</div><div class="line">	<span class="keyword">return</span> human</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># command-line-arguments</span></div><div class="line">./main.go:11: can inline Test</div><div class="line">./main.go:7: can inline main</div><div class="line">./main.go:8: inlining call to Test</div><div class="line">./main.go:8: main &amp;Human literal does not escape</div><div class="line">./main.go:12: &amp;Human literal escapes to heap</div></pre></td></tr></table></figure>
<p>ヒープに置かれる。</p>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>Goの場合は、基本的にスタック領域を使うよう試みる。<br>ローカルの変数でも外部関数に渡されたり、ポインタを返す場合はヒープ領域が使われる。<br>これはローカル変数がスコープとなる関数の処理終了後も参照される可能性があるためらしい。</p>
<p>new演算子によるメモリの割り当ては必ずしもヒープを使うわけではない。</p>
<p>ということで、関数内で参照のみされる変数は実態を渡すことで、<br>アプリケーションとしてのパフォーマンスが良くなるということがわかった。</p>
<p>GCに関してはまた別で調べてみたい。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="http://golang.jp/effective_go#allocation_new" target="_blank" rel="external">実践Go言語 - golang.jp</a><br><a href="http://ascii.jp/elem/000/001/496/1496211/" target="_blank" rel="external">Go言語のメモリ管理</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Golangでツールやアプリケーションを作ったりしてるが、&lt;br&gt;メモリ管理がどのようになっているのか気になったので眺めてみた。&lt;/p&gt;
    
    </summary>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/memo/"/>
    
    
  </entry>
  
  <entry>
    <title>React Roter v4 (RRv4) を使用した時の備忘録</title>
    <link href="http://blog.kazu69.net/2017/08/10/using-react-router-v4/"/>
    <id>http://blog.kazu69.net/2017/08/10/using-react-router-v4/</id>
    <published>2017-08-10T09:21:11.000Z</published>
    <updated>2017-08-27T23:21:40.000Z</updated>
    
    <content type="html"><![CDATA[<p>react app を使う際にルーティングとして利用する<a href="https://github.com/ReactTraining/react-router" target="_blank" rel="external">react-router</a>が<a href="https://github.com/ReactTraining/react-router/releases/tag/v4.0.0" target="_blank" rel="external">v4</a>になっていたので、ざっくりと触ってみた時の備忘録。</p>
<a id="more"></a>
<p>react-routerはv3と大きく違うため、正式なドキュメントを参考にしないとv4以前のものと混同してしまっておそらくはまってしうんじゃないかな。</p>
<h3 id="パッケージ"><a href="#パッケージ" class="headerlink" title="パッケージ"></a>パッケージ</h3><p>まず、routerは大きく3つのパッケージに分割されている。</p>
<table>
<thead>
<tr>
<th>package</th>
<th>description</th>
</tr>
</thead>
<tbody>
<tr>
<td>react-router</td>
<td>core package</td>
</tr>
<tr>
<td>react-router-dom</td>
<td>react-routerとdomをbinding</td>
</tr>
<tr>
<td>react-router-native</td>
<td>react-routerとreact-nativeをbinding</td>
</tr>
</tbody>
</table>
<p>今回はウェブアプリケーションを利用するため <code>react-router-dom</code> を使ってみた。</p>
<p>このpackageには <code>BrowserRouter</code> と <code>HashRouter</code> 、 <code>Link</code> 、<code>NavLink</code> コンポーネントがある。</p>
<p>アプリケーションに動的なURIが含まれる場合は <code>BrowserRouter</code>を利用する。こちらはbrowserの<a href="https://developer.mozilla.org/ja/docs/Web/API/History" target="_blank" rel="external">History API</a>をサポートしている。<br><code>HashRouter</code> はwindow.location.hashを使ってルーティングと同期している。<br><code>MemoryRouter</code> (URLは変更しないで履歴をメモリ管理するルーター) などcore packageでザポートされているrouterも利用は可能っぽい。</p>
<h3 id="routerコンポーネント作成"><a href="#routerコンポーネント作成" class="headerlink" title="routerコンポーネント作成"></a>routerコンポーネント作成</h3><p><code>BrowserRouter</code> を使う場合</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> &#123; BrowserRouter, Route &#125; <span class="keyword">from</span> <span class="string">'react-router-dom'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> App = <span class="function"><span class="params">()</span> =&gt;</span> (</div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"layout"</span>&gt;</span></span></div><div class="line">        <span class="tag">&lt;<span class="name">Header</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">Main</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">Footer</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">)</div><div class="line"></div><div class="line">ReactDOM.render（（</div><div class="line">  &lt;BrowserRouter&gt; </div><div class="line">    <span class="xml"><span class="tag">&lt;<span class="name">App</span> /&gt;</span> </span></div><div class="line">  <span class="tag">&lt;/ <span class="attr">BrowserRouter</span>&gt;</span></div><div class="line">), document.getElementById（ 'root'））</div></pre></td></tr></table></figure>
<h3 id="route-と-path"><a href="#route-と-path" class="headerlink" title="route と path"></a>route と path</h3><p>v4ではrouteで指定したpathと<code>localtion.pathname</code>が一致したcomponetをレンダリングする。</p>
<p>例えば以下ような場合に</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Switch&gt;</div><div class="line">  &lt;Route　 path='/' component=&#123;HomeComponent&#125;/&gt;</div><div class="line">  &lt;Route path='/hoge' component=&#123;HogeComponent&#125;/&gt;</div><div class="line">  &lt;Route path='/fuga' component=&#123;FugaComponent&#125;/&gt;</div><div class="line">&lt;/Switch&gt;</div></pre></td></tr></table></figure>
<p><code>/hoge</code> へのアクセスで</p>
<ul>
<li><code>/</code> がマッチするため <code>HomeComponent</code> をレンダリング</li>
<li><code>/hoge</code> がマッチするため <code>HogeComponent</code> をレンダリング</li>
<li>マッチしないため <code>FugaComponent</code> はレンダリングされない</li>
</ul>
<p>となる。</p>
<p>pathnameなのでurlのパラメーターなどは関係しない。<br>パスのマッチングには <a href="https://github.com/pillarjs/path-to-regexp" target="_blank" rel="external">path-to-regexp</a> パッケージが使われている。</p>
<p>### routeコンポーネント作成</p>
<p>実際のルーティング部分を作成する。先ほどの例では <code>&lt;App /&gt;</code> コンポーネントの中のいずれかのコンポーネント内で実際のルーティング処理を記述することになる。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Switch&gt;</div><div class="line">  &lt;Route exact path='/' component=&#123;HomeComponent&#125;/&gt;</div><div class="line">  &lt;Route path='/add' component=&#123;AddComponent&#125;/&gt;</div><div class="line">  &lt;Route path='/edit/:id' component=&#123;EditComponent&#125;/&gt;</div><div class="line">&lt;/Switch&gt;</div></pre></td></tr></table></figure>
<p><code>exact</code> プロパティは <code>location.pathname</code> と値が正確に一致した場合のみの適用される。</p>
<h3 id="routeのレンダリング"><a href="#routeのレンダリング" class="headerlink" title="routeのレンダリング"></a>routeのレンダリング</h3><p>Routeコンポーネントのレンダリングには3つの方法がある。</p>
<h4 id="component"><a href="#component" class="headerlink" title="component"></a>component</h4><p>指定されたコンポーネントを<code>React.createElement</code>で作成するため、新しいコンポーネントを作成します。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Route path=<span class="string">"/user/:username"</span> component=&#123;User&#125;/&gt;</div><div class="line"></div><div class="line"><span class="keyword">const</span> User = <span class="function">(<span class="params">&#123; match &#125;</span>) =&gt;</span> &#123;</div><div class="line">  <span class="keyword">return</span> <span class="xml"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello &#123;match.params.username&#125;!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h4 id="render"><a href="#render" class="headerlink" title="render"></a>render</h4><p>comonentをマウントしないで、インラインでレンダリングすることができる。<br>ただし component が優先されるらしいので同じ <code>Route</code> で両者を使用するのは避けたほうがいい。</p>
<p><strong>レンダリングするコンポーネントへpropsを渡す時などはこちらを使うとやりやすい感じ。</strong></p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// convenient inline rendering</span></div><div class="line">&lt;Route path=<span class="string">"/home"</span> render=&#123;() =&gt; <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span>&#125;/&gt;</div><div class="line"></div><div class="line"><span class="comment">// wrapping/composing</span></div><div class="line"><span class="keyword">const</span> RouteWrapper = <span class="function">(<span class="params">&#123; component: Component, ...rest &#125;</span>) =&gt;</span> (</div><div class="line">  &lt;Route &#123;...rest&#125; render=&#123; props =&gt; (</div><div class="line">    &lt;SomeCompoment&gt;</div><div class="line">      &lt;Component &#123;...props&#125;/&gt;</div><div class="line">    &lt;/SomeCompoment&gt;</div><div class="line">  )&#125;/&gt;</div><div class="line">)</div></pre></td></tr></table></figure>
<h4 id="children"><a href="#children" class="headerlink" title="children"></a>children</h4><p>pathが条件に一致するかどうかをレンダリングしたい場合などは、<code>children</code> propを使う。<br>pathと一致するしないに関わらず常にレンダリングされる。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">&lt;ul&gt;</div><div class="line">  <span class="xml"><span class="tag">&lt;<span class="name">ItemLink</span> <span class="attr">to</span>=<span class="string">"/somewhere"</span>/&gt;</span></span></div><div class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> ItemLink = <span class="function">(<span class="params">&#123; to, ...rest &#125;</span>) =&gt;</span> (</div><div class="line">  &lt;Route path=&#123;to&#125; children=&#123;(&#123; match &#125;) =&gt; (</div><div class="line">    &lt;li className=&#123;match ? 'active' : ''&#125;&gt;</div><div class="line">      &lt;Link to=&#123;to&#125; &#123;...rest&#125;/&gt;</div><div class="line">    &lt;/li&gt;</div><div class="line">  )&#125;/&gt;</div><div class="line">)</div></pre></td></tr></table></figure>
<h3 id="params"><a href="#params" class="headerlink" title="params"></a>params</h3><p>動的なURIの場合、パラメーターはコンポーネントで取得する必要がある。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;Switch&gt;</div><div class="line">  &lt;Route exact path='/' component=&#123;HomeComponent&#125;/&gt;</div><div class="line">  &lt;Route path='/add' component=&#123;AddComponent&#125;/&gt;</div><div class="line">  &lt;Route path='/edit/:id' component=&#123;EditComponent&#125;/&gt;</div><div class="line">&lt;/Switch&gt;</div></pre></td></tr></table></figure>
<p>上記のような場合、<code>/edit/:id</code> で <code>id</code> をコンポーネントで受け取る場合。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> EditComponent = <span class="function"><span class="params">props</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> id = <span class="built_in">parseInt</span>(props.match.params.id, <span class="number">10</span>)</div><div class="line"></div><div class="line">    <span class="keyword">return</span> (</div><div class="line">        <span class="xml"><span class="tag">&lt;<span class="name">div</span>&gt;</span>id: &#123;id&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></div><div class="line">    )</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><code>props.match.params</code> で取得できる。</p>
<h3 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h3><p>最後にページ遷移を行う場合に<code>Link</code> コンポーネントを利用する。<br>これによりURLが更新されて、ページをリロードすることなくコンポーネントがレンダリングすることができる。</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">import &#123; Link &#125; from 'react-router-dom'</div><div class="line"></div><div class="line">&lt;Link to="/hoge"&gt;Hoge&lt;/Link&gt;</div><div class="line">&lt;Link to=&#123;&#123;</div><div class="line">  pathname: '/search',</div><div class="line">  search: '?q=string',</div><div class="line">  hash: '#hash-query',</div><div class="line">  state: &#123; examplestate: true &#125;</div><div class="line">&#125;&#125;/&gt;</div></pre></td></tr></table></figure>
<p>URLの変更を検知して、popstateを発火しているので、ページ移動のたびにコンポーネントを再描画できるっぽい。<br>(<a href="https://github.com/ReactTraining/history" target="_blank" rel="external">history.listen</a>を利用)</p>
<p>また、ナビゲーションなど該当ページのURLとリンク先URLがマッチした時にスタイルを適用するとかの処理が必要な場合は、<code>NavLink</code> コンポーネントを使うといい感じ。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">import &#123; NavLink &#125; from <span class="string">'react-router-dom'</span></div><div class="line">&lt;NavLink to=<span class="string">"/hoge"</span>&gt;Hoge&lt;/NavLink&gt;</div><div class="line">&lt;NavLink</div><div class="line">  to=<span class="string">"/fuga"</span></div><div class="line">  activeClassName=<span class="string">"current-page"</span></div><div class="line">&gt;Fuga&lt;/NavLink&gt;</div></pre></td></tr></table></figure>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>v3からワイルドに変更されていることで有名なんですが、<br>Roterが小さなコンポーネントで分割構成されていることで、Reactを使っていると、ルーティング周りは実装しやすい。</p>
<p>ルーター経由でコンポーネントにpropsを渡す時にrenderすることが最適解なのか未だにわかっていない感がある。</p>
<h3 id="作成したサンプル"><a href="#作成したサンプル" class="headerlink" title="作成したサンプル"></a>作成したサンプル</h3><p><a href="https://github.com/kazu69/react-redux-router-ssr-example" target="_blank" rel="external">react-redux-router-ssr-example</a></p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://reacttraining.com/react-router/" target="_blank" rel="external">React Router: Declarative Routing for React.js</a><br><a href="https://github.com/ReactTraining/react-router" target="_blank" rel="external">ReactTraining/react-router</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;react app を使う際にルーティングとして利用する&lt;a href=&quot;https://github.com/ReactTraining/react-router&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;react-router&lt;/a&gt;が&lt;a href=&quot;https://github.com/ReactTraining/react-router/releases/tag/v4.0.0&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;v4&lt;/a&gt;になっていたので、ざっくりと触ってみた時の備忘録。&lt;/p&gt;
    
    </summary>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/memo/"/>
    
    
  </entry>
  
  <entry>
    <title>WHOISの後継プロトコルRDAPに触れてみる</title>
    <link href="http://blog.kazu69.net/2017/07/15/try-whois-successor-protocol-rdap/"/>
    <id>http://blog.kazu69.net/2017/07/15/try-whois-successor-protocol-rdap/</id>
    <published>2017-07-15T04:45:32.000Z</published>
    <updated>2017-07-26T16:19:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>ドメイン情報の参照する際に使う<strong>whois</strong>コマンド。<br>whoisプロトコルは43番ポートを使ってドメイン情報をテキストでやり取りするシンプルなもの。</p>
<p>しかし、決められたフォーマットがないためサーバーによってレスポンス結果が異なるということがある。<br>これはプログラムなどから使う場合はとても不便なのが実情。</p>
<p>他にも色々と問題があり、それらを解決した新しいプロトコルが<strong>RDAP(Registration Data Access Protocol)</strong>ということ。</p>
<a id="more"></a>
<h2 id="RDAPの特徴"><a href="#RDAPの特徴" class="headerlink" title="RDAPの特徴"></a>RDAPの特徴</h2><ul>
<li>RESTfulなAPI</li>
<li>JSON形式のレスポンス</li>
<li>フォーマットが決まっているので機械可読性が高い</li>
<li>Bootstrap</li>
</ul>
<h3 id="RESTfulなAPI"><a href="#RESTfulなAPI" class="headerlink" title="RESTfulなAPI"></a>RESTfulなAPI</h3><p>HTTPを使って、RESTfulで問い合わせができる。</p>
<p>例えばAPNICに問合わせる場合</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ip</span></div><div class="line">https://rdap.apnic.net/ip/xxx.xxx.xxx.xxx/</div><div class="line"></div><div class="line"><span class="comment"># domain</span></div><div class="line">https://rdap.apnic.net/domain/DOMAIN-NAME/</div><div class="line"></div><div class="line"><span class="comment"># AS番号</span></div><div class="line">https://rdap.apnic.net/autnum/XXXXX/</div></pre></td></tr></table></figure>
<p>という形となる。</p>
<h3 id="JSON形式のレスポンス"><a href="#JSON形式のレスポンス" class="headerlink" title="JSON形式のレスポンス"></a>JSON形式のレスポンス</h3><p>上記のようにと言わせると、json形式でデータを得られる。<br>しかも<strong>フォーマットが決まっている</strong>のでプログラムなどから扱いやすい。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// http://rdap.apnic.net/ip/221.112.0.0 の結果</span></div><div class="line">&#123;</div><div class="line">  <span class="string">"handle"</span> : <span class="string">"221.112.0.0 - 221.119.255.255"</span>,</div><div class="line">  <span class="string">"startAddress"</span> : <span class="string">"221.112.0.0"</span>,</div><div class="line">  <span class="string">"endAddress"</span> : <span class="string">"221.119.255.255"</span>,</div><div class="line">  <span class="string">"ipVersion"</span> : <span class="string">"v4"</span>,</div><div class="line">  <span class="string">"name"</span> : <span class="string">"JPNIC-NET-JP"</span>,</div><div class="line">  <span class="string">"type"</span> : <span class="string">"ALLOCATED PORTABLE"</span>,</div><div class="line">  <span class="string">"country"</span> : <span class="string">"JP"</span>,</div><div class="line">  <span class="string">"objectClassName"</span> : <span class="string">"ip network"</span>,</div><div class="line">  <span class="string">"entities"</span> : [ &#123;</div><div class="line">    <span class="string">"handle"</span> : <span class="string">"IRT-JPNIC-JP"</span>,</div><div class="line">    <span class="string">"vcardArray"</span> : [ <span class="string">"vcard"</span>, [ [ <span class="string">"version"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"4.0"</span> ], [ <span class="string">"fn"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"IRT-JPNIC-JP"</span> ], [ <span class="string">"kind"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"group"</span> ], [ <span class="string">"email"</span>, &#123;</div><div class="line">      <span class="string">"pref"</span> : <span class="string">"1"</span></div><div class="line">    &#125;, <span class="string">"text"</span>, <span class="string">"hostmaster@nic.ad.jp"</span> ], [ <span class="string">"adr"</span>, &#123;</div><div class="line">      <span class="string">"label"</span> : <span class="string">"Urbannet-Kanda Bldg 4F, 3-6-2 Uchi-Kanda\\nChiyoda-ku, Tokyo 101-0047, Japan"</span></div><div class="line">    &#125;, <span class="string">"text"</span>, [ <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span> ] ], [ <span class="string">"email"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"hostmaster@nic.ad.jp"</span> ] ] ],</div><div class="line">    <span class="string">"roles"</span> : [ <span class="string">"abuse"</span> ],</div><div class="line">    <span class="string">"objectClassName"</span> : <span class="string">"entity"</span>,</div><div class="line">    <span class="string">"links"</span> : [ &#123;</div><div class="line">      <span class="string">"value"</span> : <span class="string">"http://rdap.apnic.net/ip/221.112.0.0/13"</span>,</div><div class="line">      <span class="string">"rel"</span> : <span class="string">"self"</span>,</div><div class="line">      <span class="string">"href"</span> : <span class="string">"http://rdap.apnic.net/entity/IRT-JPNIC-JP"</span>,</div><div class="line">      <span class="string">"type"</span> : <span class="string">"application/rdap+json"</span></div><div class="line">    &#125; ]</div><div class="line">  &#125;, &#123;</div><div class="line">    <span class="string">"handle"</span> : <span class="string">"JNIC1-AP"</span>,</div><div class="line">    <span class="string">"vcardArray"</span> : [ <span class="string">"vcard"</span>, [ [ <span class="string">"version"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"4.0"</span> ], [ <span class="string">"fn"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"Japan Network Information Center"</span> ], [ <span class="string">"kind"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"group"</span> ], [ <span class="string">"adr"</span>, &#123;</div><div class="line">      <span class="string">"label"</span> : <span class="string">"Urbannet-Kanda Bldg 4F\\n3-6-2 Uchi-Kanda\\nChiyoda-ku, Tokyo 101-0047,Japan"</span></div><div class="line">    &#125;, <span class="string">"text"</span>, [ <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span> ] ], [ <span class="string">"tel"</span>, &#123;</div><div class="line">      <span class="string">"type"</span> : <span class="string">"voice"</span></div><div class="line">    &#125;, <span class="string">"text"</span>, <span class="string">"+81-3-5297-2311"</span> ], [ <span class="string">"tel"</span>, &#123;</div><div class="line">      <span class="string">"type"</span> : <span class="string">"fax"</span></div><div class="line">    &#125;, <span class="string">"text"</span>, <span class="string">"+81-3-5297-2312"</span> ], [ <span class="string">"email"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"hostmaster@nic.ad.jp"</span> ] ] ],</div><div class="line">    <span class="string">"roles"</span> : [ <span class="string">"technical"</span>, <span class="string">"administrative"</span> ],</div><div class="line">    <span class="string">"objectClassName"</span> : <span class="string">"entity"</span>,</div><div class="line">    <span class="string">"links"</span> : [ &#123;</div><div class="line">      <span class="string">"value"</span> : <span class="string">"http://rdap.apnic.net/ip/221.112.0.0/13"</span>,</div><div class="line">      <span class="string">"rel"</span> : <span class="string">"self"</span>,</div><div class="line">      <span class="string">"href"</span> : <span class="string">"http://rdap.apnic.net/entity/JNIC1-AP"</span>,</div><div class="line">      <span class="string">"type"</span> : <span class="string">"application/rdap+json"</span></div><div class="line">    &#125; ]</div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"remarks"</span> : [ &#123;</div><div class="line">    <span class="string">"title"</span> : <span class="string">"description"</span>,</div><div class="line">    <span class="string">"description"</span> : [ <span class="string">"Japan Network Information Center"</span> ]</div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"links"</span> : [ &#123;</div><div class="line">    <span class="string">"value"</span> : <span class="string">"http://rdap.apnic.net/ip/221.112.0.0/13"</span>,</div><div class="line">    <span class="string">"rel"</span> : <span class="string">"self"</span>,</div><div class="line">    <span class="string">"href"</span> : <span class="string">"http://rdap.apnic.net/ip/221.112.0.0/13"</span>,</div><div class="line">    <span class="string">"type"</span> : <span class="string">"application/rdap+json"</span></div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"events"</span> : [ &#123;</div><div class="line">    <span class="string">"eventAction"</span> : <span class="string">"last changed"</span>,</div><div class="line">    <span class="string">"eventDate"</span> : <span class="string">"2015-08-26T01:25:52Z"</span></div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"rdapConformance"</span> : [ <span class="string">"rdap_level_0"</span> ],</div><div class="line">  <span class="string">"notices"</span> : [ &#123;</div><div class="line">    <span class="string">"title"</span> : <span class="string">"Source"</span>,</div><div class="line">    <span class="string">"description"</span> : [ <span class="string">"Objects returned came from source"</span>, <span class="string">"APNIC"</span> ]</div><div class="line">  &#125;, &#123;</div><div class="line">    <span class="string">"title"</span> : <span class="string">"Terms and Conditions"</span>,</div><div class="line">    <span class="string">"description"</span> : [ <span class="string">"This is the APNIC WHOIS Database query service. The objects are in RDAP format."</span> ],</div><div class="line">    <span class="string">"links"</span> : [ &#123;</div><div class="line">      <span class="string">"value"</span> : <span class="string">"http://rdap.apnic.net/ip/221.112.0.0"</span>,</div><div class="line">      <span class="string">"rel"</span> : <span class="string">"terms-of-service"</span>,</div><div class="line">      <span class="string">"href"</span> : <span class="string">"http://www.apnic.net/db/dbcopyright.html"</span>,</div><div class="line">      <span class="string">"type"</span> : <span class="string">"text/html"</span></div><div class="line">    &#125; ]</div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"port43"</span> : <span class="string">"whois.apnic.net"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h3><p>検索対象となるIPアドレスなどがどの<strong>RIP</strong>(Regional Internet Registry: 地域インターネットレジストリ)に登録されてるかをBootstrapファイルを参照することでわかるようになる。</p>
<p>たとえば管轄外のリソースへの問合せがあった場合、適切なサーバーにリダイレクトするというような処理を行うこともできる。<br>現在はレジストリを人手で探しているので、これにより自動化が捗る。</p>
<h2 id="RDAPを試す"><a href="#RDAPを試す" class="headerlink" title="RDAPを試す"></a>RDAPを試す</h2><p>2017/07 現在においてサービスを実際に提供しているのは以下のみ。</p>
<ul>
<li><a href="https://rdap.apnic.net/" target="_blank" rel="external">https://rdap.apnic.net/</a></li>
<li><a href="https://rdap.arin.net/" target="_blank" rel="external">https://rdap.arin.net/</a></li>
<li><a href="https://rdap.db.ripe.net/" target="_blank" rel="external">https://rdap.db.ripe.net/</a></li>
<li><a href="https://rdap.lacnic.net/rdap/" target="_blank" rel="external">https://rdap.lacnic.net/rdap/</a></li>
<li><a href="https://rdap.afrinic.net/rdap/" target="_blank" rel="external">https://rdap.afrinic.net/rdap/</a></li>
</ul>
<p>APNICのNIR(国別レジストリ)は検討中らしい。</p>
<p>ということでお試ししてみる。<br>jsで簡単に</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> fetch = <span class="built_in">require</span>(<span class="string">'node-fetch'</span>)</div><div class="line"><span class="keyword">const</span> url = <span class="string">'https://rdap.apnic.net/ip/133.130.35.170'</span></div><div class="line"></div><div class="line"><span class="keyword">const</span> fetchRdap = <span class="keyword">async</span> <span class="function"><span class="keyword">function</span>(<span class="params">url</span>) </span>&#123;</div><div class="line">  <span class="keyword">let</span> response = <span class="keyword">await</span> fetch(url)</div><div class="line">  <span class="keyword">let</span> json = <span class="keyword">await</span> response.json()</div><div class="line">  <span class="keyword">return</span> json</div><div class="line">&#125;</div><div class="line"></div><div class="line">fetchRdap(url)</div><div class="line">  .then(<span class="function"><span class="params">data</span> =&gt;</span> <span class="built_in">console</span>.log(data))</div><div class="line">  .catch(<span class="function"><span class="params">reason</span> =&gt;</span> <span class="built_in">console</span>.log(reason.message))</div></pre></td></tr></table></figure>
<p>で以下のようにな結果が取得できる</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="string">"handle"</span> : <span class="string">"133.0.0.0 - 133.255.255.255"</span>,</div><div class="line">  <span class="string">"startAddress"</span> : <span class="string">"133.0.0.0"</span>,</div><div class="line">  <span class="string">"endAddress"</span> : <span class="string">"133.255.255.255"</span>,</div><div class="line">  <span class="string">"ipVersion"</span> : <span class="string">"v4"</span>,</div><div class="line">  <span class="string">"name"</span> : <span class="string">"JPNIC-NET-JP-ERX"</span>,</div><div class="line">  <span class="string">"type"</span> : <span class="string">"ALLOCATED PORTABLE"</span>,</div><div class="line">  <span class="string">"country"</span> : <span class="string">"JP"</span>,</div><div class="line">  <span class="string">"objectClassName"</span> : <span class="string">"ip network"</span>,</div><div class="line">  <span class="string">"entities"</span> : [ &#123;</div><div class="line">    <span class="string">"handle"</span> : <span class="string">"JNIC1-AP"</span>,</div><div class="line">    <span class="string">"vcardArray"</span> : [ <span class="string">"vcard"</span>, [ [ <span class="string">"version"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"4.0"</span> ], [ <span class="string">"fn"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"Japan Network Information Center"</span> ], [ <span class="string">"kind"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"group"</span> ], [ <span class="string">"adr"</span>, &#123;</div><div class="line">      <span class="string">"label"</span> : <span class="string">"Urbannet-Kanda Bldg 4F\\n3-6-2 Uchi-Kanda\\nChiyoda-ku, Tokyo 101-0047,Japan"</span></div><div class="line">    &#125;, <span class="string">"text"</span>, [ <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span>, <span class="string">""</span> ] ], [ <span class="string">"tel"</span>, &#123;</div><div class="line">      <span class="string">"type"</span> : <span class="string">"voice"</span></div><div class="line">    &#125;, <span class="string">"text"</span>, <span class="string">"+81-3-5297-2311"</span> ], [ <span class="string">"tel"</span>, &#123;</div><div class="line">      <span class="string">"type"</span> : <span class="string">"fax"</span></div><div class="line">    &#125;, <span class="string">"text"</span>, <span class="string">"+81-3-5297-2312"</span> ], [ <span class="string">"email"</span>, &#123; &#125;, <span class="string">"text"</span>, <span class="string">"hostmaster@nic.ad.jp"</span> ] ] ],</div><div class="line">    <span class="string">"roles"</span> : [ <span class="string">"technical"</span>, <span class="string">"administrative"</span> ],</div><div class="line">    <span class="string">"objectClassName"</span> : <span class="string">"entity"</span>,</div><div class="line">    <span class="string">"links"</span> : [ &#123;</div><div class="line">      <span class="string">"value"</span> : <span class="string">"https://rdap.apnic.net/ip/133.0.0.0/8"</span>,</div><div class="line">      <span class="string">"rel"</span> : <span class="string">"self"</span>,</div><div class="line">      <span class="string">"href"</span> : <span class="string">"https://rdap.apnic.net/entity/JNIC1-AP"</span>,</div><div class="line">      <span class="string">"type"</span> : <span class="string">"application/rdap+json"</span></div><div class="line">    &#125; ]</div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"remarks"</span> : [ &#123;</div><div class="line">    <span class="string">"title"</span> : <span class="string">"description"</span>,</div><div class="line">    <span class="string">"description"</span> : [ <span class="string">"Japan Network Information Center"</span> ]</div><div class="line">  &#125;, &#123;</div><div class="line">    <span class="string">"title"</span> : <span class="string">"remarks"</span>,</div><div class="line">    <span class="string">"description"</span> : [ <span class="string">"133/8 block is an ERX range which transfered from"</span>, <span class="string">"ARIN to APNIC on 2009-10-30"</span>, <span class="string">"The original allocation date was 1997-03-01"</span>, <span class="string">"Please search whois.nic.ad.jp for more information"</span>, <span class="string">"about this range"</span>, <span class="string">"% whois -h whois.nic.ad.jp ***.***.***.***/e"</span> ]</div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"links"</span> : [ &#123;</div><div class="line">    <span class="string">"value"</span> : <span class="string">"https://rdap.apnic.net/ip/133.0.0.0/8"</span>,</div><div class="line">    <span class="string">"rel"</span> : <span class="string">"self"</span>,</div><div class="line">    <span class="string">"href"</span> : <span class="string">"https://rdap.apnic.net/ip/133.0.0.0/8"</span>,</div><div class="line">    <span class="string">"type"</span> : <span class="string">"application/rdap+json"</span></div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"events"</span> : [ &#123;</div><div class="line">    <span class="string">"eventAction"</span> : <span class="string">"last changed"</span>,</div><div class="line">    <span class="string">"eventDate"</span> : <span class="string">"2009-10-30T00:51:09Z"</span></div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"rdapConformance"</span> : [ <span class="string">"rdap_level_0"</span> ],</div><div class="line">  <span class="string">"notices"</span> : [ &#123;</div><div class="line">    <span class="string">"title"</span> : <span class="string">"Source"</span>,</div><div class="line">    <span class="string">"description"</span> : [ <span class="string">"Objects returned came from source"</span>, <span class="string">"APNIC"</span> ]</div><div class="line">  &#125;, &#123;</div><div class="line">    <span class="string">"title"</span> : <span class="string">"Terms and Conditions"</span>,</div><div class="line">    <span class="string">"description"</span> : [ <span class="string">"This is the APNIC WHOIS Database query service. The objects are in RDAP format."</span> ],</div><div class="line">    <span class="string">"links"</span> : [ &#123;</div><div class="line">      <span class="string">"value"</span> : <span class="string">"https://rdap.apnic.net/ip/133.130.35.170"</span>,</div><div class="line">      <span class="string">"rel"</span> : <span class="string">"terms-of-service"</span>,</div><div class="line">      <span class="string">"href"</span> : <span class="string">"http://www.apnic.net/db/dbcopyright.html"</span>,</div><div class="line">      <span class="string">"type"</span> : <span class="string">"text/html"</span></div><div class="line">    &#125; ]</div><div class="line">  &#125; ],</div><div class="line">  <span class="string">"port43"</span> : <span class="string">"whois.apnic.net"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p><strong>whois</strong>に比べると扱いやすく、特にプログラムなどからの操作がようになるので、<br>自動化がはかどりそうな。<br>実装と普及が進むのが待ち望まれる。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://blog.nic.ad.jp/blog/rdap-intro/" target="_blank" rel="external">RDAP ～次世代WHOISプロトコル～ の紹介</a><br><a href="https://dnsops.jp/event/20170628/dns_summer_day_2017_whois.pdf" target="_blank" rel="external">DNS Summer Day 2017～DNS気になる話</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ドメイン情報の参照する際に使う&lt;strong&gt;whois&lt;/strong&gt;コマンド。&lt;br&gt;whoisプロトコルは43番ポートを使ってドメイン情報をテキストでやり取りするシンプルなもの。&lt;/p&gt;
&lt;p&gt;しかし、決められたフォーマットがないためサーバーによってレスポンス結果が異なるということがある。&lt;br&gt;これはプログラムなどから使う場合はとても不便なのが実情。&lt;/p&gt;
&lt;p&gt;他にも色々と問題があり、それらを解決した新しいプロトコルが&lt;strong&gt;RDAP(Registration Data Access Protocol)&lt;/strong&gt;ということ。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>whoisコマンドでdns spamの結果を拾わないようにする</title>
    <link href="http://blog.kazu69.net/2017/07/08/dont-pickup-dns-spam-with-whois-command/"/>
    <id>http://blog.kazu69.net/2017/07/08/dont-pickup-dns-spam-with-whois-command/</id>
    <published>2017-07-08T12:23:52.000Z</published>
    <updated>2017-07-23T02:40:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>whoisコマンドが正しい情報を返してくれないで、ノイズのある結果が得られるなと思って調べたら、<br>ただしくwhoisを理解していないだけでした。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">whois <span class="built_in">help</span></div></pre></td></tr></table></figure>
<p>でわかる話ではありますが、whois spamの話です。</p>
<a id="more"></a>
<p>whois helpでみると</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">whois <span class="built_in">help</span></div><div class="line"></div><div class="line">...</div><div class="line">&lt;KEYWORD overview&gt;</div><div class="line"></div><div class="line">WHOIS keywords fall into categories: those that specify the TYPE of</div><div class="line">records to search, those that modify the interpretation of the input or</div><div class="line">tell the <span class="built_in">type</span> of output to produce, and those that are commands such as</div><div class="line">HELP or QUIT.</div><div class="line"></div><div class="line">The following keywords restrict a search to a certain TYPE of field <span class="keyword">in</span> the</div><div class="line">database:</div><div class="line"></div><div class="line">    domain</div><div class="line">        Finds a domain record. Find out domain name, registrar name,</div><div class="line">        whois server and URL, Nameserver name and IP Addresses, and updated</div><div class="line">        date.  For example, <span class="string">"domain netsol.com"</span>.</div><div class="line"></div><div class="line">    nameserver</div><div class="line">        Finds nameserver records. Find out nameserver name, registrar name,</div><div class="line">        IP addresses, Whois Server name and URL.  For example,</div><div class="line">        <span class="string">'nameserver DNS.SPRINTLINK.COM'</span> or <span class="string">'nameserver 101.198.1.101'</span>.</div><div class="line"></div><div class="line">    registrar</div><div class="line">        Finds records <span class="keyword">for</span> <span class="string">"registrar"</span>. Find out Registrar name, mail</div><div class="line">        address, phone number and contact information. For example,</div><div class="line">        <span class="string">'registrar Network Solutions, Inc.'</span></div><div class="line"></div><div class="line">...</div></pre></td></tr></table></figure>
<p>とあるように whois domain でコマンドを実行すると、取得できるドメイン名、レジストラ名、ネームサーバーなどの文字列からドメイン名を検索する。</p>
<p>ということで意図しない結果を返すことがある。</p>
<p>たとえば、 google.com の場合</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">whois google.com</div><div class="line"></div><div class="line">Whois Server Version 2.0</div><div class="line"></div><div class="line">Domain names <span class="keyword">in</span> the .com and .net domains can now be registered</div><div class="line">with many different competing registrars. Go to http://www.internic.net</div><div class="line"><span class="keyword">for</span> detailed information.</div><div class="line"></div><div class="line">GOOGLE.COM.ACKNOWLEDGES.NON-FREE.COM.NAMESILO.COM</div><div class="line">GOOGLE.COM.AFRICANBATS.ORG</div><div class="line">GOOGLE.COM.ANGRYPIRATES.COM</div><div class="line">GOOGLE.COM.AR</div><div class="line">GOOGLE.COM.AU</div><div class="line">GOOGLE.COM.BAISAD.COM</div><div class="line">GOOGLE.COM.BD</div><div class="line">GOOGLE.COM.BEYONDWHOIS.COM</div><div class="line">GOOGLE.COM.BR</div><div class="line">GOOGLE.COM.BUGBOUNTY.TEST.AT.CIPRI.COM</div><div class="line">GOOGLE.COM.CN</div><div class="line">GOOGLE.COM.CO</div><div class="line">GOOGLE.COM.DEADKNIFERECORDS.COM</div><div class="line">GOOGLE.COM.DGJTEST028-PP-QM-STG.COM</div><div class="line">GOOGLE.COM.DO</div><div class="line">GOOGLE.COM.EG</div><div class="line">GOOGLE.COM.FORSALE</div><div class="line">GOOGLE.COM.HACKED.BY.JAPTRON.ES</div><div class="line">GOOGLE.COM.HAS.LESS.FREE.PORN.IN.ITS.SEARCH.ENGINE.THAN.SECZY.COM</div><div class="line">GOOGLE.COM.HK</div><div class="line">GOOGLE.COM.HOUDA.DO.YOU.WANT.TO.MARRY.ME.JEN.RE</div><div class="line">GOOGLE.COM.IS.APPROVED.BY.NUMEA.COM</div><div class="line">GOOGLE.COM.IS.NOT.HOSTED.BY.ACTIVEDOMAINDNS.NET</div><div class="line">GOOGLE.COM.LASERPIPE.COM.DOMAINPENDINGDELETE.COM</div><div class="line">GOOGLE.COM.LOLOLOLOLOL.SHTHEAD.COM</div><div class="line">GOOGLE.COM.MAIKO.BE</div><div class="line">GOOGLE.COM.MX</div><div class="line">GOOGLE.COM.MY</div><div class="line">GOOGLE.COM.NS1.CHALESHGAR.COM</div><div class="line">GOOGLE.COM.NS2.CHALESHGAR.COM</div><div class="line">GOOGLE.COM.PE</div><div class="line">GOOGLE.COM.PK</div><div class="line">GOOGLE.COM.SA</div><div class="line">GOOGLE.COM.SG</div><div class="line">GOOGLE.COM.SHQIPERIA.COM</div><div class="line">GOOGLE.COM.SOUTHBEACHNEEDLEARTISTRY.COM</div><div class="line">GOOGLE.COM.SPAMMING.IS.UNETHICAL.PLEASE.STOP.THEM.HUAXUEERBAN.COM</div><div class="line">GOOGLE.COM.SPROSIUYANDEKSA.RU</div><div class="line">GOOGLE.COM.SUCKS.FIND.CRACKZ.WITH.SEARCH.GULLI.COM</div><div class="line">GOOGLE.COM.TESTZZZZ.3000-RI.COM.DELETE-DNS.COM</div><div class="line">GOOGLE.COM.TR</div><div class="line">GOOGLE.COM.TW</div><div class="line">GOOGLE.COM.UA</div><div class="line">GOOGLE.COM.UK</div><div class="line">GOOGLE.COM.UY</div><div class="line">GOOGLE.COM.VABDAYOFF.COM</div><div class="line">GOOGLE.COM.VN</div><div class="line">GOOGLE.COM.YUCEHOCA.COM</div><div class="line">GOOGLE.COM.ZNAET.PRODOMEN.COM</div><div class="line">GOOGLE.COM</div><div class="line"></div><div class="line">...</div></pre></td></tr></table></figure>
<p>と全く見当違いのホストも帰ってくる。<br>ということで、helpにあるようにキーワードでクエリを絞り込む必要があるらしい。</p>
<p>ドメインのレコードだけを検索する場合は</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">whois <span class="string">'domain google.com'</span></div><div class="line"></div><div class="line">Whois Server Version 2.0</div><div class="line"></div><div class="line">Domain names <span class="keyword">in</span> the .com and .net domains can now be registered</div><div class="line">with many different competing registrars. Go to http://www.internic.net</div><div class="line"><span class="keyword">for</span> detailed information.</div><div class="line"></div><div class="line">   Domain Name: GOOGLE.COM</div><div class="line">   Registrar: MARKMONITOR INC.</div><div class="line">   Sponsoring Registrar IANA ID: 292</div><div class="line">   Whois Server: whois.markmonitor.com</div><div class="line">   Referral URL: http://www.markmonitor.com</div><div class="line">   Name Server: NS1.GOOGLE.COM</div><div class="line">   Name Server: NS2.GOOGLE.COM</div><div class="line">   Name Server: NS3.GOOGLE.COM</div><div class="line">   Name Server: NS4.GOOGLE.COM</div><div class="line">   Status: clientDeleteProhibited https://icann.org/epp<span class="comment">#clientDeleteProhibited</span></div><div class="line">   Status: clientTransferProhibited https://icann.org/epp<span class="comment">#clientTransferProhibited</span></div><div class="line">   Status: clientUpdateProhibited https://icann.org/epp<span class="comment">#clientUpdateProhibited</span></div><div class="line">   Status: serverDeleteProhibited https://icann.org/epp<span class="comment">#serverDeleteProhibited</span></div><div class="line">   Status: serverTransferProhibited https://icann.org/epp<span class="comment">#serverTransferProhibited</span></div><div class="line">   Status: serverUpdateProhibited https://icann.org/epp<span class="comment">#serverUpdateProhibited</span></div><div class="line">   Updated Date: 20-jul-2011</div><div class="line">   Creation Date: 15-sep-1997</div><div class="line">   Expiration Date: 14-sep-2020</div><div class="line"></div><div class="line">&gt;&gt;&gt; Last update of whois database: 2017-07-23T02:10:56Z &lt;&lt;&lt;</div><div class="line">...</div></pre></td></tr></table></figure>
<p>と意図した結果を取得できる。</p>
<p>フィールドは <strong>domain</strong>, <strong>nameserver</strong>, <strong>registrar</strong>で絞り込むことができる。</p>
<p>ちなみに、google.comで全てのフィールドを検索した際に返される結果はshortタイプのため詳細を出したいのであれば <strong>=</strong> をつけるといい。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div><div class="line">233</div><div class="line">234</div><div class="line">235</div><div class="line">236</div><div class="line">237</div><div class="line">238</div><div class="line">239</div><div class="line">240</div><div class="line">241</div><div class="line">242</div><div class="line">243</div><div class="line">244</div><div class="line">245</div><div class="line">246</div><div class="line">247</div><div class="line">248</div><div class="line">249</div><div class="line">250</div><div class="line">251</div><div class="line">252</div><div class="line">253</div><div class="line">254</div><div class="line">255</div><div class="line">256</div><div class="line">257</div><div class="line">258</div><div class="line">259</div><div class="line">260</div><div class="line">261</div><div class="line">262</div><div class="line">263</div><div class="line">264</div><div class="line">265</div><div class="line">266</div><div class="line">267</div><div class="line">268</div><div class="line">269</div><div class="line">270</div><div class="line">271</div><div class="line">272</div><div class="line">273</div><div class="line">274</div><div class="line">275</div><div class="line">276</div><div class="line">277</div><div class="line">278</div><div class="line">279</div><div class="line">280</div><div class="line">281</div><div class="line">282</div><div class="line">283</div><div class="line">284</div><div class="line">285</div><div class="line">286</div><div class="line">287</div><div class="line">288</div><div class="line">289</div><div class="line">290</div><div class="line">291</div><div class="line">292</div><div class="line">293</div><div class="line">294</div><div class="line">295</div><div class="line">296</div><div class="line">297</div><div class="line">298</div><div class="line">299</div><div class="line">300</div><div class="line">301</div><div class="line">302</div><div class="line">303</div><div class="line">304</div><div class="line">305</div><div class="line">306</div><div class="line">307</div><div class="line">308</div><div class="line">309</div><div class="line">310</div><div class="line">311</div><div class="line">312</div><div class="line">313</div><div class="line">314</div><div class="line">315</div><div class="line">316</div><div class="line">317</div><div class="line">318</div><div class="line">319</div><div class="line">320</div><div class="line">321</div><div class="line">322</div><div class="line">323</div><div class="line">324</div><div class="line">325</div><div class="line">326</div><div class="line">327</div><div class="line">328</div><div class="line">329</div><div class="line">330</div><div class="line">331</div><div class="line">332</div><div class="line">333</div><div class="line">334</div><div class="line">335</div><div class="line">336</div><div class="line">337</div><div class="line">338</div><div class="line">339</div><div class="line">340</div><div class="line">341</div><div class="line">342</div><div class="line">343</div><div class="line">344</div><div class="line">345</div><div class="line">346</div><div class="line">347</div><div class="line">348</div><div class="line">349</div><div class="line">350</div><div class="line">351</div><div class="line">352</div></pre></td><td class="code"><pre><div class="line">whois =google.com</div><div class="line"></div><div class="line">Whois Server Version 2.0</div><div class="line"></div><div class="line">Domain names <span class="keyword">in</span> the .com and .net domains can now be registered</div><div class="line">with many different competing registrars. Go to http://www.internic.net</div><div class="line"><span class="keyword">for</span> detailed information.</div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.ACKNOWLEDGES.NON-FREE.COM.NAMESILO.COM</div><div class="line">   IP Address: 1.1.1.1</div><div class="line">   Registrar: NAMESILO, LLC</div><div class="line">   Whois Server: whois.namesilo.com</div><div class="line">   Referral URL: http://www.namesilo.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.AFRICANBATS.ORG</div><div class="line">   Registrar: TUCOWS DOMAINS INC.</div><div class="line">   Whois Server: whois.tucows.com</div><div class="line">   Referral URL: http://www.tucowsdomains.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.ANGRYPIRATES.COM</div><div class="line">   IP Address: 8.8.8.8</div><div class="line">   Registrar: NAME.COM, INC.</div><div class="line">   Whois Server: whois.name.com</div><div class="line">   Referral URL: http://www.name.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.AR</div><div class="line">   Registrar: ENOM, INC.</div><div class="line">   Whois Server: whois.enom.com</div><div class="line">   Referral URL: http://www.enom.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.AU</div><div class="line">   Registrar: PLANETDOMAIN PTY LTD.</div><div class="line">   Whois Server: whois.planetdomain.com</div><div class="line">   Referral URL: http://www.planetdomain.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.BAISAD.COM</div><div class="line">   IP Address: 91.218.229.20</div><div class="line">   IP Address: 92.53.96.24</div><div class="line">   Registrar: REGISTRAR OF DOMAIN NAMES REG.RU LLC</div><div class="line">   Whois Server: whois.reg.com</div><div class="line">   Referral URL: http://www.reg.ru</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.BD</div><div class="line">   Registrar: LIQUIDNET LTD.</div><div class="line">   Whois Server: whois.liquidnetlimited.com</div><div class="line">   Referral URL: http://www.liquidnetlimited.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.BEYONDWHOIS.COM</div><div class="line">   IP Address: 203.36.226.2</div><div class="line">   Registrar: INSTRA CORPORATION PTY, LTD.</div><div class="line">   Whois Server: whois.instra.net</div><div class="line">   Referral URL: http://www.instra.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.BR</div><div class="line">   Registrar: ENOM, INC.</div><div class="line">   Whois Server: whois.enom.com</div><div class="line">   Referral URL: http://www.enom.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.BUGBOUNTY.TEST.AT.CIPRI.COM</div><div class="line">   IP Address: 8.8.4.4</div><div class="line">   IP Address: 8.8.8.8</div><div class="line">   IP Address: 80.69.82.4</div><div class="line">   Registrar: KEY-SYSTEMS GMBH</div><div class="line">   Whois Server: whois.rrpproxy.net</div><div class="line">   Referral URL: http://www.key-systems.net</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.CN</div><div class="line">   Registrar: XIN NET TECHNOLOGY CORPORATION</div><div class="line">   Whois Server: whois.paycenter.com.cn</div><div class="line">   Referral URL: http://www.xinnet.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.CO</div><div class="line">   Registrar: NAMESECURE.COM</div><div class="line">   Whois Server: whois.namesecure.com</div><div class="line">   Referral URL: http://www.namesecure.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.DEADKNIFERECORDS.COM</div><div class="line">   IP Address: 216.58.208.132</div><div class="line">   IP Address: 172.217.21.206</div><div class="line">   IP Address: 2A00:1450:4001:818:0:0:0:200E</div><div class="line">   IP Address: 2A00:1450:4009:803:0:0:0:2004</div><div class="line">   Registrar: GOOGLE INC.</div><div class="line">   Whois Server: whois.google.com</div><div class="line">   Referral URL: http://domains.google.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.DGJTEST028-PP-QM-STG.COM</div><div class="line">   IP Address: 8.8.8.8</div><div class="line">   Registrar: JAPAN REGISTRY SERVICES CO., LTD.</div><div class="line">   Whois Server: whois2016.jprs.jp</div><div class="line">   Referral URL: http://jprs.jp/registrar/</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.DO</div><div class="line">   Registrar: GODADDY.COM, LLC</div><div class="line">   Whois Server: whois.godaddy.com</div><div class="line">   Referral URL: http://www.godaddy.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.EG</div><div class="line">   Registrar: GODADDY.COM, LLC</div><div class="line">   Whois Server: whois.godaddy.com</div><div class="line">   Referral URL: http://www.godaddy.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.FORSALE</div><div class="line">   Registrar: NAMESILO, LLC</div><div class="line">   Whois Server: whois.namesilo.com</div><div class="line">   Referral URL: http://www.namesilo.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.HACKED.BY.JAPTRON.ES</div><div class="line">   Registrar: GODADDY.COM, LLC</div><div class="line">   Whois Server: whois.godaddy.com</div><div class="line">   Referral URL: http://www.godaddy.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.HAS.LESS.FREE.PORN.IN.ITS.SEARCH.ENGINE.THAN.SECZY.COM</div><div class="line">   IP Address: 209.187.114.130</div><div class="line">   Registrar: ENOM, INC.</div><div class="line">   Whois Server: whois.enom.com</div><div class="line">   Referral URL: http://www.enom.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.HK</div><div class="line">   Registrar: UK-2 LIMITED</div><div class="line">   Whois Server: whois.hostingservicesinc.net</div><div class="line">   Referral URL: http://www.uk2group.com/</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.HOUDA.DO.YOU.WANT.TO.MARRY.ME.JEN.RE</div><div class="line">   Registrar: OVH</div><div class="line">   Whois Server: whois.ovh.com</div><div class="line">   Referral URL: http://www.ovh.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.IS.APPROVED.BY.NUMEA.COM</div><div class="line">   IP Address: 213.228.0.43</div><div class="line">   Registrar: GANDI SAS</div><div class="line">   Whois Server: whois.gandi.net</div><div class="line">   Referral URL: http://www.gandi.net</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.IS.NOT.HOSTED.BY.ACTIVEDOMAINDNS.NET</div><div class="line">   IP Address: 217.148.161.5</div><div class="line">   Registrar: HOSTING CONCEPTS B.V. D/B/A OPENPROVIDER</div><div class="line">   Whois Server: whois.registrar.eu</div><div class="line">   Referral URL: http://www.openprovider.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.LASERPIPE.COM.DOMAINPENDINGDELETE.COM</div><div class="line">   IP Address: 209.85.227.106</div><div class="line">   Registrar: REALTIME REGISTER BV</div><div class="line">   Whois Server: whois.yoursrs.com</div><div class="line">   Referral URL: http://www.realtimeregister.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.LOLOLOLOLOL.SHTHEAD.COM</div><div class="line">   IP Address: 123.123.123.123</div><div class="line">   Registrar: CRAZY DOMAINS FZ-LLC</div><div class="line">   Whois Server: whois.crazydomains.com</div><div class="line">   Referral URL: http://www.crazydomains.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.MAIKO.BE</div><div class="line">   Registrar: OVH</div><div class="line">   Whois Server: whois.ovh.com</div><div class="line">   Referral URL: http://www.ovh.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.MX</div><div class="line">   Registrar: PDR LTD. D/B/A PUBLICDOMAINREGISTRY.COM</div><div class="line">   Whois Server: whois.PublicDomainRegistry.com</div><div class="line">   Referral URL: http://www.publicdomainregistry.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.MY</div><div class="line">   Registrar: WILD WEST DOMAINS, LLC</div><div class="line">   Whois Server: whois.wildwestdomains.com</div><div class="line">   Referral URL: http://www.wildwestdomains.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.NS1.CHALESHGAR.COM</div><div class="line">   IP Address: 8.8.8.8</div><div class="line">   Registrar: ENOM, INC.</div><div class="line">   Whois Server: whois.enom.com</div><div class="line">   Referral URL: http://www.enom.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.NS2.CHALESHGAR.COM</div><div class="line">   IP Address: 8.8.8.8</div><div class="line">   Registrar: ENOM, INC.</div><div class="line">   Whois Server: whois.enom.com</div><div class="line">   Referral URL: http://www.enom.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.PE</div><div class="line">   Registrar: PDR LTD. D/B/A PUBLICDOMAINREGISTRY.COM</div><div class="line">   Whois Server: whois.PublicDomainRegistry.com</div><div class="line">   Referral URL: http://www.publicdomainregistry.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.PK</div><div class="line">   Registrar: BIGROCK SOLUTIONS LIMITED</div><div class="line">   Whois Server: Whois.bigrock.com</div><div class="line">   Referral URL: http://www.bigrock.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.SA</div><div class="line">   Registrar: OMNIS NETWORK, LLC</div><div class="line">   Whois Server: whois.omnis.com</div><div class="line">   Referral URL: http://www.omnis.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.SG</div><div class="line">   Registrar: GODADDY.COM, LLC</div><div class="line">   Whois Server: whois.godaddy.com</div><div class="line">   Referral URL: http://www.godaddy.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.SHQIPERIA.COM</div><div class="line">   IP Address: 70.84.145.107</div><div class="line">   Registrar: ENOM, INC.</div><div class="line">   Whois Server: whois.enom.com</div><div class="line">   Referral URL: http://www.enom.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.SOUTHBEACHNEEDLEARTISTRY.COM</div><div class="line">   IP Address: 74.125.229.52</div><div class="line">   Registrar: GODADDY.COM, LLC</div><div class="line">   Whois Server: whois.godaddy.com</div><div class="line">   Referral URL: http://www.godaddy.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.SPAMMING.IS.UNETHICAL.PLEASE.STOP.THEM.HUAXUEERBAN.COM</div><div class="line">   IP Address: 211.64.175.67</div><div class="line">   IP Address: 211.64.175.66</div><div class="line">   Registrar: GOOGLE INC.</div><div class="line">   Whois Server: whois.google.com</div><div class="line">   Referral URL: http://domains.google.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.SPROSIUYANDEKSA.RU</div><div class="line">   Registrar: MELBOURNE IT, LTD. D/B/A INTERNET NAMES WORLDWIDE</div><div class="line">   Whois Server: whois.melbourneit.com</div><div class="line">   Referral URL: http://www.melbourneit.com.au</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.SUCKS.FIND.CRACKZ.WITH.SEARCH.GULLI.COM</div><div class="line">   IP Address: 80.190.192.24</div><div class="line">   Registrar: COREHUB, S.R.L.</div><div class="line">   Whois Server: whois.corehub.net</div><div class="line">   Referral URL: http://corehub.net</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.TESTZZZZ.3000-RI.COM.DELETE-DNS.COM</div><div class="line">   IP Address: 8.8.8.8</div><div class="line">   Registrar: MEGAZONE CORP. DBA HOSTING.KR</div><div class="line">   Whois Server: whois.hosting.kr</div><div class="line">   Referral URL: http://HOSTING.KR</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.TR</div><div class="line">   Registrar: PDR LTD. D/B/A PUBLICDOMAINREGISTRY.COM</div><div class="line">   Whois Server: whois.PublicDomainRegistry.com</div><div class="line">   Referral URL: http://www.publicdomainregistry.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.TW</div><div class="line">   Registrar: WEB COMMERCE COMMUNICATIONS LIMITED DBA WEBNIC.CC</div><div class="line">   Whois Server: whois.webnic.cc</div><div class="line">   Referral URL: http://www.webnic.cc</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.UA</div><div class="line">   Registrar: PDR LTD. D/B/A PUBLICDOMAINREGISTRY.COM</div><div class="line">   Whois Server: whois.PublicDomainRegistry.com</div><div class="line">   Referral URL: http://www.publicdomainregistry.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.UK</div><div class="line">   Registrar: 123-REG LIMITED</div><div class="line">   Whois Server: whois.123-reg.co.uk</div><div class="line">   Referral URL: http://www.meshdigital.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.UY</div><div class="line">   Registrar: PDR LTD. D/B/A PUBLICDOMAINREGISTRY.COM</div><div class="line">   Whois Server: whois.PublicDomainRegistry.com</div><div class="line">   Referral URL: http://www.publicdomainregistry.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.VABDAYOFF.COM</div><div class="line">   IP Address: 8.8.8.8</div><div class="line">   Registrar: DOMAIN.COM, LLC</div><div class="line">   Whois Server: whois.domain.com</div><div class="line">   Referral URL: http://www.domain.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.VN</div><div class="line">   Registrar: ONLINENIC, INC.</div><div class="line">   Whois Server: whois.onlinenic.com</div><div class="line">   Referral URL: http://www.onlinenic.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.YUCEHOCA.COM</div><div class="line">   IP Address: 88.246.115.134</div><div class="line">   Registrar: PDR LTD. D/B/A PUBLICDOMAINREGISTRY.COM</div><div class="line">   Whois Server: whois.PublicDomainRegistry.com</div><div class="line">   Referral URL: http://www.publicdomainregistry.com</div><div class="line"></div><div class="line"></div><div class="line">   Server Name: GOOGLE.COM.ZNAET.PRODOMEN.COM</div><div class="line">   IP Address: 62.149.23.126</div><div class="line">   Registrar: GODADDY.COM, LLC</div><div class="line">   Whois Server: whois.godaddy.com</div><div class="line">   Referral URL: http://www.godaddy.com</div><div class="line"></div><div class="line"></div><div class="line">   Domain Name: GOOGLE.COM</div><div class="line">   Registrar: MARKMONITOR INC.</div><div class="line">   Sponsoring Registrar IANA ID: 292</div><div class="line">   Whois Server: whois.markmonitor.com</div><div class="line">   Referral URL: http://www.markmonitor.com</div><div class="line">   Name Server: NS1.GOOGLE.COM</div><div class="line">   Name Server: NS2.GOOGLE.COM</div><div class="line">   Name Server: NS3.GOOGLE.COM</div><div class="line">   Name Server: NS4.GOOGLE.COM</div><div class="line">   Status: clientDeleteProhibited https://icann.org/epp<span class="comment">#clientDeleteProhibited</span></div><div class="line">   Status: clientTransferProhibited https://icann.org/epp<span class="comment">#clientTransferProhibited</span></div><div class="line">   Status: clientUpdateProhibited https://icann.org/epp<span class="comment">#clientUpdateProhibited</span></div><div class="line">   Status: serverDeleteProhibited https://icann.org/epp<span class="comment">#serverDeleteProhibited</span></div><div class="line">   Status: serverTransferProhibited https://icann.org/epp<span class="comment">#serverTransferProhibited</span></div><div class="line">   Status: serverUpdateProhibited https://icann.org/epp<span class="comment">#serverUpdateProhibited</span></div><div class="line">   Updated Date: 20-jul-2011</div><div class="line">   Creation Date: 15-sep-1997</div><div class="line">   Expiration Date: 14-sep-2020</div><div class="line"></div><div class="line">&gt;&gt;&gt; Last update of whois database: 2017-07-23T02:12:11Z &lt;&lt;&lt;</div><div class="line">...</div></pre></td></tr></table></figure>
<p>検索クエリを絞り込まないでwhosiコマンドを実施しすることで意図しないホストが得られるのは<strong>whois spam(dns spam)</strong> というらしい。</p>
<p>ということで、<a href="https://github.com/kazu69/domain-info" target="_blank" rel="external">自前のツール</a>もここに対応してspam結果を拾わないようにした。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://www.nic.ad.jp/ja/newsletter/No34/0800.html" target="_blank" rel="external">インターネット10分講座：WHOIS</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;whoisコマンドが正しい情報を返してくれないで、ノイズのある結果が得られるなと思って調べたら、&lt;br&gt;ただしくwhoisを理解していないだけでした。&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;whois &lt;span class=&quot;built_in&quot;&gt;help&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;でわかる話ではありますが、whois spamの話です。&lt;/p&gt;
    
    </summary>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/memo/"/>
    
    
  </entry>
  
  <entry>
    <title>ブラウザに実装されている ECMAScript modules について</title>
    <link href="http://blog.kazu69.net/2017/06/09/es6-modules-in-browser/"/>
    <id>http://blog.kazu69.net/2017/06/09/es6-modules-in-browser/</id>
    <published>2017-06-09T02:49:52.000Z</published>
    <updated>2017-07-03T16:12:16.000Z</updated>
    
    <content type="html"><![CDATA[<p>ECMAScriptのモジュールシステムのブラウザへの実装が始まってるということで、これらを試用してみる。</p>
<a id="more"></a>
<h3 id="従来のECMAScript-modulesのセットアップ"><a href="#従来のECMAScript-modulesのセットアップ" class="headerlink" title="従来のECMAScript modulesのセットアップ"></a>従来のECMAScript modulesのセットアップ</h3><p>まずは従来のモジュールのセットアップ方法。<br>下記のようにシンプルな依存関係のあるファイルが存在する場合</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// app/someone.js</span></div><div class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="class"><span class="keyword">class</span> <span class="title">Someone</span> </span>&#123;</div><div class="line">    <span class="keyword">constructor</span>(name) &#123;</div><div class="line">       <span class="keyword">this</span>.name = name || <span class="string">'bob'</span>;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    callme() &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">this</span>.name;</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// app/entry.js</span></div><div class="line"><span class="keyword">import</span> Someon <span class="keyword">from</span> <span class="string">'./someon'</span>;</div><div class="line"><span class="keyword">const</span> someone = <span class="keyword">new</span> Someon(<span class="string">'Joe'</span>);</div><div class="line"></div><div class="line"><span class="built_in">document</span>.addEventListener(<span class="string">"DOMContentLoaded"</span>, event =&gt; &#123;</div><div class="line">    <span class="built_in">document</span>.body.innerHTML(someone.callme());</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>依存性の解決のために <a href="">browserify</a> または <a href="">webpack</a> などを使って、依存ファイルをbundle(一つに結合して)する。<br>ここでは、上記の依存関係のあるファイルを <code>dist/bundle.js</code> という形でbundleする。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// webpack.config.js</span></div><div class="line"><span class="meta">'use strict'</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>);</div><div class="line"><span class="built_in">module</span>.exports = &#123;</div><div class="line">  <span class="attr">entry</span>: <span class="string">'./app/entry.js'</span>,</div><div class="line">  <span class="attr">output</span>: &#123;</div><div class="line">    <span class="attr">filename</span>: <span class="string">'bundle.js'</span>,</div><div class="line">    <span class="attr">path</span>: path.resolve(__dirname, <span class="string">'dist'</span>)</div><div class="line">  &#125;,</div><div class="line">  <span class="attr">module</span>: &#123;</div><div class="line">    <span class="attr">loaders</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="attr">test</span>: <span class="regexp">/\.js$/</span>,</div><div class="line">        <span class="attr">exclude</span>: <span class="regexp">/node_modules/</span>,</div><div class="line">        <span class="attr">loader</span>: <span class="string">'babel-loader'</span>,</div><div class="line">        <span class="attr">query</span>: &#123;</div><div class="line">          <span class="attr">presets</span>: [<span class="string">'env'</span>]</div><div class="line">        &#125;</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>これらをhtmlから参照する必要があった。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Someone Class module depends<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/dist/bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    ...</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="ブラウザネイティブのECMAScript-modulesのセットアップ"><a href="#ブラウザネイティブのECMAScript-modulesのセットアップ" class="headerlink" title="ブラウザネイティブのECMAScript modulesのセットアップ"></a>ブラウザネイティブのECMAScript modulesのセットアップ</h3><p>現在実装中のECMAScript modulesを試すには以下の条件が必要</p>
<table>
<thead>
<tr>
<th>engine</th>
<th>version</th>
<th>config setting</th>
</tr>
</thead>
<tbody>
<tr>
<td>Firefox</td>
<td>54+</td>
<td>about:config</td>
</tr>
<tr>
<td>Chrome</td>
<td>60+</td>
<td>chrome:flags</td>
</tr>
<tr>
<td>EDGE</td>
<td>15+</td>
<td>about:flags</td>
</tr>
<tr>
<td>Webkit</td>
<td>Safari10.1 (iOS10.3)</td>
<td>default</td>
</tr>
<tr>
<td>Node</td>
<td>wip</td>
<td>-</td>
</tr>
</tbody>
</table>
<p>次のようなhtmlファイルを作成</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Someone Class module depends<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- type="module" でmoduleをinportする --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"app/entry.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    ...</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>type=”module” で import する際は ファイルの拡張子まで含む必要がある。</p>
<figure class="highlight diff"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="deletion">- import Someon from './someon';</span></div><div class="line"><span class="addition">+ import Someon from './someon.js';</span></div></pre></td></tr></table></figure>
<p>ローカルのサーバーから配信すると、moduleがimportされている(依存性の解決ができてること)がわかる。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">[Sun Fri 02 2017 18:56:58 GMT+0900 (JST)] &quot;GET /&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3147.0 Safari/537.36&quot;</div><div class="line">[Sun Jul 02 2017 18:56:58 GMT+0900 (JST)] &quot;GET /app/entry.js&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3147.0 Safari/537.36&quot;</div><div class="line">[Sun Fri 02 2017 18:56:58 GMT+0900 (JST)] &quot;GET /app/someone.js&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3147.0 Safari/537.36&quot;</div><div class="line">[Sun Fri 02 2017 18:56:58 GMT+0900 (JST)] &quot;GET /favicon.ico&quot; &quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/61.0.3147.0 Safari/537.36&quot;</div><div class="line">[Sun Fri 02 2017 18:56:58 GMT+0900 (JST)] &quot;GET /favicon.ico&quot; Error (404): &quot;Not found&quot;</div></pre></td></tr></table></figure>
<p>type属性の<strong>module</strong>を指定することでブラウザが内部的にES6 moduleとして依存解決してくれる。<br>もちろんインラインスクリプトでも実現出来る。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">import</span> Someone <span class="keyword">from</span> <span class="string">'./app/someone.js'</span>;</div><div class="line">    <span class="keyword">const</span> someone = <span class="keyword">new</span> Someone(<span class="string">'Joe'</span>);</div><div class="line"></div><div class="line">    <span class="built_in">document</span>.addEventListener(<span class="string">"DOMContentLoaded"</span>, event =&gt; &#123;</div><div class="line">        <span class="built_in">document</span>.body.innerHTML = someone.callme();</div><div class="line">    &#125;);</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="未サポートブラウザへの対応"><a href="#未サポートブラウザへの対応" class="headerlink" title="未サポートブラウザへの対応"></a>未サポートブラウザへの対応</h3><p>ブラウザが ECMAScript module をサポートしてない場合、下位互換としてtype属性の<strong>nomodule</strong>が提供されている。<br>これを使ってfallbackスクリプトを追加して動作を保証できます。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- Support browser es6 modules --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"app/entry.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- Unsupport browser es6 modules --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"nomodule"</span> <span class="attr">src</span>=<span class="string">"dis/bundle.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>今回の場合は、nomoduleでbundleしたファイルを読込むことで期待した動きが担保できます。</p>
<h3 id="モジュールのロードと実行タイミング"><a href="#モジュールのロードと実行タイミング" class="headerlink" title="モジュールのロードと実行タイミング"></a>モジュールのロードと実行タイミング</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- scriptタグ --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'inline script'</span>)</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- deferでhtml解析後に遅延実行 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">deferd</span> <span class="attr">src</span>=<span class="string">"app/deferd.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- asyncで非同期実行 --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">async</span> <span class="attr">src</span>=<span class="string">"app/async.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- moduleでimport --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"app/module.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!-- moduleでインラインスクリプト --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'js module'</span>)</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>この上記の場合の実行順序は</p>
<ol>
<li>scriptタグ</li>
<li>deferd (html解析後まで実行遅延)</li>
<li>async (非同期実行)</li>
<li>type=”module”の外部ファイル</li>
<li>type=”module”のインラインスクリプト</li>
</ol>
<p>の順番となる。</p>
<p>type属性に<strong>module</strong>を指定した場合、scriptの実行は<strong>defer</strong>属性が与えられたものと同じように振る舞う。<br>つまりhtmlの解析後まで実行がキューイングされ、解析後からDOMContentLoadedイベントの間に実行される。</p>
<h3 id="モジュールの複数回の読込"><a href="#モジュールの複数回の読込" class="headerlink" title="モジュールの複数回の読込"></a>モジュールの複数回の読込</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"app/module.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"app/module.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>複数回のmoduleの読込んでも、ECMAScriptのモジュールの仕様の通りで一度しか実行されない。</p>
<h3 id="トップレベルのthis"><a href="#トップレベルのthis" class="headerlink" title="トップレベルのthis"></a>トップレベルのthis</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"app/this.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="built_in">console</span>.log(<span class="keyword">this</span>)</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>type属性に<strong>module</strong>を指定した場合、トップレベルのthisは<strong>undefined</strong>になる。<br>これは通常のブラウザでのトップレベルのthisが<strong>window</strong>となる点と異なる。</p>
<h3 id="トップレベルの変数"><a href="#トップレベルの変数" class="headerlink" title="トップレベルの変数"></a>トップレベルの変数</h3><p>変数に関してもECMAScriptのモジュールの仕様の通りで、モジュールでのトップレベル変数はローカル変数として扱われる。<br>ブラウザ側のトップレベルの変数はモジュール側で参照できる。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    global_variables = <span class="string">'script'</span>;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="comment">&lt;!--</span></div><div class="line">global_variables は app/variables.js から参照できるが、</div><div class="line">モジュール内の変数はブラウザ側から参照でいない</div><div class="line"> --&gt;</div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span> <span class="attr">src</span>=<span class="string">"app/variables.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"module"</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="built_in">console</span>.log(global_variables) <span class="comment">// script</span></div><div class="line"><span class="built_in">console</span>.log(module_variables) <span class="comment">// ReferenceError</span></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line"><span class="built_in">console</span>.log(global_variables) <span class="comment">// script</span></div><div class="line"><span class="built_in">console</span>.log(module_variables) <span class="comment">// ReferenceError</span></div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>ECMAScript moduleのブラウザ実装が進めば、複雑なビルドシステムなどを利用することがなくなり、<br>より開発者にとって受け入れやすいものになるとおもわれる。<br>ただし、すべてを分割するという運用はやはりパフォーマンス的な問題もあるので、この辺りはノウハウの蓄積とか必要なのかな。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://blog.hospodarets.com/native-ecmascript-modules-the-first-overview" target="_blank" rel="external">Native ECMAScript modules - the first overview</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;ECMAScriptのモジュールシステムのブラウザへの実装が始まってるということで、これらを試用してみる。&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Cross-Origin Resource Sharing(CORS)を使用したHTTPリクエスト</title>
    <link href="http://blog.kazu69.net/2017/03/23/http-request-using-cors/"/>
    <id>http://blog.kazu69.net/2017/03/23/http-request-using-cors/</id>
    <published>2017-03-23T11:49:52.000Z</published>
    <updated>2017-04-02T03:40:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>Webブラウザで異なるWebサイトのリソースを取り扱う際には、HTTPリクエストは<a href="http://www.w3.org/TR/cors/" target="_blank" rel="external">Cross-Origin Resource Sharing (CORS)</a>が適用される。</p>
<p>ということは知っている話ですが、詳細まで追えてなかったので改めて眺めてみた。</p>
<a id="more"></a>
<h3 id="CORS-同一生成元"><a href="#CORS-同一生成元" class="headerlink" title="CORS(同一生成元)"></a>CORS(同一生成元)</h3><p>CORSは異なるドメインへのアクセス方法を規定しており、これによりドメイン間の通信の安全性が保障される。<br>一般的なWebブラウザではXMLHttpRequestやFeatch APIなどHTTPリクエストでCORSが適用され、リソースの取得は許可されない。</p>
<p>CORSは以下のブラウザでサポートされている。</p>
<ul>
<li>Chrome 3+</li>
<li>Firefox 3.5+</li>
<li>Internet Explorer 11+</li>
<li>Opera 12+</li>
<li>Safari 4+</li>
</ul>
<p>ちなみにCORSは日本語で同一生成元などと言われる。<br>プロトコル、ドメイン、ポートの3つが同じである場合に同一生成元となる。</p>
<p>同じプロトコル、ドメインでもポートが違うと同一生成元となる。</p>
<h3 id="Cross-OriginのリソースをFetch-APIを使って取得する"><a href="#Cross-OriginのリソースをFetch-APIを使って取得する" class="headerlink" title="Cross OriginのリソースをFetch APIを使って取得する"></a>Cross OriginのリソースをFetch APIを使って取得する</h3><p>確認するにあたり<a href="https://github.com/expressjs/express" target="_blank" rel="external">Express</a>で簡単なアプリケーションを作成する。</p>
<p><a href="https://127.0.0.1:3001" target="_blank" rel="external">https://127.0.0.1:3001</a> のホストから <a href="http://127.0.0.1:3000/no-cors/" target="_blank" rel="external">http://127.0.0.1:3000/no-cors/</a> にFetch APIでリクエストを行い、取得したリソースにアクセスをする。</p>
<p>Express routing</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> ALLOWED_ORIGINS = [</div><div class="line">    <span class="string">'https://127.0.0.1:3000'</span>,</div><div class="line">    <span class="string">'https://127.0.0.1:3001'</span></div><div class="line">];</div><div class="line"></div><div class="line"><span class="comment">// routes</span></div><div class="line">app.get(ROUTES, (req, res) =&gt; &#123;</div><div class="line">    res.render(<span class="string">'index'</span>, &#123;<span class="attr">title</span>: <span class="string">`access to <span class="subst">$&#123;req.url&#125;</span>`</span>&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Viewファイルからリクエストをする</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> fetchOption = &#123;&#125;;</div><div class="line"></div><div class="line"><span class="comment">// Headerを作成</span></div><div class="line"><span class="keyword">const</span> headers = <span class="keyword">new</span> Headers();</div><div class="line">headers.append(<span class="string">'Content-Type'</span>, <span class="string">'text/plain'</span>);</div><div class="line">headers.append(<span class="string">'X-Custom-Header'</span>, <span class="string">'custom-header'</span>);</div><div class="line">fetchOption[<span class="string">'headers'</span>] = headers;</div><div class="line"></div><div class="line"><span class="comment">// Featch</span></div><div class="line">fetch(<span class="string">'https://127.0.0.1:3000/no-cors/'</span>, fetchOption)</div><div class="line">.then(<span class="function"><span class="params">res</span> =&gt;</span> &#123;</div><div class="line">    <span class="built_in">document</span>.body.innerHTML = <span class="string">"statusCode: "</span> + res.status + <span class="string">"&lt;br&gt;statusText: "</span> + res.statusText + <span class="string">"&lt;br&gt;cookie: "</span> + <span class="built_in">document</span>.cookie;</div><div class="line">&#125;)</div><div class="line">.catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> elem = <span class="built_in">document</span>.querySelector(<span class="string">'.response'</span>);</div><div class="line">    elem.innerHTML = <span class="built_in">JSON</span>.stringify(error);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>これはもちろんエラーとなる。Google Chrome の場合以下のようなエラーがコンソールに出力される。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">127.0.0.1/:1 Fetch API cannot load https://127.0.0.1:3000/no-cros/.</div><div class="line">Response to preflight request doesn&apos;t pass access control check: No &apos;Access-Control-Allow-Origin&apos; header is present on the requested resource.</div><div class="line">Origin &apos;https://127.0.0.1:3001&apos; is therefore not allowed access.</div><div class="line">If an opaque response serves your needs, set the request&apos;s mode to &apos;no-cors&apos; to fetch the resource with CORS disabled.</div></pre></td></tr></table></figure>
<p>実際のHTTPヘッダのやりとりを見てみる</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"># Request Header</div><div class="line">OPTIONS /no-cros/ HTTP/1.1</div><div class="line">Host: 127.0.0.1:3000</div><div class="line">Connection: keep-alive</div><div class="line">Access-Control-Request-Method: GET</div><div class="line">Origin: https://127.0.0.1:3001</div><div class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div><div class="line">Access-Control-Request-Headers: x-custom-header</div><div class="line">Accept: */*</div><div class="line">DNT: 1</div><div class="line">Referer: https://127.0.0.1:3001/no-cros/</div><div class="line">Accept-Encoding: gzip, deflate, sdch, br</div><div class="line">Accept-Language: ja,en-US;q=0.8,en;q=0.6</div><div class="line"></div><div class="line"># Response Header</div><div class="line">HTTP/1.1 200 OK</div><div class="line">X-Powered-By: Express</div><div class="line">Content-Type: text/plain; charset=utf-8</div><div class="line">Content-Length: 2</div><div class="line">ETag: W/&quot;2-nOO9QiTIwXgNtWtBJezz8kv3SLc&quot;</div><div class="line">set-cookie: connect.sid=s%3AqFiO6ASvY-4Sc0IFI_bWSKZV2rbwBoDH.WIyBhxr31leCLd%2BSv532FQHUS1chxk2d3iv6zweCh8k; Path=/; HttpOnly</div><div class="line">Date: Thu, 23 Mar 2017 13:26:23 GMT</div><div class="line">Connection: keep-alive</div></pre></td></tr></table></figure>
<p>エラー内容にあるように<br>preflight request(プリフライトリクエスト)の際に <strong>Access-Control-Allow-Origin ヘッダがない</strong> ということでエラーになっている。</p>
<p>ちなみにCORSに使われるHTTPリクエストヘッダは以下</p>
<table>
<thead>
<tr>
<th></th>
<th>HTTP リクエストヘッダ</th>
<th>content</th>
</tr>
</thead>
<tbody>
<tr>
<td>Origin</td>
<td>リクエストしたオリジン</td>
</tr>
<tr>
<td>Access-Control-Request-Method</td>
<td>リクエストを行うHTTPメソッド。プリフライトリクエストに使われる</td>
</tr>
<tr>
<td>Access-Control-Request-Headers</td>
<td>リクエストを行う際に利用されるHTTPヘッダ</td>
</tr>
</tbody>
</table>
<h3 id="Access-Control-Allow-OriginとCROS"><a href="#Access-Control-Allow-OriginとCROS" class="headerlink" title="Access-Control-Allow-OriginとCROS"></a>Access-Control-Allow-OriginとCROS</h3><p>次に Access-Control-Allow-Origin ヘッダを返してあげるようにする。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> ALLOWED_METHODS = [</div><div class="line">    <span class="string">'GET'</span>,</div><div class="line">    <span class="string">'POST'</span>,</div><div class="line">    <span class="string">'PUT'</span>,</div><div class="line">    <span class="string">'PATCH'</span>,</div><div class="line">    <span class="string">'DELETE'</span>,</div><div class="line">    <span class="string">'HEAD'</span>,</div><div class="line">    <span class="string">'OPTIONS'</span></div><div class="line">];</div><div class="line"></div><div class="line"><span class="keyword">const</span> ALLOWED_ORIGINS = [</div><div class="line">    <span class="string">'https://127.0.0.1:3000'</span>,</div><div class="line">    <span class="string">'https://127.0.0.1:3001'</span></div><div class="line">];</div><div class="line"></div><div class="line"><span class="comment">// レスポンスHeaderを組み立てる</span></div><div class="line">app.use(<span class="function">(<span class="params">req, res, next</span>) =&gt;</span> &#123;</div><div class="line">    <span class="keyword">const</span> origin = req.headers.origin;</div><div class="line">    <span class="keyword">if</span>(ALLOWED_ORIGINS.indexOf(req.headers.origin) &gt; <span class="number">-1</span>) &#123;</div><div class="line">        sess.cookie.secure = <span class="literal">true</span>;</div><div class="line">        res.cookie(<span class="string">'example'</span>, <span class="built_in">Math</span>.random().toString(), &#123;<span class="attr">maxAge</span>: <span class="number">86400</span>, <span class="attr">httpOnly</span>: <span class="literal">true</span>&#125;);</div><div class="line">        res.setHeader(<span class="string">'Access-Control-Allow-Origin'</span>, origin);</div><div class="line">        res.setHeader(<span class="string">'Access-Control-Allow-Methods'</span>, ALLOWED_METHODS.join(<span class="string">','</span>));</div><div class="line">        res.setHeader(<span class="string">'Access-Control-Allow-Headers'</span>, <span class="string">'Content-type,Accept,X-Custom-Header'</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    next();</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// HTTP OPTIONS</span></div><div class="line">app.options(<span class="string">'*'</span>, (req, res) =&gt; &#123;</div><div class="line">    res.sendStatus(<span class="number">200</span>);</div><div class="line">&#125;);</div><div class="line"></div><div class="line"><span class="comment">// routes</span></div><div class="line">app.get(ROUTES, (req, res) =&gt; &#123;</div><div class="line">    res.render(<span class="string">'index'</span>, &#123;<span class="attr">title</span>: <span class="string">`access to <span class="subst">$&#123;req.url&#125;</span>`</span>&#125;);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>実際のHeaderのやりとりは以下のようになる。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"># Request Header</div><div class="line">OPTIONS /cros/ HTTP/1.1</div><div class="line">Host: 127.0.0.1:3000</div><div class="line">Connection: keep-alive</div><div class="line">Access-Control-Request-Method: GET</div><div class="line">Origin: https://127.0.0.1:3001</div><div class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div><div class="line">Access-Control-Request-Headers: x-custom-header</div><div class="line">Accept: */*</div><div class="line">DNT: 1</div><div class="line">Referer: https://127.0.0.1:3001/cros/</div><div class="line">Accept-Encoding: gzip, deflate, sdch, br</div><div class="line">Accept-Language: ja,en-US;q=0.8,en;q=0.6</div><div class="line"></div><div class="line"># Response Header</div><div class="line">HTTP/1.1 200 OK</div><div class="line">X-Powered-By: Express</div><div class="line">set-cookie: example=0.6767570391231008; Max-Age=86; Path=/; Expires=Thu, 23 Mar 2017 13:49:13 GMT; HttpOnly</div><div class="line">set-cookie: connect.sid=s%3AebdnoA5XfiJBSma9g9i-PMzsTbTzHH16.dlGmLYU26FIAgP8SYyhV9cOWJ%2FP0caflOexh5%2FmkZkk; Path=/; HttpOnly</div><div class="line">Access-Control-Allow-Origin: https://127.0.0.1:3001</div><div class="line">Access-Control-Max-Age:86400</div><div class="line">Access-Control-Allow-Methods: GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS</div><div class="line">Access-Control-Allow-Headers: Content-type,Accept,X-Custom-Header</div><div class="line">Content-Type: text/plain; charset=utf-8</div><div class="line">Content-Length: 2</div><div class="line">ETag: W/&quot;2-nOO9QiTIwXgNtWtBJezz8kv3SLc&quot;</div><div class="line">Date: Thu, 23 Mar 2017 13:47:47 GMT</div><div class="line">Connection: keep-alive</div></pre></td></tr></table></figure>
<p>ということで、エラーもなく成功する。</p>
<p>HTTPヘッダを眺めてみると、リクエストHeaderはHTTP OPTINSメソッドが投げられている。<br>これは、プリフライトリクエストとなる。<br>プリフライトリクエストは一般的なシンプルなリクエストと異なり、CORSなどのリクエストを行う前に先行して送信される。<br>これによりリクエスト先のリソースにアクセス可能か、リクエストメソッドが実装されいるかを検証する。</p>
<p>ここでエラーとなった場合は実際にはリクエストしないことになる。</p>
<p>ちなみにプリフライトリクエストが送信される条件は以下となる。</p>
<ul>
<li>GET、HEAD、POST 以外のHTTPメソッドでリクエストした場合</li>
<li>Content-Typeがapplication/x-www-form-urlencoded、multipart/form-data、text/plainのPOSTリクエストをした場合</li>
<li>カスタムヘッダをリクエストをした場合</li>
</ul>
<p>ということで、CORSに対応する場合は、サーバー側では必ずOPTIONSメソッドを正しく返却ししないと、<br>本来のリクエストも失敗することになる。</p>
<p>つづいてレスポンスヘッダを眺めてみる。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Access-Control-Allow-Origin: https://127.0.0.1:3001</div><div class="line">Access-Control-Max-Age:86400</div><div class="line">Access-Control-Allow-Methods: GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS</div><div class="line">Access-Control-Allow-Headers: Content-type,Accept,X-Custom-Header</div></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>http レスポンスヘッダ</th>
<th>content</th>
</tr>
</thead>
<tbody>
<tr>
<td>Access-Control-Allow-Origin</td>
<td>アクセスを許可するURI (* でワイルドカードとなる)</td>
</tr>
<tr>
<td>Access-Control-Allow-Methods</td>
<td>許可するHTTPメソッドを指定</td>
</tr>
<tr>
<td>Access-Control-Allow-Headers</td>
<td>実際のリクエストで使用できるHTTPヘッダを明示</td>
</tr>
<tr>
<td>Access-Control-Max-Age</td>
<td>プリフライトの結果をキャッシュ時間</td>
</tr>
<tr>
<td>Access-Control-Expose-Headers</td>
<td>利用できるヘッダのホワイトリストを明示</td>
</tr>
<tr>
<td>Access-Control-Allow-Credentials</td>
<td>Credentialsを含めたリクエストを取り扱えるか</td>
</tr>
</tbody>
</table>
<p>ということで取得したリソースにアクセスできる。</p>
<h3 id="CredentialsとCORS"><a href="#CredentialsとCORS" class="headerlink" title="CredentialsとCORS"></a>CredentialsとCORS</h3><p>認証情報やcookieなどを含むリクエストの場合のHTTP headerは以下の通り</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"># Request</div><div class="line">OPTIONS /cros-with-credentials/ HTTP/1.1</div><div class="line">Host: 127.0.0.1:3000</div><div class="line">Connection: keep-alive</div><div class="line">Access-Control-Request-Method: GET</div><div class="line">Origin: https://127.0.0.1:3001</div><div class="line">User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_11_6) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/56.0.2924.87 Safari/537.36</div><div class="line">Access-Control-Request-Headers: x-custom-header</div><div class="line">Accept: */*</div><div class="line">DNT: 1</div><div class="line">Referer: https://127.0.0.1:3001/cros-with-credentials/</div><div class="line">Accept-Encoding: gzip, deflate, sdch, br</div><div class="line">Accept-Language: ja,en-US;q=0.8,en;q=0.6</div><div class="line"></div><div class="line"># Response</div><div class="line">HTTP/1.1 200 OK</div><div class="line">X-Powered-By: Express</div><div class="line">set-cookie: example=0.654153584678103; Max-Age=86; Path=/; Expires=Thu, 23 Mar 2017 16:10:43 GMT; HttpOnly</div><div class="line">set-cookie: connect.sid=s%3AM9NQy3hz5cLb3kW6htuybWE6nEX1_iL6.ENXqiTfVPMQVyP%2FGFZ9pshnC87D7rX5%2BM48mjVqwR7s; Path=/; HttpOnly</div><div class="line">Access-Control-Allow-Origin: https://127.0.0.1:3001</div><div class="line">Access-Control-Allow-Methods: GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS</div><div class="line">Access-Control-Max-Age: 86400</div><div class="line">Access-Control-Allow-Headers: Content-type,Accept,X-Custom-Header</div><div class="line">Access-Control-Allow-Credentials: true</div><div class="line">Content-Type: text/plain; charset=utf-8</div><div class="line">Content-Length: 2</div><div class="line">ETag: W/&quot;2-nOO9QiTIwXgNtWtBJezz8kv3SLc&quot;</div><div class="line">Date: Thu, 23 Mar 2017 16:09:17 GMT</div><div class="line">Connection: keep-alive</div></pre></td></tr></table></figure>
<p>ここではヘッダに以下を含まれるようにする必要がある。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Access-Control-Allow-Credentials: true</div></pre></td></tr></table></figure>
<p>また、Credentialsを含めたリクエストの場合は、Access-Control-Allow-Originがワイルドカード(*を指定している)場合はリクエストが失敗する。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Fetch API cannot load https://127.0.0.1:3000/cros-with-credentials/.</div><div class="line">The value of the &apos;Access-Control-Allow-Origin&apos; header in the response must not be the wildcard &apos;*&apos; when the request&apos;s credentials mode is &apos;include&apos;.</div><div class="line">Origin &apos;https://127.0.0.1:3001&apos; is therefore not allowed access.</div></pre></td></tr></table></figure>
<p>とうことで、CORSでのリクエストとその概要を改めて眺めた。<br>プリフライトリクエストの存在とその役割、若干曖昧だったCORSの正しい対応方法を理解することができた。</p>
<h3 id="今回使ったサンプル"><a href="#今回使ったサンプル" class="headerlink" title="今回使ったサンプル"></a>今回使ったサンプル</h3><p><a href="https://github.com/kazu69/cross-origin-resource-sharing-exmpress-example" target="_blank" rel="external">kazu69/cross-origin-resource-sharing-exmpress-example</a></p>
<h3 id="参考しにしたページ"><a href="#参考しにしたページ" class="headerlink" title="参考しにしたページ"></a>参考しにしたページ</h3><p><a href="https://developer.mozilla.org/ja/docs/Web/HTTP/HTTP_access_control#Access-Control-Request-Method" target="_blank" rel="external">HTTP アクセス制御 (CORS)</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Webブラウザで異なるWebサイトのリソースを取り扱う際には、HTTPリクエストは&lt;a href=&quot;http://www.w3.org/TR/cors/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cross-Origin Resource Sharing (CORS)&lt;/a&gt;が適用される。&lt;/p&gt;
&lt;p&gt;ということは知っている話ですが、詳細まで追えてなかったので改めて眺めてみた。&lt;/p&gt;
    
    </summary>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/memo/"/>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/memo/web/"/>
    
    
  </entry>
  
  <entry>
    <title>Consulを再度学んだ</title>
    <link href="http://blog.kazu69.net/2017/02/19/learned_consul_again/"/>
    <id>http://blog.kazu69.net/2017/02/19/learned_consul_again/</id>
    <published>2017-02-19T14:34:45.000Z</published>
    <updated>2017-02-27T13:51:57.000Z</updated>
    
    <content type="html"><![CDATA[<p>consulを少し触ったままだったので、ちゃんと学んでみた。<br>と言っても一通り触ったくらいであるが。</p>
<p>あらためて試すにあたり、<a href="https://hub.docker.com/_/consul/" target="_blank" rel="external">Official Consul Docker Image</a>を使用してクラスタを構成した。</p>
<a id="more"></a>
<h2 id="counsulのおさらい"><a href="#counsulのおさらい" class="headerlink" title="counsulのおさらい"></a>counsulのおさらい</h2><p>consulをざっくりとおさらい。<br>複数のサーバーをクラスタ化して、オーケストレーションするツール。<br>クラスタ内のサーバー同士をDNSインターフェイスを通してIPベース相互検出し(Discovery)、健全性を確認し(Health Check)、特定のサーバーへのトラフィックを回避する(Load Balancing)を行う。</p>
<p>RESTベースの外部API(HTTP API)を提供しており、サーバー情報はキーバリュースストアで保持されている。</p>
<h2 id="dockerでクラスタ構成を作る"><a href="#dockerでクラスタ構成を作る" class="headerlink" title="dockerでクラスタ構成を作る"></a>dockerでクラスタ構成を作る</h2><p>consulはサーバとクライアントという2つのコンポーネントで構成され、いずれかの状態で起動する必要がある。<br>クライアントモードでは各サーバーと通信をする。<br>サーバーモードでは奇数台で構成されることを期待されていて、それぞれがGossip Protocolで通信し、Raftアルゴリズムに基づいてリーダーを選出する。</p>
<p>今回はdockerを使って以下のような構成を使っておさらいする</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"># server</div><div class="line">consul --</div><div class="line">         `- consul1 (leader) 172.16.238.10</div><div class="line">         `- consul2          172.16.238.11</div><div class="line">         `- consul3          172.16.238.12</div><div class="line"># agent</div><div class="line">nginx  --</div><div class="line">         `- nginx1           172.16.238.13</div><div class="line">         `- nginx2           172.16.238.14</div><div class="line">         `- nginx3           172.16.238.15</div></pre></td></tr></table></figure>
<p>ということでserver 3コンテナを起動してみる。</p>
<p>ちなみにconsulでは次のポートをデフォルトで使用する。</p>
<table>
<thead>
<tr>
<th>機能</th>
<th>protocol</th>
<th>port</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>Server RPC</td>
<td>TCP</td>
<td>8300</td>
<td>他のAgentからのリクエストを受付る</td>
</tr>
<tr>
<td>Serf LAN</td>
<td>TCP and UDP</td>
<td>8301</td>
<td>LAN上のゴシッププロトコル。すべてのAgentが使用する。</td>
</tr>
<tr>
<td>Serf WAN</td>
<td>TCP and UDP</td>
<td>8302</td>
<td>WAN上のゴシッププロトコル。他のサーバーとの通信に使用。</td>
</tr>
<tr>
<td>CLI RPC</td>
<td>TCP</td>
<td>8400</td>
<td>CLIからの入力を処理する。すべてのAgentが使用する。</td>
</tr>
<tr>
<td>HTTP API</td>
<td>TCP</td>
<td>8500</td>
<td>クライアントがHTTP API を受付る</td>
</tr>
<tr>
<td>DNS Interface</td>
<td>TCP and UDP</td>
<td>8600</td>
<td>DNSクエリを解決する</td>
</tr>
</tbody>
</table>
<p>今回は外からも利用するので一つだけ書くポートをフォワードしておく。</p>
<h2 id="リーダー選出"><a href="#リーダー選出" class="headerlink" title="リーダー選出"></a>リーダー選出</h2><p>指定数以上のサーバーが起動したことで、リーダーが選出されていることを確認する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># リーダーのnodeの情報取得</span></div><div class="line">curl -s http://localhost:8500/v1/status/leader | jq .</div><div class="line"><span class="string">"172.16.238.10:8300"</span></div><div class="line"></div><div class="line"><span class="comment"># agentのnode情報取得</span></div><div class="line">curl -s http://localhost:8500/v1/status/peers | jq .</div><div class="line">[</div><div class="line">  <span class="string">"172.16.238.10:8300"</span>,</div><div class="line">  <span class="string">"172.16.238.12:8300"</span>,</div><div class="line">  <span class="string">"172.16.238.11:8300"</span></div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="agentの追加"><a href="#agentの追加" class="headerlink" title="agentの追加"></a>agentの追加</h3><p>3台起動してるnginxコンテナをagentモードでクラスタに追加する。<br>(追加時に合わせて幾つか死活監視を試せるようにしている)</p>
<p>起動しているコンテナは以下の状態</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">CONTAINER ID        IMAGE                COMMAND                  CREATED             STATUS              PORTS                                                                                                                                       NAMES</div><div class="line">c48eb5e1c99a        learnconsul_nginx2   <span class="string">"nginx -g 'daemon ..."</span>   24 hours ago        Up 24 hours         443/tcp, 0.0.0.0:8000-&gt;80/tcp                                                                                                               nginx2</div><div class="line">1bd432bd0b98        consul:latest        <span class="string">"docker-entrypoint..."</span>   24 hours ago        Up 24 hours         8300-8302/tcp, 8400/tcp, 8500/tcp, 8301-8302/udp, 8600/tcp, 8600/udp                                                                        consul2</div><div class="line">7917ff526a10        learnconsul_nginx1   <span class="string">"nginx -g 'daemon ..."</span>   24 hours ago        Up 24 hours         443/tcp, 0.0.0.0:8080-&gt;80/tcp                                                                                                               nginx1</div><div class="line">f72330ed0182        consul:latest        <span class="string">"docker-entrypoint..."</span>   24 hours ago        Up 24 hours         8300-8302/tcp, 8400/tcp, 8500/tcp, 8301-8302/udp, 8600/tcp, 8600/udp                                                                        consul3</div><div class="line">5c40e078481e        learnconsul_nginx3   <span class="string">"nginx -g 'daemon ..."</span>   24 hours ago        Up 24 hours         443/tcp, 0.0.0.0:8888-&gt;80/tcp                                                                                                               nginx3</div><div class="line">f7270595eda4        consul:latest        <span class="string">"docker-entrypoint..."</span>   24 hours ago        Up 24 hours         0.0.0.0:8300-8302-&gt;8300-8302/tcp, 0.0.0.0:8400-&gt;8400/tcp, 8301-8302/udp, 0.0.0.0:8500-&gt;8500/tcp, 8600/udp, 8600/tcp, 0.0.0.0:8600-&gt;53/udp   consul1</div></pre></td></tr></table></figure>
<p>nodeを追加していく</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># configファイルをコンテナにコピー</span></div><div class="line">docker cp config/nginx1 nginx1:/etc/consul.d</div><div class="line"><span class="comment"># clusterにjoinする</span></div><div class="line">docker <span class="built_in">exec</span> -d -t nginx1 consul agent -config-file=/etc/consul.d/nginx1</div><div class="line"><span class="comment"># ttl health check用のスクリプトを起動</span></div><div class="line">docker <span class="built_in">exec</span> -d -t nginx1 bash -c <span class="string">'./http_request nginx1'</span></div><div class="line"> </div><div class="line">consul1    |     2017/01/25 07:50:51 [INFO] serf: EventMemberJoin: nginx1 172.16.238.13</div><div class="line">consul1    |     2017/01/25 07:50:51 [INFO] consul: member <span class="string">'nginx1'</span> joined, marking health alive</div><div class="line">consul2    |     2017/01/25 07:50:51 [INFO] serf: EventMemberJoin: nginx1 172.16.238.13</div><div class="line">consul3    |     2017/01/25 07:50:51 [INFO] serf: EventMemberJoin: nginx1 172.16.238.13</div><div class="line"> </div><div class="line"><span class="comment"># 以下nginx1と同じ処理を行う</span></div><div class="line"> </div><div class="line"><span class="comment"># nginx2</span></div><div class="line">docker cp config/nginx2 nginx2:/etc/consul.d</div><div class="line">docker <span class="built_in">exec</span> -d -t nginx2 consul agent -config-file=/etc/consul.d/nginx2</div><div class="line">docker <span class="built_in">exec</span> -d -t nginx2 bash -c <span class="string">'./http_request nginx2'</span></div><div class="line"> </div><div class="line">consul1    |     2017/01/25 07:51:31 [INFO] serf: EventMemberJoin: nginx2 172.16.238.14</div><div class="line">consul1    |     2017/01/25 07:51:31 [INFO] consul: member <span class="string">'nginx2'</span> joined, marking health alive</div><div class="line">consul2    |     2017/01/25 07:51:31 [INFO] serf: EventMemberJoin: nginx2 172.16.238.14</div><div class="line">consul3    |     2017/01/25 07:51:31 [INFO] serf: EventMemberJoin: nginx2 172.16.238.14</div><div class="line"> </div><div class="line"><span class="comment"># nginx3</span></div><div class="line">docker cp config/nginx3 nginx3:/etc/consul.d</div><div class="line">docker <span class="built_in">exec</span> -d -t nginx3 consul agent -config-file=/etc/consul.d/nginx3</div><div class="line">docker <span class="built_in">exec</span> -d -t nginx3 bash -c <span class="string">'./http_request nginx3'</span></div><div class="line"> </div><div class="line">consul1    |     2017/01/25 07:52:06 [INFO] serf: EventMemberJoin: nginx3 172.16.238.15</div><div class="line">consul1    |     2017/01/25 07:52:06 [INFO] consul: member <span class="string">'nginx3'</span> joined, marking health alive</div><div class="line">consul2    |     2017/01/25 07:52:06 [INFO] serf: EventMemberJoin: nginx3 172.16.238.15</div><div class="line">consul3    |     2017/01/25 07:52:06 [INFO] serf: EventMemberJoin: nginx3 172.16.238.15</div></pre></td></tr></table></figure>
<p>追加されていることをapiを通じて確認する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ローカルエージェント(consul1)で既知のノードを返します</span></div><div class="line">curl -s http://localhost:8500/v1/catalog/nodes | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"ID"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"consul1"</span>,</div><div class="line">    <span class="string">"Address"</span>: <span class="string">"172.16.238.10"</span>,</div><div class="line">    <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">      <span class="string">"lan"</span>: <span class="string">"172.16.238.10"</span>,</div><div class="line">      <span class="string">"wan"</span>: <span class="string">"172.16.238.10"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Meta"</span>: &#123;&#125;,</div><div class="line">    <span class="string">"CreateIndex"</span>: 5,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 9</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"ID"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"consul2"</span>,</div><div class="line">    <span class="string">"Address"</span>: <span class="string">"172.16.238.11"</span>,</div><div class="line">    <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">      <span class="string">"lan"</span>: <span class="string">"172.16.238.11"</span>,</div><div class="line">      <span class="string">"wan"</span>: <span class="string">"172.16.238.11"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Meta"</span>: &#123;&#125;,</div><div class="line">    <span class="string">"CreateIndex"</span>: 4,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 20</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"ID"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"consul3"</span>,</div><div class="line">    <span class="string">"Address"</span>: <span class="string">"172.16.238.12"</span>,</div><div class="line">    <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">      <span class="string">"lan"</span>: <span class="string">"172.16.238.12"</span>,</div><div class="line">      <span class="string">"wan"</span>: <span class="string">"172.16.238.12"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Meta"</span>: &#123;&#125;,</div><div class="line">    <span class="string">"CreateIndex"</span>: 6,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 8</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"ID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"Address"</span>: <span class="string">"172.16.238.13"</span>,</div><div class="line">    <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">      <span class="string">"lan"</span>: <span class="string">"172.16.238.13"</span>,</div><div class="line">      <span class="string">"wan"</span>: <span class="string">"172.16.238.13"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Meta"</span>: null,</div><div class="line">    <span class="string">"CreateIndex"</span>: 28,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 29</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"ID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx2"</span>,</div><div class="line">    <span class="string">"Address"</span>: <span class="string">"172.16.238.14"</span>,</div><div class="line">    <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">      <span class="string">"lan"</span>: <span class="string">"172.16.238.14"</span>,</div><div class="line">      <span class="string">"wan"</span>: <span class="string">"172.16.238.14"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Meta"</span>: null,</div><div class="line">    <span class="string">"CreateIndex"</span>: 119,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 120</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"ID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx3"</span>,</div><div class="line">    <span class="string">"Address"</span>: <span class="string">"172.16.238.15"</span>,</div><div class="line">    <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">      <span class="string">"lan"</span>: <span class="string">"172.16.238.15"</span>,</div><div class="line">      <span class="string">"wan"</span>: <span class="string">"172.16.238.15"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Meta"</span>: null,</div><div class="line">    <span class="string">"CreateIndex"</span>: 132,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 134</div><div class="line">  &#125;</div><div class="line">]</div><div class="line"> </div><div class="line"><span class="comment"># ローカルエージェント(consul1)で登録された全ての service を返す</span></div><div class="line">curl -s http://localhost:8500/v1/agent/services | jq .</div><div class="line"></div><div class="line">&#123;</div><div class="line">  <span class="string">"consul"</span>: &#123;</div><div class="line">    <span class="string">"ID"</span>: <span class="string">"consul"</span>,</div><div class="line">    <span class="string">"Service"</span>: <span class="string">"consul"</span>,</div><div class="line">    <span class="string">"Tags"</span>: [],</div><div class="line">    <span class="string">"Address"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Port"</span>: 8300,</div><div class="line">    <span class="string">"EnableTagOverride"</span>: <span class="literal">false</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 0,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 0</div><div class="line">  &#125;</div><div class="line">&#125;</div><div class="line"> </div><div class="line"><span class="comment"># ローカルエージェント(consul1) のserf エージェントが見えているメンバを返す</span></div><div class="line">curl -s http://localhost:8500/v1/agent/members | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"Addr"</span>: <span class="string">"172.16.238.13"</span>,</div><div class="line">    <span class="string">"Port"</span>: 8301,</div><div class="line">    <span class="string">"Tags"</span>: &#123;</div><div class="line">      <span class="string">"build"</span>: <span class="string">"0.7.2:'a9afa0c"</span>,</div><div class="line">      <span class="string">"dc"</span>: <span class="string">"dc1"</span>,</div><div class="line">      <span class="string">"role"</span>: <span class="string">"node"</span>,</div><div class="line">      <span class="string">"vsn"</span>: <span class="string">"2"</span>,</div><div class="line">      <span class="string">"vsn_max"</span>: <span class="string">"3"</span>,</div><div class="line">      <span class="string">"vsn_min"</span>: <span class="string">"2"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Status"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMin"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMax"</span>: 5,</div><div class="line">    <span class="string">"ProtocolCur"</span>: 2,</div><div class="line">    <span class="string">"DelegateMin"</span>: 2,</div><div class="line">    <span class="string">"DelegateMax"</span>: 4,</div><div class="line">    <span class="string">"DelegateCur"</span>: 4</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"nginx2"</span>,</div><div class="line">    <span class="string">"Addr"</span>: <span class="string">"172.16.238.14"</span>,</div><div class="line">    <span class="string">"Port"</span>: 8301,</div><div class="line">    <span class="string">"Tags"</span>: &#123;</div><div class="line">      <span class="string">"build"</span>: <span class="string">"0.7.2:'a9afa0c"</span>,</div><div class="line">      <span class="string">"dc"</span>: <span class="string">"dc1"</span>,</div><div class="line">      <span class="string">"role"</span>: <span class="string">"node"</span>,</div><div class="line">      <span class="string">"vsn"</span>: <span class="string">"2"</span>,</div><div class="line">      <span class="string">"vsn_max"</span>: <span class="string">"3"</span>,</div><div class="line">      <span class="string">"vsn_min"</span>: <span class="string">"2"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Status"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMin"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMax"</span>: 5,</div><div class="line">    <span class="string">"ProtocolCur"</span>: 2,</div><div class="line">    <span class="string">"DelegateMin"</span>: 2,</div><div class="line">    <span class="string">"DelegateMax"</span>: 4,</div><div class="line">    <span class="string">"DelegateCur"</span>: 4</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"nginx3"</span>,</div><div class="line">    <span class="string">"Addr"</span>: <span class="string">"172.16.238.15"</span>,</div><div class="line">    <span class="string">"Port"</span>: 8301,</div><div class="line">    <span class="string">"Tags"</span>: &#123;</div><div class="line">      <span class="string">"build"</span>: <span class="string">"0.7.2:'a9afa0c"</span>,</div><div class="line">      <span class="string">"dc"</span>: <span class="string">"dc1"</span>,</div><div class="line">      <span class="string">"role"</span>: <span class="string">"node"</span>,</div><div class="line">      <span class="string">"vsn"</span>: <span class="string">"2"</span>,</div><div class="line">      <span class="string">"vsn_max"</span>: <span class="string">"3"</span>,</div><div class="line">      <span class="string">"vsn_min"</span>: <span class="string">"2"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Status"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMin"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMax"</span>: 5,</div><div class="line">    <span class="string">"ProtocolCur"</span>: 2,</div><div class="line">    <span class="string">"DelegateMin"</span>: 2,</div><div class="line">    <span class="string">"DelegateMax"</span>: 4,</div><div class="line">    <span class="string">"DelegateCur"</span>: 4</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"consul1"</span>,</div><div class="line">    <span class="string">"Addr"</span>: <span class="string">"172.16.238.10"</span>,</div><div class="line">    <span class="string">"Port"</span>: 8301,</div><div class="line">    <span class="string">"Tags"</span>: &#123;</div><div class="line">      <span class="string">"build"</span>: <span class="string">"0.7.5:'21f2d5a"</span>,</div><div class="line">      <span class="string">"dc"</span>: <span class="string">"dc1"</span>,</div><div class="line">      <span class="string">"expect"</span>: <span class="string">"3"</span>,</div><div class="line">      <span class="string">"id"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">      <span class="string">"port"</span>: <span class="string">"8300"</span>,</div><div class="line">      <span class="string">"role"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"vsn"</span>: <span class="string">"2"</span>,</div><div class="line">      <span class="string">"vsn_max"</span>: <span class="string">"3"</span>,</div><div class="line">      <span class="string">"vsn_min"</span>: <span class="string">"2"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Status"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMin"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMax"</span>: 5,</div><div class="line">    <span class="string">"ProtocolCur"</span>: 2,</div><div class="line">    <span class="string">"DelegateMin"</span>: 2,</div><div class="line">    <span class="string">"DelegateMax"</span>: 5,</div><div class="line">    <span class="string">"DelegateCur"</span>: 4</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"consul3"</span>,</div><div class="line">    <span class="string">"Addr"</span>: <span class="string">"172.16.238.12"</span>,</div><div class="line">    <span class="string">"Port"</span>: 8301,</div><div class="line">    <span class="string">"Tags"</span>: &#123;</div><div class="line">      <span class="string">"build"</span>: <span class="string">"0.7.5:'21f2d5a"</span>,</div><div class="line">      <span class="string">"dc"</span>: <span class="string">"dc1"</span>,</div><div class="line">      <span class="string">"id"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">      <span class="string">"port"</span>: <span class="string">"8300"</span>,</div><div class="line">      <span class="string">"role"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"vsn"</span>: <span class="string">"2"</span>,</div><div class="line">      <span class="string">"vsn_max"</span>: <span class="string">"3"</span>,</div><div class="line">      <span class="string">"vsn_min"</span>: <span class="string">"2"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Status"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMin"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMax"</span>: 5,</div><div class="line">    <span class="string">"ProtocolCur"</span>: 2,</div><div class="line">    <span class="string">"DelegateMin"</span>: 2,</div><div class="line">    <span class="string">"DelegateMax"</span>: 5,</div><div class="line">    <span class="string">"DelegateCur"</span>: 4</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"consul2"</span>,</div><div class="line">    <span class="string">"Addr"</span>: <span class="string">"172.16.238.11"</span>,</div><div class="line">    <span class="string">"Port"</span>: 8301,</div><div class="line">    <span class="string">"Tags"</span>: &#123;</div><div class="line">      <span class="string">"build"</span>: <span class="string">"0.7.5:'21f2d5a"</span>,</div><div class="line">      <span class="string">"dc"</span>: <span class="string">"dc1"</span>,</div><div class="line">      <span class="string">"id"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">      <span class="string">"port"</span>: <span class="string">"8300"</span>,</div><div class="line">      <span class="string">"role"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"vsn"</span>: <span class="string">"2"</span>,</div><div class="line">      <span class="string">"vsn_max"</span>: <span class="string">"3"</span>,</div><div class="line">      <span class="string">"vsn_min"</span>: <span class="string">"2"</span></div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Status"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMin"</span>: 1,</div><div class="line">    <span class="string">"ProtocolMax"</span>: 5,</div><div class="line">    <span class="string">"ProtocolCur"</span>: 2,</div><div class="line">    <span class="string">"DelegateMin"</span>: 2,</div><div class="line">    <span class="string">"DelegateMax"</span>: 5,</div><div class="line">    <span class="string">"DelegateCur"</span>: 4</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># service consulのhealth check</span></div><div class="line">curl -s http://localhost:8500/v1/health/service/consul | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">      <span class="string">"Node"</span>: <span class="string">"consul1"</span>,</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.10"</span>,</div><div class="line">      <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">        <span class="string">"lan"</span>: <span class="string">"172.16.238.10"</span>,</div><div class="line">        <span class="string">"wan"</span>: <span class="string">"172.16.238.10"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="string">"Meta"</span>: &#123;&#125;,</div><div class="line">      <span class="string">"CreateIndex"</span>: 5,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 9</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Service"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"Service"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"Tags"</span>: [],</div><div class="line">      <span class="string">"Address"</span>: <span class="string">""</span>,</div><div class="line">      <span class="string">"Port"</span>: 8300,</div><div class="line">      <span class="string">"EnableTagOverride"</span>: <span class="literal">false</span>,</div><div class="line">      <span class="string">"CreateIndex"</span>: 5,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 9</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Checks"</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"consul1"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 5,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 5</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">      <span class="string">"Node"</span>: <span class="string">"consul2"</span>,</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.11"</span>,</div><div class="line">      <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">        <span class="string">"lan"</span>: <span class="string">"172.16.238.11"</span>,</div><div class="line">        <span class="string">"wan"</span>: <span class="string">"172.16.238.11"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="string">"Meta"</span>: &#123;&#125;,</div><div class="line">      <span class="string">"CreateIndex"</span>: 4,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 35</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Service"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"Service"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"Tags"</span>: [],</div><div class="line">      <span class="string">"Address"</span>: <span class="string">""</span>,</div><div class="line">      <span class="string">"Port"</span>: 8300,</div><div class="line">      <span class="string">"EnableTagOverride"</span>: <span class="literal">false</span>,</div><div class="line">      <span class="string">"CreateIndex"</span>: 4,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 35</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Checks"</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"consul2"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 8,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 8</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"e8ded508-98bb-4f9b-b0a2-ea872a0361d6"</span>,</div><div class="line">      <span class="string">"Node"</span>: <span class="string">"consul3"</span>,</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.12"</span>,</div><div class="line">      <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">        <span class="string">"lan"</span>: <span class="string">"172.16.238.12"</span>,</div><div class="line">        <span class="string">"wan"</span>: <span class="string">"172.16.238.12"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="string">"Meta"</span>: &#123;&#125;,</div><div class="line">      <span class="string">"CreateIndex"</span>: 6,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 32</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Service"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"Service"</span>: <span class="string">"consul"</span>,</div><div class="line">      <span class="string">"Tags"</span>: [],</div><div class="line">      <span class="string">"Address"</span>: <span class="string">""</span>,</div><div class="line">      <span class="string">"Port"</span>: 8300,</div><div class="line">      <span class="string">"EnableTagOverride"</span>: <span class="literal">false</span>,</div><div class="line">      <span class="string">"CreateIndex"</span>: 6,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 32</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Checks"</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"consul3"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 7,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 7</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="health-check-死活監視-について"><a href="#health-check-死活監視-について" class="headerlink" title="health check(死活監視)について"></a>health check(死活監視)について</h3><p>consulのhealth checkには次の種類のものがある。</p>
<table>
<thead>
<tr>
<th>check</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>Script + Interval</td>
<td>Exit code 0でpassing、Exit code 1でWarning、それ以外でcriticalとなるスクリプトを実行する</td>
</tr>
<tr>
<td>HTTP + Interval</td>
<td>curlなどでのHTTPリクエスト。2xxステータスでpassing。429 Too Many Requestsでwarning。それ以外はcritical。</td>
</tr>
<tr>
<td>TCP + Interval</td>
<td>指定ホストにTCPで接続を試みる。接続成功でpassing、それ以外はciritcalとなる。</td>
</tr>
<tr>
<td>Time to Live (TTL)</td>
<td>アプリケーションが自身の状態をチェックして通知する。通知状態はTTLの間保持される。</td>
</tr>
<tr>
<td>Docker + Interval</td>
<td>DockerコンテナにHTTPまたはSocket通信し、適切な終了コードかをチェックする</td>
</tr>
</tbody>
</table>
<p>今回は以下の機能を試す。</p>
<ul>
<li>HTTP + Interval</li>
<li>TCP + Interval</li>
<li>Time to Live (TTL)</li>
</ul>
<p>ちなみにTime to Liveはちょっとわかりにくいが、自身のconsul http apiを実行する。<br>例えばpass状態を送る場合は <a href="http://localhost:8500/v1/agent/check/pass/{CHECK_ID}" target="_blank" rel="external">http://localhost:8500/v1/agent/check/pass/{CHECK_ID}</a> にリクエストする。</p>
<p>今回のhealth checkの設定は以下のようにしている。<br>(すでにclusterにjoinするときに設定は行っている)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// nginx1の場合</span></div><div class="line"></div><div class="line">&#123;</div><div class="line"><span class="string">"checks"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"name"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">      <span class="string">"http"</span>: <span class="string">"http://localhost:80"</span>,</div><div class="line">      <span class="string">"interval"</span>: <span class="string">"10s"</span>,</div><div class="line">      <span class="string">"timeout"</span>: <span class="string">"1s"</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="string">"id"</span>: <span class="string">"nginx1"</span>,</div><div class="line">      <span class="string">"name"</span>: <span class="string">"Nginx Status"</span>,</div><div class="line">      <span class="string">"ttl"</span>: <span class="string">"30s"</span></div><div class="line">    &#125;,</div><div class="line">    &#123;</div><div class="line">      <span class="string">"name"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">      <span class="string">"tcp"</span>: <span class="string">"172.16.238.13:80"</span>,</div><div class="line">      <span class="string">"interval"</span>: <span class="string">"10s"</span>,</div><div class="line">      <span class="string">"timeout"</span>: <span class="string">"1s"</span></div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>service(nginx1、nginx2、nginx3)ごとのstatusを取得してみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div><div class="line">148</div><div class="line">149</div><div class="line">150</div><div class="line">151</div><div class="line">152</div><div class="line">153</div><div class="line">154</div><div class="line">155</div><div class="line">156</div><div class="line">157</div><div class="line">158</div><div class="line">159</div><div class="line">160</div><div class="line">161</div><div class="line">162</div><div class="line">163</div><div class="line">164</div><div class="line">165</div><div class="line">166</div><div class="line">167</div><div class="line">168</div><div class="line">169</div><div class="line">170</div><div class="line">171</div><div class="line">172</div><div class="line">173</div><div class="line">174</div><div class="line">175</div><div class="line">176</div><div class="line">177</div><div class="line">178</div><div class="line">179</div><div class="line">180</div><div class="line">181</div><div class="line">182</div><div class="line">183</div><div class="line">184</div><div class="line">185</div><div class="line">186</div><div class="line">187</div><div class="line">188</div><div class="line">189</div><div class="line">190</div><div class="line">191</div><div class="line">192</div><div class="line">193</div><div class="line">194</div><div class="line">195</div><div class="line">196</div><div class="line">197</div><div class="line">198</div><div class="line">199</div><div class="line">200</div><div class="line">201</div><div class="line">202</div><div class="line">203</div><div class="line">204</div><div class="line">205</div><div class="line">206</div><div class="line">207</div><div class="line">208</div><div class="line">209</div><div class="line">210</div><div class="line">211</div><div class="line">212</div><div class="line">213</div><div class="line">214</div><div class="line">215</div><div class="line">216</div><div class="line">217</div><div class="line">218</div><div class="line">219</div><div class="line">220</div><div class="line">221</div><div class="line">222</div><div class="line">223</div><div class="line">224</div><div class="line">225</div><div class="line">226</div><div class="line">227</div><div class="line">228</div><div class="line">229</div><div class="line">230</div><div class="line">231</div><div class="line">232</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># service nginxのhealth check</span></div><div class="line">curl -s http://localhost:8500/v1/health/service/proxy | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">""</span>,</div><div class="line">      <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.13"</span>,</div><div class="line">      <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">        <span class="string">"lan"</span>: <span class="string">"172.16.238.13"</span>,</div><div class="line">        <span class="string">"wan"</span>: <span class="string">"172.16.238.13"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="string">"Meta"</span>: null,</div><div class="line">      <span class="string">"CreateIndex"</span>: 12,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 13</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Service"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"proxy"</span>,</div><div class="line">      <span class="string">"Service"</span>: <span class="string">"proxy"</span>,</div><div class="line">      <span class="string">"Tags"</span>: [</div><div class="line">        <span class="string">"nginx"</span></div><div class="line">      ],</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.13"</span>,</div><div class="line">      <span class="string">"Port"</span>: 80,</div><div class="line">      <span class="string">"EnableTagOverride"</span>: <span class="literal">false</span>,</div><div class="line">      <span class="string">"CreateIndex"</span>: 13,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 13</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Checks"</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"HTTP GET http://172.16.238.13: 200 OK Output: &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\n    body &#123;\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    &#125;\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 14,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 17</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"nginx1"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Nginx Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 15,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 227</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 12,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 12</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"TCP connect 172.16.238.13:80: Success"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 16,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 18</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">""</span>,</div><div class="line">      <span class="string">"Node"</span>: <span class="string">"nginx2"</span>,</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.14"</span>,</div><div class="line">      <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">        <span class="string">"lan"</span>: <span class="string">"172.16.238.14"</span>,</div><div class="line">        <span class="string">"wan"</span>: <span class="string">"172.16.238.14"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="string">"Meta"</span>: null,</div><div class="line">      <span class="string">"CreateIndex"</span>: 22,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 25</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Service"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"proxy"</span>,</div><div class="line">      <span class="string">"Service"</span>: <span class="string">"proxy"</span>,</div><div class="line">      <span class="string">"Tags"</span>: [</div><div class="line">        <span class="string">"nginx"</span></div><div class="line">      ],</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.14"</span>,</div><div class="line">      <span class="string">"Port"</span>: 80,</div><div class="line">      <span class="string">"EnableTagOverride"</span>: <span class="literal">false</span>,</div><div class="line">      <span class="string">"CreateIndex"</span>: 25,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 25</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Checks"</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx2"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"HTTP GET http://172.16.238.14: 200 OK Output: &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\n    body &#123;\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    &#125;\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 26,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 30</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx2"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"nginx2"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Nginx Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 27,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 223</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx2"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 22,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 22</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx2"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"TCP connect 172.16.238.14:80: Success"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 28,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 29</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">""</span>,</div><div class="line">      <span class="string">"Node"</span>: <span class="string">"nginx3"</span>,</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.15"</span>,</div><div class="line">      <span class="string">"TaggedAddresses"</span>: &#123;</div><div class="line">        <span class="string">"lan"</span>: <span class="string">"172.16.238.15"</span>,</div><div class="line">        <span class="string">"wan"</span>: <span class="string">"172.16.238.15"</span></div><div class="line">      &#125;,</div><div class="line">      <span class="string">"Meta"</span>: null,</div><div class="line">      <span class="string">"CreateIndex"</span>: 37,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 38</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Service"</span>: &#123;</div><div class="line">      <span class="string">"ID"</span>: <span class="string">"proxy"</span>,</div><div class="line">      <span class="string">"Service"</span>: <span class="string">"proxy"</span>,</div><div class="line">      <span class="string">"Tags"</span>: [</div><div class="line">        <span class="string">"nginx"</span></div><div class="line">      ],</div><div class="line">      <span class="string">"Address"</span>: <span class="string">"172.16.238.15"</span>,</div><div class="line">      <span class="string">"Port"</span>: 80,</div><div class="line">      <span class="string">"EnableTagOverride"</span>: <span class="literal">false</span>,</div><div class="line">      <span class="string">"CreateIndex"</span>: 38,</div><div class="line">      <span class="string">"ModifyIndex"</span>: 38</div><div class="line">    &#125;,</div><div class="line">    <span class="string">"Checks"</span>: [</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx3"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"HTTP GET http://172.16.238.15: 200 OK Output: &lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n&lt;title&gt;Welcome to nginx!&lt;/title&gt;\n&lt;style&gt;\n    body &#123;\n        width: 35em;\n        margin: 0 auto;\n        font-family: Tahoma, Verdana, Arial, sans-serif;\n    &#125;\n&lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;\n&lt;p&gt;If you see this page, the nginx web server is successfully installed and\nworking. Further configuration is required.&lt;/p&gt;\n\n&lt;p&gt;For online documentation and support please refer to\n&lt;a href=\"http://nginx.org/\"&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;\nCommercial support is available at\n&lt;a href=\"http://nginx.com/\"&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;\n\n&lt;p&gt;&lt;em&gt;Thank you for using nginx.&lt;/em&gt;&lt;/p&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 41,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 42</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx3"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"nginx3"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Nginx Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 39,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 228</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx3"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 37,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 37</div><div class="line">      &#125;,</div><div class="line">      &#123;</div><div class="line">        <span class="string">"Node"</span>: <span class="string">"nginx3"</span>,</div><div class="line">        <span class="string">"CheckID"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">        <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">        <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"Output"</span>: <span class="string">"TCP connect 172.16.238.14:80: Success"</span>,</div><div class="line">        <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">        <span class="string">"CreateIndex"</span>: 40,</div><div class="line">        <span class="string">"ModifyIndex"</span>: 44</div><div class="line">      &#125;</div><div class="line">    ]</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>consul serverのnodeを一つダウンしてみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker stop consul3</div><div class="line">consul3</div></pre></td></tr></table></figure>
<p>consul3の状態を確認する</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">curl -s http://localhost:8500/v1/health/node/consul3 | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"consul3"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"critical"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"Agent not live or unreachable"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 7,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 748</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>consul3 を復帰させる</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">docker start consul3</div><div class="line">consul3</div></pre></td></tr></table></figure>
<p>再び状態を確認してみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">curl -s http://localhost:8500/v1/health/node/consul3 | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"consul3"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 7,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 800</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>nginx1のnodeのhttpチェックをcriticalな状態にしてみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">docker <span class="built_in">exec</span> nginx1 mv /usr/share/nginx/html/index.html /usr/share/nginx/html/index.txt</div><div class="line">curl -s http://localhost:8500/v1/health/node/nginx1 | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"critical"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"HTTP GET http://localhost:80: 403 Forbidden Output: &lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;\r\n&lt;body bgcolor=\"white\"&gt;\r\n&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx/1.11.10&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 614,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 803</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"Nginx Status"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 612,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 806</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 610,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 610</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"TCP connect 172.16.238.13:80: Success"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 613,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 613</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>apiからciriticalなものだけ取得してみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">curl -s http://localhost:8500/v1/health/state/critical | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"critical"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"HTTP GET http://localhost:80: 403 Forbidden Output: &lt;html&gt;\r\n&lt;head&gt;&lt;title&gt;403 Forbidden&lt;/title&gt;&lt;/head&gt;\r\n&lt;body bgcolor=\"white\"&gt;\r\n&lt;center&gt;&lt;h1&gt;403 Forbidden&lt;/h1&gt;&lt;/center&gt;\r\n&lt;hr&gt;&lt;center&gt;nginx/1.11.10&lt;/center&gt;\r\n&lt;/body&gt;\r\n&lt;/html&gt;\r\n"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 614,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 803</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="メンテナンスモード"><a href="#メンテナンスモード" class="headerlink" title="メンテナンスモード"></a>メンテナンスモード</h3><p>当たり前ではなるが、nodeをメンテナス状態にできる。<br>nginx1をメンテナンスモードにする。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">docker <span class="built_in">exec</span> -it nginx1 /bin/bash</div><div class="line"></div><div class="line"><span class="comment"># maintenance modeをenableにして、理由にtestとする</span></div><div class="line">consul maint -reason <span class="built_in">test</span> -<span class="built_in">enable</span></div><div class="line">Node maintenance is now enabled</div><div class="line"></div><div class="line"><span class="comment"># maintenance の状態を確認</span></div><div class="line">consul maint</div><div class="line">Node:</div><div class="line">  Name:   nginx1</div><div class="line">  Reason: <span class="built_in">test</span></div></pre></td></tr></table></figure>
<p>nginx1の状態を確認する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div></pre></td><td class="code"><pre><div class="line">curl -s http://localhost:8500/v1/health/node/nginx1 | jq .</div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"_node_maintenance"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"Node Maintenance Mode"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"critical"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">"test"</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 894,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 894</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"HTTP Nginx on port 80"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"HTTP GET http://localhost:80: 200 OK Output: "</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 614,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 869</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"Nginx Status"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 612,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 928</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"Agent alive and reachable"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 610,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 610</div><div class="line">  &#125;,</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"SSH TCP on port 80"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"passing"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"TCP connect 172.16.238.13:80: Success"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"CreateIndex"</span>: 613,</div><div class="line">    <span class="string">"ModifyIndex"</span>: 613</div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>メンテナンスモードを解除する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># maintenance modeをdisableにする</span></div><div class="line">consul maint -<span class="built_in">disable</span></div><div class="line">Node maintenance is now disabled</div><div class="line"></div><div class="line">consul maint</div><div class="line"><span class="comment"># なし</span></div></pre></td></tr></table></figure>
<h3 id="event処理"><a href="#event処理" class="headerlink" title="event処理"></a>event処理</h3><p>イベントを監視して、発火時に任意の処理を実行することができる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># testイベントをwatchする</span></div><div class="line">docker <span class="built_in">exec</span> -it consule1 /bin/sh</div><div class="line">consul watch -<span class="built_in">type</span>=event -name=<span class="built_in">test</span> <span class="built_in">echo</span> <span class="string">"test"</span></div><div class="line"></div><div class="line"><span class="comment"># testイベントを発行</span></div><div class="line">docker <span class="built_in">exec</span> -it nginx1 /bin/bash</div><div class="line"></div><div class="line"><span class="comment"># consul1</span></div><div class="line"><span class="built_in">test</span></div></pre></td></tr></table></figure>
<p>watchコマンドで状態が変化した際に特定の処理をしてみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">docker <span class="built_in">exec</span> -it consule1 /bin/sh</div><div class="line">consul watch -<span class="built_in">type</span>=checks -state=critical <span class="string">"jq ."</span></div><div class="line">[]</div><div class="line"> </div><div class="line"><span class="comment"># nginx1を落とす</span></div><div class="line">docker stop nginx1</div><div class="line"> </div><div class="line"><span class="comment"># criticalが表示される</span></div><div class="line">[</div><div class="line">  &#123;</div><div class="line">    <span class="string">"Node"</span>: <span class="string">"nginx1"</span>,</div><div class="line">    <span class="string">"CheckID"</span>: <span class="string">"serfHealth"</span>,</div><div class="line">    <span class="string">"Name"</span>: <span class="string">"Serf Health Status"</span>,</div><div class="line">    <span class="string">"Status"</span>: <span class="string">"critical"</span>,</div><div class="line">    <span class="string">"Notes"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"Output"</span>: <span class="string">"Agent not live or unreachable"</span>,</div><div class="line">    <span class="string">"ServiceID"</span>: <span class="string">""</span>,</div><div class="line">    <span class="string">"ServiceName"</span>: <span class="string">""</span></div><div class="line">  &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<h3 id="consul-templateを試してみる"><a href="#consul-templateを試してみる" class="headerlink" title="consul-templateを試してみる"></a>consul-templateを試してみる</h3><p><a href="https://github.com/hashicorp/consul-template" target="_blank" rel="external">consul-template</a>も試しておく。<br>consul-templateは特定のイベントに応じて、登録しているtemplateからファイルを生成することができる。<br>イベントを監視して、特定のイベントが発火すると登録しているtemplateからファイルを再生成する感じである。</p>
<p>consul-templateで監視できるイベントは</p>
<ul>
<li>datacenter(detacenterの)</li>
<li>file(fileの変更)</li>
<li>key(ストアのkey変更・存在)</li>
<li>ls(kvストアの最上位のkey)</li>
<li>node</li>
<li>secret</li>
<li>service</li>
<li>tree(kvストアのkvペア)</li>
</ul>
<p>例えば、次のようなnodeが追加されるたびにhost名とipを記載したファイルが出力されるもので試してみる。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;&#123; range nodes &#125;&#125;</div><div class="line"># &#123;&#123;.Node&#125;&#125;</div><div class="line">&#123;&#123; .Address &#125;&#125; &#123;&#123;.Node&#125;&#125;</div><div class="line">&#123;&#123; end &#125;&#125;</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">docker <span class="built_in">exec</span> -it nginx1 /bin/bash</div><div class="line"> </div><div class="line"><span class="comment"># -dry でdry run</span></div><div class="line">consul-template -consul-addr 127.0.0.1:8500 -template <span class="string">"/etc/consul-template/config.d/templates/hosts.ctmpl:/hosts"</span> -dry</div><div class="line"> </div><div class="line">&gt; /hosts</div><div class="line"> </div><div class="line"><span class="comment"># consul1</span></div><div class="line">172.16.238.10 consul1</div><div class="line"> </div><div class="line"><span class="comment"># consul2</span></div><div class="line">172.16.238.11 consul2</div><div class="line"> </div><div class="line"><span class="comment"># consul3</span></div><div class="line">172.16.238.12 consul3</div><div class="line"> </div><div class="line"><span class="comment"># nginx1</span></div><div class="line">172.16.238.13 nginx1</div></pre></td></tr></table></figure>
<p>node nginx2を追加する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">&gt; /hosts</div><div class="line"> </div><div class="line"><span class="comment"># consul1</span></div><div class="line">172.16.238.10 consul1</div><div class="line"> </div><div class="line"><span class="comment"># consul2</span></div><div class="line">172.16.238.11 consul2</div><div class="line"> </div><div class="line"><span class="comment"># consul3</span></div><div class="line">172.16.238.12 consul3</div><div class="line"> </div><div class="line"><span class="comment"># nginx1</span></div><div class="line">172.16.238.13 nginx1</div><div class="line"> </div><div class="line"><span class="comment"># nginx2</span></div><div class="line">172.16.238.14 nginx2</div></pre></td></tr></table></figure>
<p>テンプレートが更新されている。</p>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>おさらいとして、今回はdockerの公式イメージでクラスタを構成してみた。<br>consulによるクラスタ構成を以前より意識できた感がある。</p>
<h3 id="repository"><a href="#repository" class="headerlink" title="repository"></a>repository</h3><p><a href="https://github.com/kazu69/docker-consul-example" target="_blank" rel="external">docker-consul-example</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;consulを少し触ったままだったので、ちゃんと学んでみた。&lt;br&gt;と言っても一通り触ったくらいであるが。&lt;/p&gt;
&lt;p&gt;あらためて試すにあたり、&lt;a href=&quot;https://hub.docker.com/_/consul/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Official Consul Docker Image&lt;/a&gt;を使用してクラスタを構成した。&lt;/p&gt;
    
    </summary>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/memo/"/>
    
    
  </entry>
  
  <entry>
    <title>HTTP2 Server PushとService Workerを使ったレスポンス改善</title>
    <link href="http://blog.kazu69.net/2017/01/28/response_improvement_using_http2_server_push_service_worke/"/>
    <id>http://blog.kazu69.net/2017/01/28/response_improvement_using_http2_server_push_service_worke/</id>
    <published>2017-01-28T09:43:38.000Z</published>
    <updated>2017-01-29T14:01:10.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.kazu69.net/2016/10/06/using-http2-serverpush-with-expressjs/">Express width HTTP2 Server Push</a> を試したので、<br>今回はPushされたリソースをCache APIでブラウにキャッシュして、<br>二度目以降のアクセスはキャッシュを使いHTTPリクエストしないでレスポンスをさらに向上できることを試してみた。</p>
<a id="more"></a>
<p>復習でHTTP2 Server Pushを試してみる。</p>
<h2 id="HTTP2-Server-Push"><a href="#HTTP2-Server-Push" class="headerlink" title="HTTP2 Server Push"></a>HTTP2 Server Push</h2><p><a href="https://github.com/kazu69/express-http2-serviceworker-example" target="_blank" rel="external">サンプルで作ったアプリケーション</a>ではStreamにリソースファイルをPushしてレスポンスを返すことで、Server Pushを実現している。</p>
<p>もしアプリケーションの前にNginxなどのProxyサーバーがある場合は、HTTPヘッダーにLinkヘッダーを追加してレスポンスを返すようにしたら良い。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">Promise</span>.all(</div><div class="line">    pushFiles.map(<span class="function"><span class="params">file</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">const</span> option = <span class="built_in">Object</span>.assign(stremOption, &#123;<span class="string">'response'</span>: &#123;<span class="string">'content-type'</span>: file.mime&#125;&#125;);</div><div class="line">        <span class="comment">// create push stream</span></div><div class="line">        <span class="keyword">const</span> stream = res.push(file.path, option);</div><div class="line"></div><div class="line">        stream.on(<span class="string">'error'</span>, error =&gt; &#123;</div><div class="line">            <span class="built_in">console</span>.error(error);</div><div class="line">        &#125;);</div><div class="line"></div><div class="line">        stream.end(fs.readFileSync(<span class="string">`<span class="subst">$&#123;publicPath&#125;</span><span class="subst">$&#123;file.path&#125;</span>`</span>));</div><div class="line">        <span class="keyword">return</span> file;</div><div class="line">    &#125;)</div><div class="line">).then(<span class="function"><span class="params">files</span> =&gt;</span> &#123;</div><div class="line">    next();</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>HTTPリクエストする<br>(あらかじめcurlでhttp2出来るようにlibcurlにnghttp2オプションを追加している)</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">curl -kI https://localhost:3000/push/</div><div class="line">HTTP/2 200</div><div class="line">x-powered-by: Express</div><div class="line">access-control-allow-origin: *</div><div class="line">access-control-allow-headers: Origin, X-Requested-With, Content-Type, Accept</div></pre></td></tr></table></figure>
<p>Chrome Devtoolのネットワークを見てみると、HTTP2 + Server Push されていることがわかる。</p>
<p><img src="/images/2017/01/28/server-push.png" alt=""></p>
<h2 id="Service-Worker"><a href="#Service-Worker" class="headerlink" title="Service Worker"></a>Service Worker</h2><p><a href="https://www.w3.org/TR/service-workers/" target="_blank" rel="external">Service Worker</a>はブラウザがwebページのスクリプトとは別のプロセスでスクリプトをバックグラウンドできる機能。<br>プッシュ通知やモバイルアプリでのバックグラウンドでのデータの同期などが実現できる。</p>
<p>Caniuseでみると<a href="http://caniuse.com/#feat=serviceworkers" target="_blank" rel="external">各ブラウザのサポート状況はこんな感じ</a>。</p>
<p>今回は<a href="https://www.google.co.jp/chrome/browser/canary.html" target="_blank" rel="external">Chrome Canary (v58)</a>を使う。もちろんHTTPS環境は必要。<br>そのほかChromeでService Workerを使うためのDebug環境を整えておく。</p>
<h3 id="自己証明書を許可する"><a href="#自己証明書を許可する" class="headerlink" title="自己証明書を許可する"></a>自己証明書を許可する</h3><p>chromeでローカルホスト証明書を許可するようにフラグを切り替えておく。</p>
<p>chrome://flags/#allow-insecure-localhost を開いて設定を切替る。</p>
<p><img src="/images/2017/01/28/allow-insecure-localhost.png" alt=""></p>
<h3 id="Service-Worker-Inspector"><a href="#Service-Worker-Inspector" class="headerlink" title="Service Worker Inspector"></a>Service Worker Inspector</h3><p>Service Worker が有効になっているかは、chrome://inspect/#service-workers を開くことで確認できる。<br>Service Worker の一覧と内容、解除を操作できる。</p>
<p><img src="/images/2017/01/28/service-worker-inspector.png" alt=""></p>
<h3 id="serviceworker-internals"><a href="#serviceworker-internals" class="headerlink" title="serviceworker-internals"></a>serviceworker-internals</h3><p>chrome://serviceworker-internals/ を開いて確認できる。</p>
<p>Service Workerの内容や開始、停止やデバックなどを行える。</p>
<p><img src="/images/2017/01/28/serviceworker-internals.png" alt=""></p>
<h3 id="Service-Worker-について"><a href="#Service-Worker-について" class="headerlink" title="Service Worker について"></a>Service Worker について</h3><p>まずはService Workerについてざっくりと学ぶ。<br>Service Workerのライフサイクルは次のようになる。</p>
<p><img src="/images/2017/01/28/service-workers-lifecycle.png" alt=""></p>
<h3 id="1-Service-Workerの登録"><a href="#1-Service-Workerの登録" class="headerlink" title="1. Service Workerの登録"></a>1. Service Workerの登録</h3><p>まずページにアクセスすると、Service Workerをダウンロード。<br>register メソッドをつかってjavascriptを登録する。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">navigator.serviceWorker.register(<span class="string">'/serviceworker.js'</span>, &#123;<span class="attr">scope</span>: <span class="string">'/'</span>&#125;)</div></pre></td></tr></table></figure>
<p>登録の際にscopeパラメータオプションを指定できる。<br>scopeを指定することで、service workerが制御可能なコンテンツを指定できる。<br>たとえば <strong>{ socpe: ‘/sw/‘ }</strong> と指定した場合、 sw/ ディレクトリ以下をService Workerで制御できる。</p>
<p>ちなみに何度か登録に失敗した、その場合は次のことが考えられる。</p>
<ul>
<li>https通信ではない</li>
<li>service workerファイルへのパスが相対パスではない</li>
<li>指定するファイルがSameOriginではない</li>
</ul>
<h3 id="2-Service-Workerのインストールとアクティベート"><a href="#2-Service-Workerのインストールとアクティベート" class="headerlink" title="2 Service Workerのインストールとアクティベート"></a>2 Service Workerのインストールとアクティベート</h3><p>登録すると、InstallとActivate というイベントが順番に実行される。<br>すでにService Workerがすでに登録されている場合は、Service Workerが更新できる状況になるまで待つことになる。<br>(すぐに処理を開始するとデータに不整合が発生する恐れがあるため)</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="string">'serviceWorker'</span> <span class="keyword">in</span> navigator) &#123;</div><div class="line">    navigator.serviceWorker.register(<span class="string">'/sw.js'</span>, &#123;<span class="attr">scope</span>: <span class="string">'/'</span>&#125;).then(<span class="function"><span class="params">reg</span> =&gt;</span> &#123;</div><div class="line">        <span class="keyword">if</span>(reg.installing) &#123;</div><div class="line">            <span class="comment">// インストール中</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'Service worker installing'</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(reg.waiting) &#123;</div><div class="line">            <span class="comment">// すでに登録されているService Workerがある場合</span></div><div class="line">            <span class="comment">// service workerが更新できる状況になるまで待つ</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'Service worker installed'</span>);</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span>(reg.active) &#123;</div><div class="line">            <span class="comment">// アクティベート</span></div><div class="line">            <span class="built_in">console</span>.log(<span class="string">'Service worker active'</span>);</div><div class="line">        &#125;</div><div class="line">    &#125;).catch(<span class="function"><span class="params">err</span> =&gt;</span> &#123;</div><div class="line">        <span class="built_in">console</span>.error(<span class="string">'ServiceWorker registration failed:'</span>, err);</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.addEventListener(<span class="string">'install'</span>, event =&gt; &#123;</div><div class="line">        event.waitUntil(</div><div class="line">            <span class="comment">// some install event hook script</span></div><div class="line">        );</div><div class="line">    &#125;, <span class="literal">false</span>);</div><div class="line"></div><div class="line">    <span class="keyword">this</span>.addEventListener(<span class="string">'activate'</span>, event =&gt; &#123;</div><div class="line">        event.waitUntil(</div><div class="line">            <span class="comment">// some event activate hook script</span></div><div class="line">        );</div><div class="line">    &#125;, <span class="literal">false</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>各状態のイベントリスナーを追加することで、callbackできる。<br>このとき、各遷移状態に移行した際に実行するメソッドは waitUntil()メソッドに引数で渡すことができる。</p>
<p>また、install後に直ちにactivate状態に遷移するには</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">self.addEventListener(<span class="string">'install'</span>, event =&gt; &#123;</div><div class="line">    event.waitUntil(self.skipWaiting());</div><div class="line">&#125;, <span class="literal">false</span>);</div></pre></td></tr></table></figure>
<p>activate後に直ちにactivated状態に遷移するには</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">self.addEventListener(<span class="string">'activate'</span>, event =&gt; &#123;</div><div class="line">    event.waitUntil(self.clients.claim());</div><div class="line">&#125;, <span class="literal">false</span>);</div></pre></td></tr></table></figure>
<p>今回はinstall時にファイルをキャッシュについする。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">self.addEventListener(<span class="string">'install'</span>, event =&gt; &#123;</div><div class="line">    event.waitUntil(</div><div class="line">        caches.open(CACHE_NAME)</div><div class="line">        .then(<span class="function"><span class="params">cache</span> =&gt;</span> &#123;</div><div class="line">            <span class="keyword">const</span> cachePromises = CACHE.map(<span class="function"><span class="params">url</span> =&gt;</span> &#123;</div><div class="line">                <span class="keyword">const</span> fetchUrl = <span class="keyword">new</span> URL(url, location.href);</div><div class="line">                <span class="comment">// no-cors: クロスオリジンでのリクエストを防ぐ。HEAD、GET、POST 以外のメソッド実行を防ぐ。</span></div><div class="line">                <span class="keyword">const</span> request = <span class="keyword">new</span> Request(fetchUrl, &#123; <span class="attr">mode</span>: <span class="string">'no-cors'</span> &#125;);</div><div class="line"></div><div class="line">                <span class="comment">// HTTPリクエストにクレデンシャルを含める</span></div><div class="line">                <span class="keyword">return</span> fetch(request, &#123;<span class="attr">credentials</span>: <span class="string">'include'</span>&#125;).then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</div><div class="line">                    <span class="keyword">if</span> (response.status &gt;= <span class="number">400</span>) &#123;</div><div class="line">                        <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Error</span>(<span class="string">'request for '</span> + fetchUrl + <span class="string">' failed with status '</span> + response.statusText);</div><div class="line">                    &#125;</div><div class="line">                    <span class="keyword">return</span> cache.add(fetchUrl, response);</div><div class="line">                &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</div><div class="line">                    <span class="built_in">console</span>.error(<span class="string">'Not caching '</span> + url + <span class="string">' due to '</span> + error);</div><div class="line">                &#125;);</div><div class="line">            &#125;);</div><div class="line"></div><div class="line">            <span class="keyword">return</span> <span class="built_in">Promise</span>.all(cachePromises)</div><div class="line"></div><div class="line">        &#125;).catch(<span class="function"><span class="params">error</span> =&gt;</span> &#123;</div><div class="line">            <span class="built_in">console</span>.error(<span class="string">'Pre-fetching failed:'</span>, error);</div><div class="line">        &#125;)</div><div class="line">    );</div><div class="line">    event.waitUntil(global.skipWaiting());</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>すでにエンドユーザーのブラウザに登録されたservice workerを更新したいときなどに有効な手段っぽい。</p>
<h3 id="3-Fetchイベント"><a href="#3-Fetchイベント" class="headerlink" title="3 Fetchイベント"></a>3 Fetchイベント</h3><p>Service Workerがactivateな状態で、scope配下のページを移動したり、ページを更新したりすると、<br>fetchイベントを受け取る。</p>
<p>このfetchイベントのリスナーでHTTPレスポンスを横取りして、リソースファイルをCache APIを介してに登録したり、読み込んだりできる。<br>これにより実際にHTTPリクエストすることなくページを返すことができる。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line">self.addEventListener(<span class="string">'fetch'</span>, event =&gt; &#123;</div><div class="line">    event.respondWith(</div><div class="line">        <span class="comment">// キャッシュの中に該当するリソースがある</span></div><div class="line">        caches.match(event.request)</div><div class="line">        .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</div><div class="line"></div><div class="line">            <span class="comment">// キャッシュがあればキャッシュを返す</span></div><div class="line">            <span class="keyword">if</span> (response) &#123;</div><div class="line">                <span class="keyword">return</span> response;</div><div class="line">            &#125;</div><div class="line"></div><div class="line">            <span class="comment">// リソースを取得する</span></div><div class="line">            <span class="keyword">return</span> fetch(event.request)</div><div class="line">                .then(<span class="function"><span class="params">response</span> =&gt;</span> &#123;</div><div class="line">                    <span class="comment">// リソースが取得できないときはレスポンスを返す</span></div><div class="line">                    <span class="comment">// HTTP Statusのチェック</span></div><div class="line">                    <span class="comment">// Same Originのチェック(サードパーティのリソースはキャッシュされない)</span></div><div class="line">                    <span class="keyword">if</span>(!response || response.status !== <span class="number">200</span> || response.type !== <span class="string">'basic'</span>) &#123;</div><div class="line">                        <span class="keyword">return</span> response;</div><div class="line">                    &#125;</div><div class="line"></div><div class="line">                    <span class="comment">// ブラウザに返すレスポンスとキャッシュ用のレスポンスの2つ必要なので複製</span></div><div class="line">                    <span class="keyword">const</span> responseToCache = response.clone();</div><div class="line"></div><div class="line">                    caches.open(CACHE_NAME)</div><div class="line">                    .then(<span class="function"><span class="params">cache</span> =&gt;</span> &#123;</div><div class="line">                        <span class="comment">// キャッシュを更新</span></div><div class="line">                        cache.put(event.request, responseToCache);</div><div class="line">                    &#125;);</div><div class="line"></div><div class="line">                    <span class="comment">// ブラウザにレスポンスを返す</span></div><div class="line">                    <span class="keyword">return</span> response;</div><div class="line">               &#125;</div><div class="line">            );</div><div class="line">        &#125;)</div><div class="line">    );</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>実際にリクエストしてみる。<br>1回目はHTTP2 + Server Push でレスポンスを返す。</p>
<p><img src="/images/2017/01/28/server-push.png" alt=""></p>
<p>2回目はキャッシュを返す。from ServiceWorkerとあり、リクエストをしないでService WorkerがCacheを返し、ページが描画されることがわかる。</p>
<p><img src="/images/2017/01/28/server-push-serviceworker.png" alt=""></p>
<h3 id="4-Service-Worker-の更新"><a href="#4-Service-Worker-の更新" class="headerlink" title="4. Service Worker の更新"></a>4. Service Worker の更新</h3><p>Service workerファイルが更新され、ファイルにバイト単位で差分がある場合、<br>再度ファイルをダウンロード、インストールを行う。</p>
<p>ただし、既存のService Worker稼働しているので、新しくダウンロードしたファイルはwaitingになる。<br>ページが閉じられるなどして、新しい Service Workerコントーロール可能な状態となりactivateに遷移する。</p>
<h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>Server Push + Service Worker によりトラフィックは改善される。<br>両者は技術的にも相性が良いなぁという感じ。<br>とくにデバイスによってはオフライン時でもキャッシュを利用できることで、恩恵を受けるものもありそう。</p>
<p>また、HTTP2もしくはServie Workerをサポートしてない(両方ともサポートしてない)場合でも副作用はないため、受けられる恩恵は大きい。<br>まだ市場的には試用段階ではあるが、Progressive Web App(PWA)は今後当たり前にウェブ開発の流れにシフトしていくんだろうな。</p>
<h3 id="作成したサンプル"><a href="#作成したサンプル" class="headerlink" title="作成したサンプル"></a>作成したサンプル</h3><p><a href="https://github.com/kazu69/express-http2-serviceworker-example" target="_blank" rel="external">express-http2-serviceworker-example</a></p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://developers.google.com/web/fundamentals/getting-started/codelabs/your-first-pwapp" target="_blank" rel="external">はじめてのプログレッシブ ウェブアプリ</a><br><a href="https://developers.google.com/web/fundamentals/getting-started/primers/service-workers" target="_blank" rel="external">Service Worker の紹介</a><br><a href="https://developer.mozilla.org/ja/docs/Web/API/ServiceWorker_API" target="_blank" rel="external">ServiceWorker API</a><br><a href="https://developer.mozilla.org/en-US/docs/Web/API/Cache" target="_blank" rel="external">Cache</a><br><a href="https://jakearchibald.github.io/isserviceworkerready/" target="_blank" rel="external">ServiceWorker ready?</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://blog.kazu69.net/2016/10/06/using-http2-serverpush-with-expressjs/&quot;&gt;Express width HTTP2 Server Push&lt;/a&gt; を試したので、&lt;br&gt;今回はPushされたリソースをCache APIでブラウにキャッシュして、&lt;br&gt;二度目以降のアクセスはキャッシュを使いHTTPリクエストしないでレスポンスをさらに向上できることを試してみた。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/web/"/>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/web/memo/"/>
    
    
  </entry>
  
  <entry>
    <title>Expressでのhttp2 + server pushを使う</title>
    <link href="http://blog.kazu69.net/2016/10/06/using-http2-serverpush-with-expressjs/"/>
    <id>http://blog.kazu69.net/2016/10/06/using-http2-serverpush-with-expressjs/</id>
    <published>2016-10-06T09:43:38.000Z</published>
    <updated>2016-10-06T10:43:39.000Z</updated>
    
    <content type="html"><![CDATA[<p>nodejsの<a href="http://expressjs.com/" target="_blank" rel="external">Express</a>をhttp2サポートして、server pushを試したときのメモ。</p>
<a id="more"></a>
<p>今回は手元でサクッと試すので、自己証明書を使う。</p>
<h2 id="自己証明書の作成"><a href="#自己証明書の作成" class="headerlink" title="自己証明書の作成"></a>自己証明書の作成</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">openssl genrsa -h</div><div class="line">usage: genrsa [args] [numbits]</div><div class="line"> -des            encrypt the generated key with DES <span class="keyword">in</span> cbc mode</div><div class="line"> -des3           encrypt the generated key with DES <span class="keyword">in</span> ede cbc mode (168 bit key)</div><div class="line"> -seed</div><div class="line">                 encrypt PEM output with cbc seed</div><div class="line"> -aes128, -aes192, -aes256</div><div class="line">                 encrypt PEM output with cbc aes</div><div class="line"> -out file       output the key to <span class="string">'file</span></div><div class="line"> -passout arg    output file pass phrase source</div><div class="line"> -f4             use F4 (0x10001) for the E value</div><div class="line"> -3              use 3 for the E value</div><div class="line"> -engine e       use engine e, possibly a hardware device.</div><div class="line"> -rand file:file:...</div><div class="line">                 load the file (or the files in the directory) into</div><div class="line">                 the random number generator</div></pre></td></tr></table></figure>
<p>秘密鍵作成を作成</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># openssl genrsa -des3(暗号化アルゴリズム) -passout pass:(パスワード) -out （秘密鍵ファイル名）（キー長）</span></div><div class="line">openssl genrsa -des3 -passout pass:password -out keys/private.key 2048</div></pre></td></tr></table></figure>
<p>秘密鍵を確認する</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">openssl rsa -text &lt; private.key</div><div class="line">Enter pass phrase:</div><div class="line"></div><div class="line">Private-Key: (2048 bit)</div><div class="line">modulus:</div><div class="line">...</div><div class="line">...</div><div class="line">...</div><div class="line">-----END RSA PRIVATE KEY-----</div></pre></td></tr></table></figure>
<p>秘密鍵からRSA公開鍵の作成</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># openssl rsa -in （秘密鍵ファイル名） -pubout -out （公開鍵ファイル名） -passin pass:(パスワード)</span></div><div class="line">openssl rsa -<span class="keyword">in</span> private.key -pubout -out public.key -passin pass:password</div><div class="line">writing RSA key</div></pre></td></tr></table></figure>
<p>CSRを作成</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># openssl req -new -key （秘密鍵ファイル名） -out （CSRファイル名）</span></div><div class="line">openssl req -new -key private.key -out server.csr</div><div class="line"></div><div class="line">openssl req -text &lt; server.csr</div><div class="line">Certificate Request:</div><div class="line">    Data:</div><div class="line">    ...</div><div class="line">    ...</div><div class="line">    ...</div><div class="line">-----END CERTIFICATE REQUEST-----</div></pre></td></tr></table></figure>
<p>証明書(CRT)を作成</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 365日有効な証明書を作成</span></div><div class="line">openssl x509 -req -days 365 -signkey private.key &lt; server.csr &gt; server.crt</div></pre></td></tr></table></figure>
<h2 id="expressセットアップ"><a href="#expressセットアップ" class="headerlink" title="expressセットアップ"></a>expressセットアップ</h2><p>続いでexpressのセットアップ。ES nextでサーバーを書くのでbabel-nodeを使ってexpressを起動する<br>(ちなみにproductionではoverheadが大きいので使うことは推奨されていない)</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -D babel-cli babel-preset-latest</div></pre></td></tr></table></figure>
<p>http2のモジュールは<a href="https://github.com/molnarg/node-http2/" target="_blank" rel="external">node-http2</a>が<a href="https://github.com/molnarg/node-http2/issues/100#issuecomment-231173779" target="_blank" rel="external">Expressで動かない</a>。(Express ver5では対応されるはず)<br><a href="https://github.com/indutny/node-spdy" target="_blank" rel="external">spdy</a>を使ってhttp2に対応させる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">npm i -S express spdy morgan file-stream-rotator</div></pre></td></tr></table></figure>
<h3 id="node-http2の場合の実装例"><a href="#node-http2の場合の実装例" class="headerlink" title="node_http2の場合の実装例"></a>node_http2の場合の実装例</h3><p>ちなみにnode_http2を使った場合は以下の感じで対応するようになる。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> htttp2 <span class="keyword">from</span> <span class="string">'http2'</span>;</div><div class="line">option = &#123;</div><div class="line">    <span class="attr">key</span>: fs.readFileSync(<span class="string">'./example/localhost.key'</span>),</div><div class="line">    <span class="attr">cert</span>: fs.readFileSync(<span class="string">'./example/localhost.crt'</span>),</div><div class="line">    <span class="attr">passphrase</span>: <span class="string">'password'</span></div><div class="line">&#125;</div><div class="line"></div><div class="line">http2.createServer(options, (req, res) =&gt; &#123;</div><div class="line">    <span class="comment">// pushするリソースのStreamを作り、データを書き込んで送信する。</span></div><div class="line">    <span class="keyword">if</span> (res.push) &#123;</div><div class="line">      <span class="keyword">const</span> push = res.push(<span class="string">'/pushed.js'</span>);</div><div class="line">      push.writeHead(<span class="number">200</span>);</div><div class="line">      fs.createReadStream(path.join(__dirname, <span class="string">'/pushed.js'</span>)).pipe(push);</div><div class="line">    &#125;</div><div class="line">     fs.createReadStream(path.join(__dirname, <span class="string">'/client.js'</span>)).pipe(res);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Expressサーバーを作成する。<br>実際の作成したものは<a href="https://github.com/kazu69/express-with-http2-and-server-push-example" target="_blank" rel="external">こちらから</a>。</p>
<p>エントリポイント(index.js)は以下のようになる</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">import express from <span class="string">'express'</span>;</div><div class="line">import spdy from <span class="string">'spdy'</span>;</div><div class="line">import morgan from <span class="string">'morgan'</span>;</div><div class="line">import path from <span class="string">'path'</span>;</div><div class="line">import fs from <span class="string">'fs'</span>;</div><div class="line">import FileStreamRotator from <span class="string">'file-stream-rotator'</span>;</div><div class="line"></div><div class="line">import routes from <span class="string">'./routes/index.js'</span></div><div class="line"></div><div class="line">// when index.js execute app/index.js</div><div class="line">const rootDir = __dirname + <span class="string">'/..'</span>;</div><div class="line">const viewPath = `<span class="variable">$&#123;rootDir&#125;</span>/app/views`;</div><div class="line"></div><div class="line">const port = 3000;</div><div class="line">const app = express();</div><div class="line">const options = &#123;</div><div class="line">    key: fs.readFileSync(`<span class="variable">$&#123;rootDir&#125;</span>/keys/private.key`), // private key</div><div class="line">    cert: fs.readFileSync(`<span class="variable">$&#123;rootDir&#125;</span>/keys/server.crt`), // cert file</div><div class="line">    passphrase: <span class="string">'password'</span></div><div class="line">&#125;;</div><div class="line">const logDir = path.join(`<span class="variable">$&#123;rootDir&#125;</span>/app/<span class="built_in">log</span>`);</div><div class="line">const accessLogOption = &#123;</div><div class="line">    date_format: <span class="string">'YYYYMMDD'</span>,</div><div class="line">    filename: path.join(logDir, <span class="string">'production-%DATE%.log'</span>),</div><div class="line">    frequency: <span class="string">'daily'</span>,</div><div class="line">    verbose: <span class="literal">false</span></div><div class="line">&#125;;</div><div class="line"></div><div class="line">app.use(express.static(<span class="string">'app/views'</span>));</div><div class="line">app.use(express.static(<span class="string">'app/public'</span>));</div><div class="line">app.use(<span class="string">'/'</span>, routes);</div><div class="line"></div><div class="line">fs.existsSync(logDir) || fs.mkdirSync(logDir);</div><div class="line"><span class="keyword">if</span>(app.get(<span class="string">'env'</span>) === <span class="string">'production'</span>) &#123;</div><div class="line">    const accessLogStream = FileStreamRotator.getStream(accessLogOption);</div><div class="line">    app.use(morgan(&#123; format: <span class="string">'common'</span>, stream: accessLogStream &#125;));</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    app.use(morgan(&#123; format: <span class="string">'dev'</span>, date: <span class="string">'clf'</span>, immediate: <span class="literal">true</span> &#125;));</div><div class="line">    app.use(morgan(&#123; format: <span class="string">'common'</span> &#125;));</div><div class="line">&#125;</div><div class="line"></div><div class="line">spdy.createServer(options, app)</div><div class="line">    .listen(port, (error) =&gt; &#123;</div><div class="line">        <span class="keyword">if</span> (error) &#123;</div><div class="line">            console.error(error);</div><div class="line">            <span class="built_in">return</span> process.exit(1);</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            console.log(`Listening on port: <span class="variable">$&#123;port&#125;</span>.`);</div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line"></div><div class="line">module.exports = app;</div></pre></td></tr></table></figure>
<p>サーバーをビルドして起動できるるようににnpm scriptを追加</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">...</div><div class="line">  "scripts": &#123;</div><div class="line">    "build": "babel --presets es2015 -d dist src",</div><div class="line">    "prestart": "npm run build",</div><div class="line">    "start": "node dist/index.js",</div><div class="line">    "dev": "babel-node --debug --presets es2015 -- src/index.js --debug"</div><div class="line">  &#125;,</div><div class="line">...</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="curl-with-http2"><a href="#curl-with-http2" class="headerlink" title="curl with http2"></a>curl with http2</h2><p>curlでhttp2出来るようにlibcurlにnghttp2オプションを追加する</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div></pre></td><td class="code"><pre><div class="line">brew install curl --with-nghttp2</div><div class="line">brew link curl --force</div><div class="line"></div><div class="line">brew info curl</div><div class="line">curl: stable 7.50.3 (bottled) [keg-only]</div><div class="line">Get a file from an HTTP, HTTPS or FTP server</div><div class="line">https://curl.haxx.se/</div><div class="line">/usr/<span class="built_in">local</span>/Cellar/curl/7.50.3 (366 files, 2.6M) *</div><div class="line">  Built from <span class="built_in">source</span> on 2016-09-18 at 16:08:22 with: --with-nghttp2</div><div class="line">From: https://github.com/Homebrew/homebrew-core/blob/master/Formula/curl.rb</div><div class="line">==&gt; Dependencies</div><div class="line">Build: pkg-config ✔</div><div class="line">Optional: openssl ✔, libidn ✘, rtmpdump ✘, libssh2 ✘, c-ares ✘, libmetalink ✘, libressl ✘, nghttp2 ✔</div><div class="line">==&gt; Options</div><div class="line">--with-c-ares</div><div class="line">    Build with C-Ares async DNS support</div><div class="line">--with-gssapi</div><div class="line">    Build with GSSAPI/Kerberos authentication support.</div><div class="line">--with-libidn</div><div class="line">    Build with support <span class="keyword">for</span> Internationalized Domain Names</div><div class="line">--with-libmetalink</div><div class="line">    Build with libmetalink support.</div><div class="line">--with-libressl</div><div class="line">    Build with LibreSSL instead of Secure Transport or OpenSSL</div><div class="line">--with-libssh2</div><div class="line">    Build with scp and sftp support</div><div class="line">--with-nghttp2</div><div class="line">    Build with HTTP/2 support (requires OpenSSL or LibreSSL)</div><div class="line">--with-openssl</div><div class="line">    Build with OpenSSL instead of Secure Transport</div><div class="line">--with-rtmpdump</div><div class="line">    Build with RTMP support</div><div class="line">...</div><div class="line"></div><div class="line">ということで、http2できるのか試して見る。</div><div class="line"></div><div class="line">```sh</div><div class="line">curl -I --http2 https://www.cloudflare.com/</div><div class="line"></div><div class="line">HTTP/2 200</div><div class="line">date: Sun, 18 Sep 2016 07:26:23 GMT</div><div class="line">content-type: text/html</div><div class="line"><span class="built_in">set</span>-cookie: __cfduid=dc330f6d51f40d20cfc7056c62e193fc21474183583; expires=Mon, 18-Sep-17 07:26:23 GMT; path=/; domain=.cloudflare.com; HttpOnly</div><div class="line">last-modified: Wed, 14 Sep 2016 17:39:07 GMT</div><div class="line">cf-cache-status: HIT</div><div class="line">expires: Sun, 18 Sep 2016 11:26:23 GMT</div><div class="line">cache-control: public, max-age=14400</div><div class="line">server: cloudflare-nginx</div><div class="line">cf-ray: 2e4311c74c242e09-NRT</div><div class="line">cf-h2-pushed: &lt;/js/jquery-2.1.4-min.js&gt;</div></pre></td></tr></table></figure>
<h2 id="http2を確認"><a href="#http2を確認" class="headerlink" title="http2を確認"></a>http2を確認</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div></pre></td><td class="code"><pre><div class="line">npm start</div><div class="line"></div><div class="line">curl -kiv https://127.0.0.1:3000/</div><div class="line">*   Trying 127.0.0.1...</div><div class="line">* TCP_NODELAY <span class="built_in">set</span></div><div class="line">* Connected to 127.0.0.1 (127.0.0.1) port 3000 (<span class="comment">#0)</span></div><div class="line">* ALPN, offering h2</div><div class="line">* ALPN, offering http/1.1</div><div class="line">* Cipher selection: ALL:!EXPORT:!EXPORT40:!EXPORT56:!aNULL:!LOW:!RC4:@STRENGTH</div><div class="line">* successfully <span class="built_in">set</span> certificate verify locations:</div><div class="line">*   CAfile: /usr/<span class="built_in">local</span>/etc/openssl/cert.pem</div><div class="line">  CApath: none</div><div class="line">* TLSv1.2 (OUT), TLS header, Certificate Status (22):</div><div class="line">* TLSv1.2 (OUT), TLS handshake, Client hello (1):</div><div class="line">* TLSv1.2 (IN), TLS handshake, Server hello (2):</div><div class="line">* TLSv1.2 (IN), TLS handshake, Certificate (11):</div><div class="line">* TLSv1.2 (IN), TLS handshake, Server key exchange (12):</div><div class="line">* TLSv1.2 (IN), TLS handshake, Server finished (14):</div><div class="line">* TLSv1.2 (OUT), TLS handshake, Client key exchange (16):</div><div class="line">* TLSv1.2 (OUT), TLS change cipher, Client hello (1):</div><div class="line">* TLSv1.2 (OUT), TLS handshake, Finished (20):</div><div class="line">* TLSv1.2 (IN), TLS change cipher, Client hello (1):</div><div class="line">* TLSv1.2 (IN), TLS handshake, Finished (20):</div><div class="line">* SSL connection using TLSv1.2 / ECDHE-RSA-AES128-GCM-SHA256</div><div class="line">* ALPN, server accepted to use h2</div><div class="line">* Server certificate:</div><div class="line">*  subject: C=AU; ST=Some-State; O=Internet Widgits Pty Ltd</div><div class="line">*  start date: Sep 17 14:59:31 2016 GMT</div><div class="line">*  expire date: Sep 17 14:59:31 2017 GMT</div><div class="line">*  issuer: C=AU; ST=Some-State; O=Internet Widgits Pty Ltd</div><div class="line">*  SSL certificate verify result: self signed certificate (18), continuing anyway.</div><div class="line">* Using HTTP2, server supports multi-use</div><div class="line">* Connection state changed (HTTP/2 confirmed)</div><div class="line">* Copying HTTP/2 data <span class="keyword">in</span> stream buffer to connection buffer after upgrade: len=0</div><div class="line">* Using Stream ID: 1 (easy handle 0x7fd47080e200)</div><div class="line">&gt; GET / HTTP/1.1</div><div class="line">&gt; Host: 127.0.0.1:3000</div><div class="line">&gt; User-Agent: curl/7.50.3</div><div class="line">&gt; Accept: */*</div><div class="line">&gt;</div><div class="line">* Connection state changed (MAX_CONCURRENT_STREAMS updated)!</div><div class="line">&lt; HTTP/2 200</div><div class="line">HTTP/2 200</div><div class="line">&lt; x-powered-by: Express</div><div class="line">x-powered-by: Express</div><div class="line">&lt; content-type: application/json; charset=utf-8</div><div class="line">content-type: application/json; charset=utf-8</div><div class="line">&lt; content-length: 16</div><div class="line">content-length: 16</div><div class="line">&lt; etag: W/<span class="string">"10-RUik8aEaJBEg+XocNzeBeg"</span></div><div class="line">etag: W/<span class="string">"10-RUik8aEaJBEg+XocNzeBeg"</span></div><div class="line">...</div></pre></td></tr></table></figure>
<p>HTTP/2 200 でレスポンス確認できた。<br>引き続きServer Pushの対応。</p>
<h2 id="Server-Push"><a href="#Server-Push" class="headerlink" title="Server Push"></a>Server Push</h2><p>実装的には、レスポンスとして返却されるhtmlファイルからjsやcssファイルを抽出し、<br>新しいStreamを作成して、データを書き込み送信する。</p>
<p>ざっくりと以下のようなミドルウェアを作成にする。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// viewPath はviewファイルへのパス</span></div><div class="line"></div><div class="line">router.get(<span class="string">'/push'</span>, (req, res) =&gt; &#123;</div><div class="line">    <span class="keyword">const</span> html = fs.readFileSync(<span class="string">`<span class="subst">$&#123;viewPath&#125;</span>/index.html`</span>);</div><div class="line"></div><div class="line">    <span class="comment">// files = &#123; 'filename': [ &#123; 'path': 'file/to/path', 'mime': 'file-mime-type' &#125; ]&#125;</span></div><div class="line">    <span class="keyword">const</span> pushFIles = files[<span class="string">`<span class="subst">$&#123;viewPath&#125;</span>/index.html`</span>];</div><div class="line">    pushFIles.forEach(<span class="function">(<span class="params">file</span>) =&gt;</span> &#123;</div><div class="line">        <span class="keyword">const</span> option = <span class="built_in">Object</span>.assign(stremOption, &#123;<span class="string">'response'</span>: &#123;<span class="string">'content-type'</span>: file.mime&#125;&#125;);</div><div class="line"></div><div class="line">        <span class="comment">// create push stream</span></div><div class="line">        <span class="keyword">const</span> stream = res.push(<span class="string">`<span class="subst">$&#123;publicPath&#125;</span><span class="subst">$&#123;file.path&#125;</span>`</span>, option);</div><div class="line"></div><div class="line">        stream.on(<span class="string">'error'</span>, (error) =&gt; &#123;</div><div class="line">            <span class="built_in">console</span>.error(error);</div><div class="line">        &#125;);</div><div class="line">        stream.end();</div><div class="line">    &#125;);</div><div class="line">    </div><div class="line">    res.end(html);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>Chromeでnet-internals(chrome://net-internals/#events)を使って確認する。<br>/push にアクセスして、chrome://net-internals/#eventsからHTTP2_SESSIONを確認。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">t=3850 [st=10]  HTTP2_SESSION_RECV_PUSH_PROMISE</div><div class="line">                --&gt; :method: GET</div><div class="line">                    :path: /app/public//js/main.js</div><div class="line">                    :scheme: https</div><div class="line">                    :authority: localhost:3000</div><div class="line">                    accept: */*</div><div class="line">                --&gt; id = 7</div><div class="line">                --&gt; promised_stream_id = 6</div><div class="line">t=3850 [st=10]  HTTP2_SESSION_RECV_PUSH_PROMISE</div><div class="line">                --&gt; :method: GET</div><div class="line">                    :path: /app/public/js/app.js</div><div class="line">                    :scheme: https</div><div class="line">                    :authority: localhost:3000</div><div class="line">                    accept: */*</div><div class="line">                --&gt; id = 7</div><div class="line">                --&gt; promised_stream_id = 8</div></pre></td></tr></table></figure>
<p><strong> HTTP2_SESSION_RECV_PUSH_PROMISE </strong> となりサーバーからpushされていることがわかる。</p>
<p>Expressでのhttp2とserver push は想像よりも簡単に対応できるのかもしれないという気がした。</p>
<h3 id="作成したサンプル"><a href="#作成したサンプル" class="headerlink" title="作成したサンプル"></a>作成したサンプル</h3><p><a href="https://github.com/kazu69/express-with-http2-and-server-push-example" target="_blank" rel="external">express-with-http2-and-server-push-example</a></p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="http://webapplog.com/http2-node/" target="_blank" rel="external">Optimize Your App with HTTP/2 Server Push Using Node and Express</a><br><a href="https://github.com/indutny/node-spdy" target="_blank" rel="external">node-spdy</a><br><a href="https://curl.haxx.se/docs/http2.html" target="_blank" rel="external">HTTP/2 with curl</a><br><a href="https://simonecarletti.com/blog/2016/01/http2-curl-macosx/" target="_blank" rel="external">Using cURL with HTTP/2 on Mac OS X</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;nodejsの&lt;a href=&quot;http://expressjs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Express&lt;/a&gt;をhttp2サポートして、server pushを試したときのメモ。&lt;/p&gt;
    
    </summary>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/memo/"/>
    
    
  </entry>
  
  <entry>
    <title>Supportsルールを使って未来のcssプロパティに備えた開発</title>
    <link href="http://blog.kazu69.net/2016/09/14/using-at-rule-supports-development-with-css-property-of-future/"/>
    <id>http://blog.kazu69.net/2016/09/14/using-at-rule-supports-development-with-css-property-of-future/</id>
    <published>2016-09-14T14:02:00.000Z</published>
    <updated>2016-09-16T14:58:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>css3で追加された機能クエリ<a href="https://www.w3.org/TR/css3-conditional/#at-supports" target="_blank" rel="external">@supports</a>を使うことで、将来のcssプロパティで実装しつつ、<br>一昔前のブラウザもサポートする感じで実装することができる。</p>
<a id="more"></a>
<h2 id="supports-とは"><a href="#supports-とは" class="headerlink" title="@supports とは"></a>@supports とは</h2><p>与えられた条件はユーザーエージェントのCSSでサポートされているかをネイティブメソッドを使ってテストするルール。<br>一部ブラウザでは2012あたりから対応されている機能。</p>
<p>Progressive Enhancement(プログレッシブ・エンハンスメント)といわれる開発思想において、<br>ブラウザごとにcssプロパティの実装状況が異なるため、開発時に<a href="https://modernizr.com/" target="_blank" rel="external">Modernizr</a>などを使ってサポート状況ごとにスタイルの分岐をするという手法はこれまでもあった。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="selector-class">.no-cssgradients</span> <span class="selector-class">.header</span> &#123;</div><div class="line">    <span class="comment">/* gradients サポートしてない時のスタイル */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="selector-class">.cssgradients</span> <span class="selector-class">.header</span> &#123;</div><div class="line">    <span class="comment">/* gradients サポートしている時のスタイル */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>これと同じことをネイティブのみでできるようなる感じなのが@supportsルール。<br>いわばネイティブなModernizrという感じになるだろうか。</p>
<p>ちなみにブラウザサポート状況は<a href="http://caniuse.com/#search=Feature%20Queries" target="_blank" rel="external">http://caniuse.com/#feat=css-featurequeries</a>の通り。IEは未サポートです。</p>
<h2 id="実装"><a href="#実装" class="headerlink" title="実装"></a>実装</h2><p>例として <strong>disokay: grid</strong> のサポートの有無で試してみる。<br>ちなみに <a href="https://www.w3.org/TR/css3-grid-layout/" target="_blank" rel="external">display: grid</a> はその名の通りグリッドレイアウトを行えるプロパティ。</p>
<p><a href="http://caniuse.com/#search=grid" target="_blank" rel="external">ブラウザのサポート状況</a> はIE edgeのみである。<br>IE以外で表示すするならば</p>
<table>
<thead>
<tr>
<th>browser</th>
<th>setting</th>
</tr>
</thead>
<tbody>
<tr>
<td>Chrome(Canary)</td>
<td>chrome://flags/#enable-experimental-web-platform-features を有効にする</td>
</tr>
<tr>
<td>Firefox</td>
<td>about:configからlayout.css.grid.enabled を有効にする</td>
</tr>
<tr>
<td>Opera</td>
<td>opera://flags/#enable-experimental-web-platform-features を有効にする</td>
</tr>
<tr>
<td>WebKit(Nightky build)</td>
<td>developのexternal featuresからcss grid を有効にする</td>
</tr>
</tbody>
</table>
<p>以下のコードを実行した時、display: grid のサポートしていれば<strong>背景色が#C00 </strong>のboxがグリッドレイアウトが表示されるはずである。</p>
<p></p><p data-height="265" data-theme-id="0" data-slug-hash="dpXrEA" data-default-tab="css,result" data-user="kazu69" data-embed-version="2" class="codepen">See the Pen <a href="http://codepen.io/kazu69/pen/dpXrEA/" target="_blank" rel="external">@supports example</a> by — (<a href="http://codepen.io/kazu69" target="_blank" rel="external">@kazu69</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.</p><p></p>
<script async src="//assets.codepen.io/assets/embed/ei.js"></script>

<hr>
<p>実際に使うとしたら以下のような感じ。<br>IEが@supportsを未サポートなのでfallbackしてやる。<br>あとは@supportディレクティブでスタイルを書いておけば良さそう。</p>
<p>将来的には <strong>@support (true) </strong>な条件になると言う前提で書いておけば、<br>近い未来のcssプロパティに備ることができる。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/* @supportsをサポートしないブラウザ向けのfallback */</span></div><div class="line"><span class="selector-class">.not-FUTURE-PROPERTIES</span> &#123;</div><div class="line">    <span class="comment">/* ... */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* 未来のプロパティ未サポートの場合 */</span></div><div class="line"><span class="comment">/* 上記のfallbackとまとめられることもある */</span></div><div class="line">@<span class="keyword">supports</span> not (FUTURE-PROPERTIES) &#123;</div><div class="line">    <span class="comment">/* ... */</span></div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">/* 未来のプロパティサポートの場合 */</span></div><div class="line">@<span class="keyword">supports</span> (FUTURE-PROPERTIES) &#123;</div><div class="line">    <span class="comment">/* ... */</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="JavaScriptでの代替"><a href="#JavaScriptでの代替" class="headerlink" title="JavaScriptでの代替"></a>JavaScriptでの代替</h2><p>cssのサポートをJavaScriptで検知して何かするとしたら、<strong>CSS.supports()</strong>を使う。<br>今回のように display: grid の場合であるならば、ざっくりだけど</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> isGridSupport = <span class="function"><span class="params">()</span> =&gt;</span> &#123;</div><div class="line">    <span class="keyword">if</span>(<span class="built_in">window</span>.CSS) &#123;</div><div class="line">        <span class="keyword">return</span> CSS.supports(<span class="string">'display'</span>, <span class="string">'grid'</span>);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span>(isGridSupport()) &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Support display: grid'</span>);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">'Not Support display: grid'</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>という感じかな。</p>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>まだまだModernizrの活躍にも期待しつつも、Web APIとしてCSS.supportsの実装が進んでるので、<br>@supportsを使って、近い将来のCSSプロパティに備える時期に来ているのではないだろうか。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://www.w3.org/TR/css3-conditional/#at-supports" target="_blank" rel="external">Feature queries: the ‘@supports’ rule</a><br><a href="https://developer.mozilla.org/ja/docs/Web/CSS/@supports" target="_blank" rel="external">@supports</a><br><a href="https://www.w3.org/TR/css3-grid-layout/" target="_blank" rel="external">CSS Grid Layout Module Level 1</a><br><a href="https://igalia.github.io/css-grid-layout/enable.html" target="_blank" rel="external">Enable CSS Grid Layout</a><br><a href="https://developer.mozilla.org/ja/docs/Web/API/CSS/supports" target="_blank" rel="external">CSS.supports()</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;css3で追加された機能クエリ&lt;a href=&quot;https://www.w3.org/TR/css3-conditional/#at-supports&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@supports&lt;/a&gt;を使うことで、将来のcssプロパティで実装しつつ、&lt;br&gt;一昔前のブラウザもサポートする感じで実装することができる。&lt;/p&gt;
    
    </summary>
    
      <category term="css" scheme="http://blog.kazu69.net/categories/css/"/>
    
    
  </entry>
  
  <entry>
    <title>form-actionを使ったCSPのXSS攻撃手法を学んだ</title>
    <link href="http://blog.kazu69.net/2016/09/10/protect-bypass-form-action-reflected-xss/"/>
    <id>http://blog.kazu69.net/2016/09/10/protect-bypass-form-action-reflected-xss/</id>
    <published>2016-09-09T16:23:00.000Z</published>
    <updated>2016-09-16T14:52:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>XSS攻撃の検出と軽減手法として<a href="https://developer.mozilla.org/ja/docs/Web/Security/CSP" target="_blank" rel="external">CSP(Content Security Policy)</a>を設定することはよく取られている手法。<br>しかし、これは決して万全ではないということを改めて学んだ。</p>
<a id="more"></a>
<p>CSP(Content Security Policy)をでのXSSの事例を掲載している<a href="https://swehack.org/viewtopic.php?t=1504" target="_blank" rel="external">Bypassa CSP form-action och referrer</a>の記事が興味深かった。</p>
<p><a href="https://developer.mozilla.org/ja/docs/Web/Security/CSP/Using_Content_Security_Policy" target="_blank" rel="external">CSP(Content Security Policy)</a>とはMDNにある通り</p>
<blockquote>
<p>Content Security Policy の設定とは、Web ページに対する Content-Security-Policy HTTP ヘッダの付加、またそのページ上でユーザエージェントが読み込むリソースを制限する値の設定に他なりません。</p>
</blockquote>
<p>ということで指定したポリシーに基づきリソースの取扱うため、XSS Injectionなどの攻撃を軽減できる。</p>
<p>例えば form-action ディレクティブを設定することで許可する送信先を設定できる。</p>
<p>次のようにcspを設定をしている場合</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Content-Security-Policy:default-src &apos;self&apos;; form-action &apos;self&apos;; report-uri /csp-reports/</div></pre></td></tr></table></figure>
<p>外部スクリプトを実行しようとすると、実行されないでレポートが送られる。<br>また、form-action ディレクティブを追加してももちろん、許可サイト以外へのPOSTは拒否される。<br>(default-srcは基本全ディレクティブに対して設定される)</p>
<p>例えば、次のようなフォームの場合、送信先が許可されていないため送信できない。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">action</span>=<span class="string">"https://google.com/"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"csrftoken"</span> <span class="attr">value</span>=<span class="string">"randomcsrftoken"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"scubscribe"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>またレポート設定をしている場合は違反事象が報告される。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">&#123;&quot;csp-report&quot;=&gt;&#123;&quot;document-uri&quot;=&gt;&quot;http://localhost:4567/unsafe/&quot;, &quot;referrer&quot;=&gt;&quot;&quot;, &quot;violated-directive&quot;=&gt;&quot;form-action &apos;self&apos;&quot;, &quot;effective-directive&quot;=&gt;&quot;form-action&quot;, &quot;original-policy&quot;=&gt;&quot;default-src &apos;self&apos;; form-action &apos;self&apos;; report-uri /csp-reports/&quot;, &quot;blocked-uri&quot;=&gt;&quot;http://google.com&quot;, &quot;status-code&quot;=&gt;200&#125;&#125;</div></pre></td></tr></table></figure>
<p>次のようにformタグがinjectionされた場合</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">”https://google.com/</span>"&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">action</span>=<span class="string">"/subscribe/"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">"csrftoken"</span> <span class="attr">value</span>=<span class="string">"randomcsrftoken"</span>&gt;</span></div><div class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"scubscribe"</span>&gt;</span></div><div class="line">     <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>このフォームがPOSTされるとフォームの内容がすべてGETされURLパラメータに渡される。<br>もちろんCSPのレポートにも報告される。</p>
<p>このパラメーター付きのGETリクエストがリファラーに送られるとtokenなども任意のサイトに送ることが可能になる。<br>例えばフォームタグの出現前になにかしらの入力値を出力する箇所があり、そこからhtmlが注入できた場合、<br>(例としてはありえないけどGETで渡された値をそのまま出力している場合)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/?xss=%3Cinput%20value%3D%22Click%20Me%22%20type%3D%22submit%22%20formaction%3D%22%22%20form%3D%22subscribe%22%20formmethod%3D%22get%22%20%2F%3E%3Cinput%20type%3D%22hidden%22%20value%3D%22%3Cmeta%20name%3D%27referrer%27%20content%3D%27always%27%3E%22%3E"</span>&gt;</span>XSS<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>上記のようなリンクを踏ませて、任意のsubmitボタンをページに注入する。<br>その場合のコードは以下のようになる。<br>(わかりやすくするために適宜改行を入れている)</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">value</span>=<span class="string">"Click Me"</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">formaction</span>=<span class="string">""</span> <span class="attr">form</span>=<span class="string">"subscribe"</span> <span class="attr">formmethod</span>=<span class="string">"get"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"&lt;meta name='referrer' content='always'&gt;"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"/subscribe/"</span> <span class="attr">id</span>=<span class="string">"subscribe"</span> <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"csrftoken"</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"randomcsrftoken"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"scubscribe"</span> /&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>inputタグにはhtml5から追加された<a href="https://www.w3.org/TR/html5/forms.html#attr-fae-form" target="_blank" rel="external">form属性</a>、<a href="https://www.w3.org/TR/html5/forms.html#attr-fs-formaction" target="_blank" rel="external">formaction属性</a>、<a href="https://www.w3.org/TR/html5/forms.html#attr-fs-formmethod" target="_blank" rel="external">formmethod属性</a>を使ってformをpostできるようにする。<br>また、リファラを送るようにメタタグを追加しているのがキモらしい。</p>
<p>このボタンを押すことで、フォームの内容がリファラを通して任意のサイトに送られる。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Referer:http://YOURSITE.COM/?xss=%3Cinput%20value%3D%22Click%20Me%22%20type%3D%22submit%22%20formaction%3D%22%22%20form%3D%22subscribe%22%20formmethod%3D%22get%22%20%2F%3E%3Cinput%20type%3D%22hidden%22%20value%3D%22%3Cmeta%20name%3D%27referrer%27%20content%3D%27always%27%3E%22%3E</div></pre></td></tr></table></figure>
<p>この手法はCSPでのレポートは報告されない。<br>攻撃手法がReflected XSS(反射型XSS)ということで、<a href="https://www.w3.org/TR/2012/WD-CSP11-20121213/#relationship-to-x-xss-protection" target="_blank" rel="external">X-XSS-Protection</a>を有効にしているとinjectionされたinputボタンは有効化しない。</p>
<p>CSPである程度のXSSは軽減できると思っていたが、それなりに攻撃手法もあるものですね。<br>header周りのセキュリティも合わせて行うことが必要ということが身にしみる感じになる。</p>
<p>ちなみにGitHubはこのあたりのことから、formタグの前にコメントを入れて少しでも軽減できるようにしているみたいです。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">&lt;!-- &lt;/textarea&gt; --&gt;</span><span class="comment">&lt;!-- '"` --&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">accept-charset</span>=<span class="string">"UTF-8"</span> <span class="attr">action</span>=<span class="string">"/kazu69/XXX/search"</span> <span class="attr">class</span>=<span class="string">"js-site-search-form"</span> <span class="attr">data-scoped-search-url</span>=<span class="string">"/kazu69/page-data-cli/search"</span> <span class="attr">data-unscoped-search-url</span>=<span class="string">"/search"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></div></pre></td></tr></table></figure>
<p>今回はSinatraで試しました。<a href="https://gist.github.com/kazu69/c0262196c49f4a8fdf3f7e9f3889ca41" target="_blank" rel="external">ソースはこちらにあります</a>。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://swehack.org/viewtopic.php?t=1504" target="_blank" rel="external">Bypassa CSP form-action och referrer</a><br><a href="https://labs.detectify.com/2016/04/04/csp-bypassing-form-action-with-reflected-xss/" target="_blank" rel="external">CSP: bypassing form-action with reflected XSS</a><br><a href="https://chloe.re/2016/07/19/protect-against-html-extraction/" target="_blank" rel="external">Protect against HTML-extraction</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;XSS攻撃の検出と軽減手法として&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/Security/CSP&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSP(Content Security Policy)&lt;/a&gt;を設定することはよく取られている手法。&lt;br&gt;しかし、これは決して万全ではないということを改めて学んだ。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>target=&quot;_blank&quot;を使った脆弱性Tabnabbingとその対策</title>
    <link href="http://blog.kazu69.net/2016/08/23/target-blank-vulnerability-tabnabbing-and-countermeasures/"/>
    <id>http://blog.kazu69.net/2016/08/23/target-blank-vulnerability-tabnabbing-and-countermeasures/</id>
    <published>2016-08-23T13:00:13.000Z</published>
    <updated>2016-09-11T07:43:55.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://mathiasbynens.github.io/rel-noopener/" target="_blank" rel="external">About rel=noopener</a>の記事を見て、フィッシング詐欺の手法Tabnabbing(タブナビング)について、<br>以前にそれっぽい記事読んだけど、すっかり忘れていた。</p>
<p>改めて見直してみて、その内容と対策がまとまっていたのでおさらい。</p>
<a id="more"></a>
<h2 id="Tabnabbing-タブナビング-の仕組み"><a href="#Tabnabbing-タブナビング-の仕組み" class="headerlink" title="Tabnabbing(タブナビング)の仕組み"></a>Tabnabbing(タブナビング)の仕組み</h2><p>Tabnabbing の仕組みは以下となる。<br>まず、新規のタブを開くようなアンカータグ</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://example.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>example.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>またはjavascript</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.open()</div></pre></td></tr></table></figure>
<p>が存在してるページが存在している。</p>
<p>このようなhtmlの記述やjavascriptがある場合に攻撃の対象となりうる。<br>というのも、上記のリンクで開かれたページ内から以下のようにwindow.openerを操作できるからである。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">window</span>.opener.location = <span class="string">'http://phishing.example.com'</span>;</div></pre></td></tr></table></figure>
<p>上記のスクリプトが実行されると、元のタブページをフィッシングサイトなどへの誘導が可能となる。<br>ユーザーはこの挙動に気がつくにはリンクが開かれる度に</p>
<ul>
<li>tabの変更を注視する(ローディングされているとか、fav.iconが変わっているとか)</li>
<li>ブラウザの履歴を調べる</li>
<li>セッションなどを使っている際にはログアウトしたりすることをきにする</li>
<li>urlや証明書の情報が異なることをチェックする</li>
</ul>
<p>多くの場合は、一般的に気をつけていないと分かりにくい。</p>
<h2 id="対策"><a href="#対策" class="headerlink" title="対策"></a>対策</h2><p>ブラウザごとにtarget=”_blank”でタブを開く際の操作と影響を受けるブラウザのリストは以下のようになる。</p>
<table>
<thead>
<tr>
<th>ブラウザ</th>
<th>クリック</th>
<th>Shift+クリック</th>
<th>Ctr+クリック</th>
</tr>
</thead>
<tbody>
<tr>
<td>Chrome 40</td>
<td>x</td>
<td>x</td>
<td>x</td>
</tr>
<tr>
<td>Firefox 34</td>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>Opera 26</td>
<td>x</td>
<td>x</td>
<td>x</td>
</tr>
<tr>
<td>Safari 7,8</td>
<td>x</td>
<td></td>
<td></td>
</tr>
<tr>
<td>IE 6 - 11</td>
<td>△</td>
<td>△</td>
<td>△</td>
</tr>
</tbody>
</table>
<p>(<a href="https://github.com/danielstjules/blankshield" target="_blank" rel="external">blankshield</a> より引用)</p>
<p>Internet Explore(IE)はユーザーのセキュリティゾーンの設定次第ではその影響を受けることになる。</p>
<h3 id="target-”-blank”を使う場合"><a href="#target-”-blank”を使う場合" class="headerlink" title="target=”_blank”を使う場合"></a>target=”_blank”を使う場合</h3><p>開発者としてtarget=”_blank”を使う場合は、<a href="https://html.spec.whatwg.org/multipage/semantics.html#link-type-noopener" target="_blank" rel="external">rel=”noopener”</a>を使い、新たに開いたタブから元のタブのlocationを変更できないようする必要がある。</p>
<p>しかし、noopenerは現在のところ<a href="http://caniuse.com/#feat=rel-noopener" target="_blank" rel="external">ブラウザのサポート状況</a>によっては使用できない。(Firefoxなど)</p>
<p>そのため、併せて<a href="https://html.spec.whatwg.org/multipage/semantics.html#link-type-noreferrer" target="_blank" rel="external">rel=”noreferrer”</a>を追加することで新たに開いたタブでのwindow.openerはnullとなりTabnabbingは回避できる。<br>(ただしnoreferrerはリファラを送らないので、その辺も考慮して実装する必要はありそう。)</p>
<p>最終的には以下のようになるとよい。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://example.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span> <span class="attr">rel</span>=<span class="string">"noopener noreferrer"</span>&gt;</span>example.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div></pre></td></tr></table></figure>
<p>ちなみに、rel=”noreferrer” を使うことはパフォーマンス的にも利点がある。<br>通常のtarget=”_blank”で開いた場合は、同プロセス(スレッド)で処理が行われるため元のタブのパフォーマンスが低下する。<br>Chromiumブラウザにおいて、noreferrerの場合は新しいプロセスでタブを開くため、元のタブのパフォーマンスが低下することはない。</p>
<h3 id="windw-open-を使う場合"><a href="#windw-open-を使う場合" class="headerlink" title="windw.open()を使う場合"></a>windw.open()を使う場合</h3><p>windwo.open()で開く場合は、クリックイベントでデフォルトのクリックイベントをキャンセルする。<br>その後、非表示iframe内でwindowを開き、その結果を返すことでwindow.openerをnullにできる。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">a</span>&gt;</span>github.com<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></div><div class="line">    <span class="keyword">var</span> targets = <span class="built_in">document</span>.querySelectorAll(<span class="string">'a[target=_blank]'</span>);</div><div class="line">    <span class="keyword">var</span> openWindow = <span class="function"><span class="keyword">function</span>(<span class="params">url</span>) </span>&#123;</div><div class="line">        <span class="keyword">var</span> iframe, iframeDoc, script;</div><div class="line">        iframe = <span class="built_in">document</span>.createElement(<span class="string">'iframe'</span>);</div><div class="line">        iframe.style.display = <span class="string">'none'</span>;</div><div class="line">        <span class="built_in">document</span>.body.appendChild(iframe);</div><div class="line"></div><div class="line">        iframeDoc = iframe.contentDocument || iframe.contentWindow.document;</div><div class="line"></div><div class="line">        script = iframeDoc.createElement(<span class="string">'script'</span>);</div><div class="line">        script.text = <span class="string">'window.parent = null; window.top = null; window.frameElement = null; var child = window.open("'</span> + url + <span class="string">'"); child.opener = null'</span>;</div><div class="line"></div><div class="line">        iframeDoc.body.appendChild(script);</div><div class="line">        newWin = iframe.contentWindow.child;</div><div class="line"></div><div class="line">        <span class="built_in">document</span>.body.removeChild(iframe);</div><div class="line"></div><div class="line">        <span class="keyword">return</span> newWin;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; targets.length; i++) &#123;</div><div class="line">        targets[i].addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">event</span>) </span>&#123;</div><div class="line">            <span class="keyword">var</span> url = event.target.getAttribute(<span class="string">'href'</span>);</div><div class="line">            <span class="comment">// window.openを置き換える</span></div><div class="line">            <span class="comment">// window.open(url);</span></div><div class="line">            openWindow(url);</div><div class="line">            event.preventDefault();</div><div class="line">        &#125;);</div><div class="line">    &#125;</div><div class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></div></pre></td></tr></table></figure>
<p>上記の2つの対策は<a href="https://github.com/danielstjules/blankshield" target="_blank" rel="external">blankshield</a>を利用することで実現できる。</p>
<h3 id="試してみる"><a href="#試してみる" class="headerlink" title="試してみる"></a>試してみる</h3><p>ということで、上記の対策を実現する<a href="/images/2016/08/23/sample.html">TabnabbingのDEMO</a>を作成した</p>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>ログインなどの機能を有するページにおいて、target=”_blank” を使うことでフィッシング攻撃の手段を提供することにもなる。<br>リンク先のドキュメントは完全に操作はできないため、開発者はtarget=”_blank”を用いるべきかの正しい判断、その取扱いと適切な処理を知っておく必要がある。</p>
<p>UXの観点から、target=”_blank”を使わないというのも一つの手段としては考えられる。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://mathiasbynens.github.io/rel-noopener/" target="_blank" rel="external">About rel=noopener</a><br><a href="https://bugzilla.mozilla.org/show_bug.cgi?id=1094449" target="_blank" rel="external">Bugzilla#1094449</a><br><a href="https://github.com/danielstjules/blankshield" target="_blank" rel="external">blankshield</a><br><a href="https://jakearchibald.com/2016/performance-benefits-of-rel-noopener/" target="_blank" rel="external">The performance benefits of rel=noopener</a><br><a href="https://sites.google.com/site/bughunteruniversity/nonvuln/phishing-with-window-opener" target="_blank" rel="external">Phishing by navigating browser tabs</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://mathiasbynens.github.io/rel-noopener/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;About rel=noopener&lt;/a&gt;の記事を見て、フィッシング詐欺の手法Tabnabbing(タブナビング)について、&lt;br&gt;以前にそれっぽい記事読んだけど、すっかり忘れていた。&lt;/p&gt;
&lt;p&gt;改めて見直してみて、その内容と対策がまとまっていたのでおさらい。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>docker swarm mode を試してみる</title>
    <link href="http://blog.kazu69.net/2016/08/09/try-docker-swarm-mode/"/>
    <id>http://blog.kazu69.net/2016/08/09/try-docker-swarm-mode/</id>
    <published>2016-08-09T09:17:13.000Z</published>
    <updated>2016-08-18T04:45:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>docker engine 1.12から標準で搭載されたswarm modeを試してみる。<br>swarm(群れ)という意味で、クラスタリング構成機構のこと。<br>swarm modeはdocker engine v1.12.0-rc1で統合された機能である。</p>
<a id="more"></a>
<p>swarm modeではクラスタをアプリケーション単位での管理し、<br>複数ホスト間で共有されるネットワークを持っているので、<br>外部のネットワークからのトラフィックをロード・バランシングできるという。</p>
<p>ということで、<a href="tps://pocketstudio.net/2016/06/23/docker-1-12-swarm-mode-and-ingress-load-balancing/" target="_blank" rel="external">チュートリアル</a>に沿って一通り眺める。</p>
<h2 id="nodeの作成"><a href="#nodeの作成" class="headerlink" title="nodeの作成"></a>nodeの作成</h2><table>
<thead>
<tr>
<th>node</th>
<th>role</th>
</tr>
</thead>
<tbody>
<tr>
<td>manager</td>
<td>master</td>
</tr>
<tr>
<td>worker1</td>
<td>worker</td>
</tr>
<tr>
<td>worker2</td>
<td>worker</td>
</tr>
</tbody>
</table>
<p>各ホストでdocker engine(dockerデーモン)を起動させる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">docker-machine create -d virtualbox manager</div><div class="line">docker-machine create -d virtualbox worker1</div><div class="line">docker-machine create -d virtualbox worker2</div><div class="line"></div><div class="line">NAME      ACTIVE   DRIVER       STATE     URL                         SWARM   DOCKER    ERRORS</div><div class="line">manager   *        virtualbox   Running   tcp://192.168.99.100:2376           v1.12.0</div><div class="line">worker1   -        virtualbox   Running   tcp://192.168.99.101:2376           v1.12.0</div><div class="line">worker2   -        virtualbox   Running   tcp://192.168.99.102:2376           v1.12.0</div><div class="line">docker-machine ip manager</div><div class="line">192.168.99.100</div></pre></td></tr></table></figure>
<h2 id="クラスタを初期化"><a href="#クラスタを初期化" class="headerlink" title="クラスタを初期化"></a>クラスタを初期化</h2><p>swarm initで、クラスタを初期化すると、tokenが発行される。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker swarm init --advertise-addr 192.168.99.100</div><div class="line">Swarm initialized: current node (5golpgkwh376tmddgzqcqzjpl) is now a manager.</div><div class="line"></div><div class="line">To add a worker to this swarm, run the following <span class="built_in">command</span>:</div><div class="line">    docker swarm join \</div><div class="line">    --token SWMTKN-1-0vbcihcfezog02z78j4cpmbptt5d917mcm71w0dbbxol0k8pgb-emc5tzyg4ri30i2uqrqlyi6yq \</div><div class="line">    192.168.99.100:2377</div><div class="line"></div><div class="line">To add a manager to this swarm, run the following <span class="built_in">command</span>:</div><div class="line">    docker swarm join \</div><div class="line">    --token SWMTKN-1-0vbcihcfezog02z78j4cpmbptt5d917mcm71w0dbbxol0k8pgb-dm8ugwds89z972yhngfgmv74l \</div><div class="line">    192.168.99.100:2377</div></pre></td></tr></table></figure>
<p>docker infoでswarmの現在の状況を確認してみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker info</div><div class="line">Containers: 0</div><div class="line"> Running: 0</div><div class="line"> Paused: 0</div><div class="line"> Stopped: 0</div><div class="line">Images: 0</div><div class="line">Server Version: 1.12.0</div><div class="line">Storage Driver: aufs</div><div class="line"> Root Dir: /mnt/sda1/var/lib/docker/aufs</div><div class="line"> Backing Filesystem: extfs</div><div class="line"> Dirs: 0</div><div class="line"> Dirperm1 Supported: <span class="literal">true</span></div><div class="line">Logging Driver: json-file</div><div class="line">Cgroup Driver: cgroupfs</div><div class="line">Plugins:</div><div class="line"> Volume: <span class="built_in">local</span></div><div class="line"> Network: host bridge overlay null</div><div class="line">Swarm: active</div><div class="line"> NodeID: 5golpgkwh376tmddgzqcqzjpl</div><div class="line"> Is Manager: <span class="literal">true</span></div><div class="line"> ClusterID: 7lpo0u0u57yryce83q22ne3ot</div><div class="line"> Managers: 1</div><div class="line"> Nodes:</div><div class="line"> ...</div><div class="line"> ...</div><div class="line"></div><div class="line">docker node ls</div><div class="line">ID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS</div><div class="line">5golpgkwh376tmddgzqcqzjpl *  manager   Ready   Active        Leader</div></pre></td></tr></table></figure>
<h2 id="クラスタに追加"><a href="#クラスタに追加" class="headerlink" title="クラスタに追加"></a>クラスタに追加</h2><p>workder1, worker2をswarmクラスタにworkerとして追加する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker1</span></div><div class="line"></div><div class="line">docker swarm join --token SWMTKN-1-0vbcihcfezog02z78j4cpmbptt5d917mcm71w0dbbxol0k8pgb-emc5tzyg4ri30i2uqrqlyi6yq 192.168.99.100:2377</div><div class="line">This node joined a swarm as a worker.</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker2</span></div><div class="line"></div><div class="line">docker swarm join --token SWMTKN-1-0vbcihcfezog02z78j4cpmbptt5d917mcm71w0dbbxol0k8pgb-emc5tzyg4ri30i2uqrqlyi6yq 192.168.99.100:2377</div><div class="line">This node joined a swarm as a worker.</div></pre></td></tr></table></figure>
<p>追加したnodeがswarmクラスタに追加されいることを確認する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker node ls</div><div class="line">ID                           HOSTNAME  STATUS  AVAILABILITY  MANAGER STATUS</div><div class="line">0mfxd3hhndyd7i4uncbiprek4    worker2   Ready   Active</div><div class="line">5golpgkwh376tmddgzqcqzjpl *  manager   Ready   Active        Leader</div><div class="line">cwdb1t7e3o9rstaiudaxswzu9    worker1   Ready   Active</div></pre></td></tr></table></figure>
<h2 id="ingressネットワークの作成"><a href="#ingressネットワークの作成" class="headerlink" title="ingressネットワークの作成"></a>ingressネットワークの作成</h2><p>ingressネットワーク(ingress)を作成し、ロードバランスする。<br>複数ホスト間のコンテナで外部からのリクエストをルーティングし、ロードバランシングできるようになる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker network create -d overlay testnetwork</div><div class="line">0s19bsmqf8wcblaur5ryb8biq</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker network ls</div><div class="line">NETWORK ID          NAME                DRIVER              SCOPE</div><div class="line">a2fab6cccfde        bridge              bridge              <span class="built_in">local</span></div><div class="line">3b4e201a5b10        docker_gwbridge     bridge              <span class="built_in">local</span></div><div class="line">cc20b3e97d14        host                host                <span class="built_in">local</span></div><div class="line">6uoqnkw5ei76        ingress             overlay             swarm</div><div class="line">83f4a43f1315        none                null                <span class="built_in">local</span></div><div class="line">0s19bsmqf8wc        testnetwork         overlay             swarm</div><div class="line"></div><div class="line">docker network inspect testnetwork</div><div class="line">[</div><div class="line">    &#123;</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"testnetwork"</span>,</div><div class="line">        <span class="string">"Id"</span>: <span class="string">"0s19bsmqf8wcblaur5ryb8biq"</span>,</div><div class="line">        <span class="string">"Scope"</span>: <span class="string">"swarm"</span>,</div><div class="line">        <span class="string">"Driver"</span>: <span class="string">"overlay"</span>,</div><div class="line">        <span class="string">"EnableIPv6"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"IPAM"</span>: &#123;</div><div class="line">            <span class="string">"Driver"</span>: <span class="string">"default"</span>,</div><div class="line">            <span class="string">"Options"</span>: null,</div><div class="line">            <span class="string">"Config"</span>: []</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Internal"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"Containers"</span>: null,</div><div class="line">        <span class="string">"Options"</span>: &#123;</div><div class="line">            <span class="string">"com.docker.network.driver.overlay.vxlanid_list"</span>: <span class="string">"257"</span></div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Labels"</span>: null</div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>もうちょっとingressネットワークを見てみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker network inspect 6uoqnkw5ei76</div><div class="line">[</div><div class="line">    &#123;</div><div class="line">        <span class="string">"Name"</span>: <span class="string">"ingress"</span>,</div><div class="line">        <span class="string">"Id"</span>: <span class="string">"6uoqnkw5ei76chns289v0oaei"</span>,</div><div class="line">        <span class="string">"Scope"</span>: <span class="string">"swarm"</span>,</div><div class="line">        <span class="string">"Driver"</span>: <span class="string">"overlay"</span>,</div><div class="line">        <span class="string">"EnableIPv6"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"IPAM"</span>: &#123;</div><div class="line">            <span class="string">"Driver"</span>: <span class="string">"default"</span>,</div><div class="line">            <span class="string">"Options"</span>: null,</div><div class="line">            <span class="string">"Config"</span>: [</div><div class="line">                &#123;</div><div class="line">                    <span class="string">"Subnet"</span>: <span class="string">"10.255.0.0/16"</span>,</div><div class="line">                    <span class="string">"Gateway"</span>: <span class="string">"10.255.0.1"</span></div><div class="line">                &#125;</div><div class="line">            ]</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Internal"</span>: <span class="literal">false</span>,</div><div class="line">        <span class="string">"Containers"</span>: &#123;</div><div class="line">            <span class="string">"745c0806c4f7082995dd1cb8d04dca6becc6dbe820aad717fcefb34811387d57"</span>: &#123;</div><div class="line">                <span class="string">"Name"</span>: <span class="string">"nginx.1.5nhg56y2vohlevb6p4a1xuwjq"</span>,</div><div class="line">                <span class="string">"EndpointID"</span>: <span class="string">"f33f63c27b2d75fa7272e57fb193e291dab588a6f7fc51f0e508b7caf8bb36b2"</span>,</div><div class="line">                <span class="string">"MacAddress"</span>: <span class="string">"02:42:0a:ff:00:05"</span>,</div><div class="line">                <span class="string">"IPv4Address"</span>: <span class="string">"10.255.0.5/16"</span>,</div><div class="line">                <span class="string">"IPv6Address"</span>: <span class="string">""</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"8b4cd33138e9c9262b31a70ba0103535c6a3828b45f3dc6eb9a5ee5c07c07e29"</span>: &#123;</div><div class="line">                <span class="string">"Name"</span>: <span class="string">"nginx.2.8uu9u366fqpda3vm69dzdfr1z"</span>,</div><div class="line">                <span class="string">"EndpointID"</span>: <span class="string">"e73c1b17fe8a5ee98081a33d70abada0852cadd553912504713795059080dd07"</span>,</div><div class="line">                <span class="string">"MacAddress"</span>: <span class="string">"02:42:0a:ff:00:06"</span>,</div><div class="line">                <span class="string">"IPv4Address"</span>: <span class="string">"10.255.0.6/16"</span>,</div><div class="line">                <span class="string">"IPv6Address"</span>: <span class="string">""</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"8b4cd33138e9c9262b31a70ba0103535c6a3828b45f3dc6eb9a5ee5c07c07e29"</span>: &#123;</div><div class="line">                <span class="string">"Name"</span>: <span class="string">"nginx.2.41to6h36vp1i31qad79iiz2qf"</span>,</div><div class="line">                <span class="string">"EndpointID"</span>: <span class="string">"745c0806c4f75ee98081a33d70g930s0852cadd55391204713798b4cd33138e9"</span>,</div><div class="line">                <span class="string">"MacAddress"</span>: <span class="string">"02:42:0a:ff:00:06"</span>,</div><div class="line">                <span class="string">"IPv4Address"</span>: <span class="string">"10.255.0.7/16"</span>,</div><div class="line">                <span class="string">"IPv6Address"</span>: <span class="string">""</span></div><div class="line">            &#125;,</div><div class="line">            <span class="string">"ingress-sbox"</span>: &#123;</div><div class="line">                <span class="string">"Name"</span>: <span class="string">"ingress-endpoint"</span>,</div><div class="line">                <span class="string">"EndpointID"</span>: <span class="string">"7e9a378dcfeed25805bd7ea78e411df39b06aa9ad347bb6ff0b3fe86f09d44bb"</span>,</div><div class="line">                <span class="string">"MacAddress"</span>: <span class="string">"02:42:0a:ff:00:03"</span>,</div><div class="line">                <span class="string">"IPv4Address"</span>: <span class="string">"10.255.0.3/16"</span>,</div><div class="line">                <span class="string">"IPv6Address"</span>: <span class="string">""</span></div><div class="line">            &#125;</div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Options"</span>: &#123;</div><div class="line">            <span class="string">"com.docker.network.driver.overlay.vxlanid_list"</span>: <span class="string">"256"</span></div><div class="line">        &#125;,</div><div class="line">        <span class="string">"Labels"</span>: &#123;&#125;</div><div class="line">    &#125;</div><div class="line">]</div></pre></td></tr></table></figure>
<p>ingress-sbox というコンテナがある。</p>
<p>workerのiptablesを確認</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker1</span></div><div class="line"></div><div class="line">sudo iptables-save | grep INGRESS</div><div class="line">:DOCKER-INGRESS - [0:0]</div><div class="line">-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER-INGRESS</div><div class="line">-A OUTPUT -m addrtype --dst-type LOCAL -j DOCKER-INGRESS</div><div class="line">-A DOCKER-INGRESS -p tcp -m tcp --dport 80 -j DNAT --to-destination 172.18.0.2:80</div><div class="line">-A DOCKER-INGRESS -j RETURN</div></pre></td></tr></table></figure>
<p>DNATの設定がある。80ポートで受けたリクエストを 172.18.0.2:80 に転送している。<br>この172.18.0.2がingressネットワーク。しかし、172.18.0.2はdockerのコンテナとしてはリストアップされない。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker1</span></div><div class="line"></div><div class="line">ip addr</div><div class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1</div><div class="line">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</div><div class="line">    inet 127.0.0.1/8 scope host lo</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">    inet6 ::1/128 scope host</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">2: dummy0: &lt;BROADCAST,NOARP&gt; mtu 1500 qdisc noop state DOWN group default qlen 1000</div><div class="line">    link/ether ca:f2:56:e6:fe:34 brd ff:ff:ff:ff:ff:ff</div><div class="line">3: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</div><div class="line">    link/ether 08:00:27:25:2e:6a brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet 10.0.2.15/24 brd 10.0.2.255 scope global eth0</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">    inet6 fe80::a00:27ff:fe25:2e6a/64 scope link</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">4: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc pfifo_fast state UP group default qlen 1000</div><div class="line">    link/ether 08:00:27:87:c3:c8 brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet 192.168.99.104/24 brd 192.168.99.255 scope global eth1</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">    inet6 fe80::a00:27ff:fe87:c3c8/64 scope link</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">6: docker0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default</div><div class="line">    link/ether 02:42:00:44:03:63 brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet 172.17.0.1/16 scope global docker0</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">11: docker_gwbridge: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default</div><div class="line">    link/ether 02:42:60:28:a7:82 brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet 172.18.0.1/16 scope global docker_gwbridge</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">    inet6 fe80::42:60ff:fe28:a782/64 scope link</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">13: vethff5efce@if12: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker_gwbridge state UP group default</div><div class="line">    link/ether 32:4b:45:f2:fa:8c brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet6 fe80::304b:45ff:fef2:fa8c/64 scope link</div><div class="line">       valid_lft forever preferred_lft forever</div><div class="line">18: vethabbd231@if17: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue master docker_gwbridge state UP group default</div><div class="line">    link/ether f6:c9:ed:48:b7:29 brd ff:ff:ff:ff:ff:ff</div><div class="line">    inet6 fe80::f4c9:edff:fe48:b729/64 scope link</div><div class="line">       valid_lft forever preferred_lft forever</div></pre></td></tr></table></figure>
<p>ルーティングもみてみる</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker1</span></div><div class="line"></div><div class="line">ip route</div><div class="line">default via 10.0.2.2 dev eth0  metric 1</div><div class="line">10.0.2.0/24 dev eth0  proto kernel  scope link  src 10.0.2.15</div><div class="line">127.0.0.1 dev lo  scope link</div><div class="line">172.17.0.0/16 dev docker0  proto kernel  scope link  src 172.17.0.1</div><div class="line">172.18.0.0/16 dev docker_gwbridge  proto kernel  scope link  src 172.18.0.1</div><div class="line">192.168.99.0/24 dev eth1  proto kernel  scope link  src 192.168.99.104</div></pre></td></tr></table></figure>
<p>どうやらdocker_gwbridgeのもののようだ。managerでも同様にdocker_gwbridgeなるものがあることから、<br>docker_gwbridgeは作成したネットワークに属するnodeすべてに共通で利用されている。<br>ということで、外部からのアクセスにはdocker_gwbridgeを使用している。</p>
<p>ということで、コンテナ間でも通信できるはず。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker1</span></div><div class="line"></div><div class="line">ping -c 4 192.168.99.100</div><div class="line">PING 192.168.99.100 (192.168.99.100): 56 data bytes</div><div class="line">64 bytes from 192.168.99.100: seq=0 ttl=64 time=0.459 ms</div><div class="line">64 bytes from 192.168.99.100: seq=1 ttl=64 time=0.357 ms</div><div class="line">64 bytes from 192.168.99.100: seq=2 ttl=64 time=0.439 ms</div><div class="line">64 bytes from 192.168.99.100: seq=3 ttl=64 time=0.374 ms</div><div class="line"></div><div class="line">--- 192.168.99.100 ping statistics ---</div><div class="line">4 packets transmitted, 4 packets received, 0% packet loss</div><div class="line">round-trip min/avg/max = 0.357/0.407/0.459 ms</div></pre></td></tr></table></figure>
<h2 id="サービス作成"><a href="#サービス作成" class="headerlink" title="サービス作成"></a>サービス作成</h2><p>swarm modeでコンテナを起動するためのserviceを作成する。作成されたnodeをタスクという。<br>–replicasフラグでtask数を指定して作成する。<br>今回はnginxのサービスを作成する。</p>
<p>nginx というサービスを作成し、testnetworkでswarmのポート80をコンテナのポート80に割り当て。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker service create --name nginx --replicas 3 --network testnetwork -p 80:80/tcp nginx</div><div class="line">cz4kot5ft0hz8v9euubq75ja2</div></pre></td></tr></table></figure>
<p>作成されたサービスの確認</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker service ls</div><div class="line">ID            NAME   REPLICAS  IMAGE  COMMAND</div><div class="line">cz4kot5ft0hz  nginx  0/3       nginx</div><div class="line"></div><div class="line"><span class="comment"># --pretty で見やすく表示</span></div><div class="line">docker service inspect --pretty nginx</div><div class="line">ID:     cz4kot5ft0hz8v9euubq75ja2</div><div class="line">Name:       nginx</div><div class="line">Mode:       Replicated</div><div class="line"> Replicas:  3</div><div class="line">Placement:</div><div class="line">UpdateConfig:</div><div class="line"> Parallelism:   1</div><div class="line"> On failure:    pause</div><div class="line">ContainerSpec:</div><div class="line"> Image:     nginx</div><div class="line">Resources:</div><div class="line">Networks: 0s19bsmqf8wcblaur5ryb8biqPorts:</div><div class="line"> Protocol = tcp</div><div class="line"> TargetPort = 80</div><div class="line"> PublishedPort = 80</div><div class="line"></div><div class="line"><span class="comment"># nginxのイメージ取得中でpreparingになっている</span></div><div class="line">docker service ps nginx</div><div class="line">ID                         NAME     IMAGE  NODE     DESIRED STATE  CURRENT STATE                 ERROR</div><div class="line">5nhg56y2vohlevb6p4a1xuwjq  nginx.1  nginx  worker2  Running        Running 3 seconds ago</div><div class="line">8uu9u366fqpda3vm69dzdfr1z  nginx.2  nginx  worker1  Running        Preparing about a minute ago</div><div class="line">41to6h36vp1i31qad79iiz2qf  nginx.3  nginx  manager  Running        Preparing about a minute ago</div><div class="line"></div><div class="line"><span class="comment"># 再度実行する</span></div><div class="line">docker service ps nginx</div><div class="line">ID                         NAME     IMAGE  NODE     DESIRED STATE  CURRENT STATE          ERROR</div><div class="line">5nhg56y2vohlevb6p4a1xuwjq  nginx.1  nginx  worker2  Running        Running 2 minutes ago</div><div class="line">8uu9u366fqpda3vm69dzdfr1z  nginx.2  nginx  worker1  Running        Running 2 minutes ago</div><div class="line">41to6h36vp1i31qad79iiz2qf  nginx.3  nginx  manager  Running        Running 2 minutes ago</div></pre></td></tr></table></figure>
<p>curl を実行して起動していることを確認</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">curl http://192.168.99.100</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html&gt;</div><div class="line">&lt;head&gt;</div><div class="line">&lt;title&gt;Welcome to nginx!&lt;/title&gt;</div><div class="line">&lt;style&gt;</div><div class="line">    body &#123;</div><div class="line">        width: 35em;</div><div class="line">        margin: 0 auto;</div><div class="line">        font-family: Tahoma, Verdana, Arial, sans-serif;</div><div class="line">    &#125;</div><div class="line">&lt;/style&gt;</div><div class="line">&lt;/head&gt;</div><div class="line">&lt;body&gt;</div><div class="line">&lt;h1&gt;Welcome to nginx!&lt;/h1&gt;</div><div class="line">&lt;p&gt;If you see this page, the nginx web server is successfully installed and</div><div class="line">working. Further configuration is required.&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;p&gt;For online documentation and support please refer to</div><div class="line">&lt;a href=<span class="string">"http://nginx.org/"</span>&gt;nginx.org&lt;/a&gt;.&lt;br/&gt;</div><div class="line">Commercial support is available at</div><div class="line">&lt;a href=<span class="string">"http://nginx.com/"</span>&gt;nginx.com&lt;/a&gt;.&lt;/p&gt;</div><div class="line"></div><div class="line">&lt;p&gt;&lt;em&gt;Thank you <span class="keyword">for</span> using nginx.&lt;/em&gt;&lt;/p&gt;</div><div class="line">&lt;/body&gt;</div><div class="line">&lt;/html&gt;</div></pre></td></tr></table></figure>
<h2 id="サービスのスケールアップ・スケールダウン"><a href="#サービスのスケールアップ・スケールダウン" class="headerlink" title="サービスのスケールアップ・スケールダウン"></a>サービスのスケールアップ・スケールダウン</h2><p>スケールアップしてみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker service scale nginx=4</div><div class="line">nginx scaled to 4</div><div class="line"></div><div class="line">docker service ps nginx</div><div class="line">ID                         NAME     IMAGE  NODE     DESIRED STATE  CURRENT STATE          ERROR</div><div class="line">5nhg56y2vohlevb6p4a1xuwjq  nginx.1  nginx  worker2  Running        Running 6 minutes ago</div><div class="line">8uu9u366fqpda3vm69dzdfr1z  nginx.2  nginx  worker1  Running        Running 6 minutes ago</div><div class="line">41to6h36vp1i31qad79iiz2qf  nginx.3  nginx  manager  Running        Running 6 minutes ago</div><div class="line">bn0kohl7ecfcmwoeksy6cowdf  nginx.4  nginx  worker1  Running        Running 4 seconds ago</div></pre></td></tr></table></figure>
<p>タスクが4個あることがわかる。<br>続いてスケールダウンする。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker service scale nginx=3</div><div class="line">nginx scaled to 3</div><div class="line"></div><div class="line">docker service ps nginx</div><div class="line">ID                         NAME     IMAGE  NODE     DESIRED STATE  CURRENT STATE                    ERROR</div><div class="line">5nhg56y2vohlevb6p4a1xuwjq  nginx.1  nginx  worker2  Running        Running 7 minutes ago</div><div class="line">8uu9u366fqpda3vm69dzdfr1z  nginx.2  nginx  worker1  Running        Running 7 minutes ago</div><div class="line">41to6h36vp1i31qad79iiz2qf  nginx.3  nginx  manager  Running        Running 7 minutes ago</div><div class="line">bn0kohl7ecfcmwoeksy6cowdf  nginx.4  nginx  worker1  Shutdown       Shutdown less than a second ago</div><div class="line"></div><div class="line">docker service ps nginx</div><div class="line">ID                         NAME     IMAGE  NODE     DESIRED STATE  CURRENT STATE           ERROR</div><div class="line">5nhg56y2vohlevb6p4a1xuwjq  nginx.1  nginx  worker2  Running        Running 7 minutes ago</div><div class="line">8uu9u366fqpda3vm69dzdfr1z  nginx.2  nginx  worker1  Running        Running 7 minutes ago</div><div class="line">41to6h36vp1i31qad79iiz2qf  nginx.3  nginx  manager  Running        Running 7 minutes ago</div><div class="line">bn0kohl7ecfcmwoeksy6cowdf  nginx.4  nginx  worker1  Shutdown       Shutdown 3 seconds ago</div></pre></td></tr></table></figure>
<p>タスクが3つに戻った。</p>
<h2 id="自動復旧"><a href="#自動復旧" class="headerlink" title="自動復旧"></a>自動復旧</h2><p>worker2のコンテナをstopして、タスクが自動で復旧することを確認する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker2</span></div><div class="line"></div><div class="line">docker ps</div><div class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</div><div class="line">55ce84f00f26        nginx:latest        <span class="string">"nginx -g 'daemon off"</span>   49 seconds ago      Up 48 seconds       80/tcp, 443/tcp     nginx.1.160s9norhjlicvlvrpymar0yz</div><div class="line"></div><div class="line">docker stop 55ce84f00f26</div><div class="line">55ce84f00f26</div><div class="line"></div><div class="line">docker ps</div><div class="line">CONTAINER ID        IMAGE</div></pre></td></tr></table></figure>
<p>stopしたこと確認した。しばらくすると自動でコンテナが起動</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker2</span></div><div class="line"></div><div class="line">docker ps</div><div class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES</div><div class="line">6c3d900cb9fe        nginx:latest        <span class="string">"nginx -g 'daemon off"</span>   21 seconds ago      Up 19 seconds       80/tcp, 443/tcp     nginx.1.adgxpo8s9ki82sz3rel26g9cb</div></pre></td></tr></table></figure>
<p>タスクは3つになっている。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker service ps nginx</div><div class="line">ID                         NAME         IMAGE  NODE     DESIRED STATE  CURRENT STATE               ERROR</div><div class="line">adgxpo8s9ki82sz3rel26g9cb  nginx.1      nginx  worker2  Running        Running 45 seconds ago</div><div class="line">160s9norhjlicvlvrpymar0yz   \_ nginx.1  nginx  worker2  Shutdown       Complete 51 seconds ago</div><div class="line">ci5qqrgppuxvqub8bos8j3dhg  nginx.2      nginx  worker1  Running        Running about a minute ago</div><div class="line">bngsjgp2o4tdvczrc623wk7x2  nginx.3      nginx  manager  Running        Running 19 seconds ago</div></pre></td></tr></table></figure>
<h2 id="ローリング・アップデート"><a href="#ローリング・アップデート" class="headerlink" title="ローリング・アップデート"></a>ローリング・アップデート</h2><p>実行中のイメージを差し替えたり、アップデートする際に使う。<br>起動中のコンテナの停止、イメージの取得し起動までを自動で行う。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># --update-delay イメージ更新までの遅延時間</span></div><div class="line"><span class="comment"># --update-parallelism 同時に更新するtaskの最大数</span></div><div class="line">docker service update --update-delay 10s --update-parallelism 1 --image nginx:latest nginx</div><div class="line">nginx</div><div class="line"></div><div class="line">docker service ls</div><div class="line">ID            NAME   REPLICAS  IMAGE         COMMAND</div><div class="line">4cut0umrm3a3  nginx  2/3       nginx:latest</div><div class="line"></div><div class="line">docker service ps nginx</div><div class="line">ID                         NAME         IMAGE         NODE     DESIRED STATE  CURRENT STATE            ERROR</div><div class="line">dzyijvwet9pjz8ac9m65ye4id  nginx.1      nginx:latest  worker2  Running        Running 28 seconds ago</div><div class="line">adgxpo8s9ki82sz3rel26g9cb   \_ nginx.1  nginx         worker2  Shutdown       Shutdown 31 seconds ago</div><div class="line">160s9norhjlicvlvrpymar0yz   \_ nginx.1  nginx         worker2  Shutdown       Complete 9 minutes ago</div><div class="line">bgsr4e1yd8c0q9nyl0wylp3ky  nginx.2      nginx:latest  worker2  Running        Preparing 2 seconds ago</div><div class="line">ci5qqrgppuxvqub8bos8j3dhg   \_ nginx.2  nginx         worker1  Shutdown       Shutdown 2 seconds ago</div><div class="line">9tt8df7zjj65tgp9l6yx4engd  nginx.3      nginx:latest  manager  Running        Running 13 seconds ago</div><div class="line">bngsjgp2o4tdvczrc623wk7x2   \_ nginx.3  nginx         manager  Shutdown       Shutdown 16 seconds ago</div></pre></td></tr></table></figure>
<h2 id="drain-解放"><a href="#drain-解放" class="headerlink" title="drain(解放)"></a>drain(解放)</h2><p>メンテナンスなどでnodeを個別に切り離す必要があるときなどに、一時的にクラスタから解放する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line">docker node inspect --pretty worker1</div><div class="line">ID:         cwdb1t7e3o9rstaiudaxswzu9</div><div class="line">Hostname:       worker1</div><div class="line">Status:</div><div class="line"> State:         Ready</div><div class="line"> Availability:      Active</div><div class="line">Platform:</div><div class="line"> Operating System:  linux</div><div class="line"> Architecture:      x86_64</div><div class="line">Resources:</div><div class="line"> CPUs:          1</div><div class="line"> Memory:        995.9 MiB</div><div class="line">Plugins:</div><div class="line">  Network:      bridge, host, null, overlay</div><div class="line">  Volume:       <span class="built_in">local</span></div><div class="line">Engine Version:     1.12.0</div><div class="line">Engine Labels:</div><div class="line"> - provider = virtualbox%</div><div class="line"></div><div class="line">docker node update --availability drain worker1</div><div class="line">worker1</div><div class="line"></div><div class="line">docker node inspect --pretty worker1</div><div class="line">ID:         cwdb1t7e3o9rstaiudaxswzu9</div><div class="line">Hostname:       worker1</div><div class="line">Status:</div><div class="line"> State:         Ready</div><div class="line"> Availability:      Drain</div><div class="line">Platform:</div><div class="line"> Operating System:  linux</div><div class="line"> Architecture:      x86_64</div><div class="line">Resources:</div><div class="line"> CPUs:          1</div><div class="line"> Memory:        995.9 MiB</div><div class="line">Plugins:</div><div class="line">  Network:      bridge, host, null, overlay</div><div class="line">  Volume:       <span class="built_in">local</span></div><div class="line">Engine Version:     1.12.0</div><div class="line">Engine Labels:</div><div class="line"> - provider = virtualbox%</div><div class="line"></div><div class="line">docker service ps nginx</div><div class="line">ID                         NAME         IMAGE         NODE     DESIRED STATE  CURRENT STATE            ERROR</div><div class="line">4h2qkchax4m34z1pxi61nlnnh  nginx.1      nginx         manager  Running        Running 6 minutes ago</div><div class="line">dzyijvwet9pjz8ac9m65ye4id   \_ nginx.1  nginx:latest  worker2  Shutdown       Shutdown 6 minutes ago</div><div class="line">adgxpo8s9ki82sz3rel26g9cb   \_ nginx.1  nginx         worker2  Shutdown       Shutdown 31 seconds ago</div><div class="line">160s9norhjlicvlvrpymar0yz   \_ nginx.1  nginx         worker2  Shutdown       Complete 9 minutes ago</div><div class="line">bgsr4e1yd8c0q9nyl0wylp3ky  nginx.2      nginx:latest  worker2  Running        Preparing 2 seconds ago</div><div class="line">ci5qqrgppuxvqub8bos8j3dhg   \_ nginx.2  nginx         worker1  Shutdown       Shutdown 2 seconds ago</div><div class="line">9tt8df7zjj65tgp9l6yx4engd  nginx.3      nginx:latest  manager  Running        Running 13 seconds ago</div><div class="line">bngsjgp2o4tdvczrc623wk7x2   \_ nginx.3  nginx         manager  Shutdown       Shutdown 16 seconds ago</div></pre></td></tr></table></figure>
<p>worker1がdrainされてmanagerがnginx.1タスクを作成している。<br>この状態でdrainしたnodeをアクティブに戻す。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">docker node update --availability active worker1</div><div class="line">worker1</div><div class="line"></div><div class="line">docker node inspect --pretty worker1</div><div class="line">ID:         cwdb1t7e3o9rstaiudaxswzu9</div><div class="line">Hostname:       worker1</div><div class="line">Status:</div><div class="line"> State:         Ready</div><div class="line"> Availability:      Active</div><div class="line">Platform:</div><div class="line"> Operating System:  linux</div><div class="line"> Architecture:      x86_64</div><div class="line">Resources:</div><div class="line"> CPUs:          1</div><div class="line"> Memory:        995.9 MiB</div><div class="line">Plugins:</div><div class="line">  Network:      bridge, host, null, overlay</div><div class="line">  Volume:       <span class="built_in">local</span></div><div class="line">Engine Version:     1.12.0</div><div class="line">Engine Labels:</div><div class="line"> - provider = virtualbox%</div></pre></td></tr></table></figure>
<p>worker1が利用できる状態で待機している。<br>クラスタに追加されている。</p>
<h2 id="サービスの削除とnodeの削除"><a href="#サービスの削除とnodeの削除" class="headerlink" title="サービスの削除とnodeの削除"></a>サービスの削除とnodeの削除</h2><p>サービスの削除。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">docker service  ls</div><div class="line">ID            NAME   REPLICAS  IMAGE  COMMAND</div><div class="line">cz4kot5ft0hz  nginx  3/3       nginx</div><div class="line"></div><div class="line">docker service rm nginx</div><div class="line">nginx</div><div class="line"></div><div class="line">docker service ls</div><div class="line">ID  NAME  REPLICAS  IMAGE  COMMAND</div></pre></td></tr></table></figure>
<p>nodeをswarmから解放する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker1</span></div><div class="line"></div><div class="line">docker swarm leave</div><div class="line">Node left the swarm.</div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@worker2</span></div><div class="line"></div><div class="line">docker swarm leave</div><div class="line">Node left the swarm.</div></pre></td></tr></table></figure>
<p>各workerがswarmから解放された。</p>
<p>最後にmanagerをswarmから解放する。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># docker@manager</span></div><div class="line"></div><div class="line">docker swarm leave --force</div><div class="line">Node left the swarm.</div></pre></td></tr></table></figure>
<h3 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h3><p>思った以上にクラスタを容易に作成できた。<br>swarm modeはマルチホストネットワーク機能(docker_gwbridge)をつかって、<br>アプリケーションを動かすということだと再確認できた。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><p><a href="https://pocketstudio.net/2016/06/23/docker-1-12-swarm-mode-and-ingress-load-balancing/" target="_blank" rel="external">https://pocketstudio.net/2016/06/23/docker-1-12-swarm-mode-and-ingress-load-balancing/</a><br><a href="https://docs.docker.com/engine/userguide/networking/get-started-overlay/" target="_blank" rel="external">https://docs.docker.com/engine/userguide/networking/get-started-overlay/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;docker engine 1.12から標準で搭載されたswarm modeを試してみる。&lt;br&gt;swarm(群れ)という意味で、クラスタリング構成機構のこと。&lt;br&gt;swarm modeはdocker engine v1.12.0-rc1で統合された機能である。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>JWT(JSON Web Token)を使った認証を試みる</title>
    <link href="http://blog.kazu69.net/2016/07/30/authenticate_with_json_web_token/"/>
    <id>http://blog.kazu69.net/2016/07/30/authenticate_with_json_web_token/</id>
    <published>2016-07-30T09:17:13.000Z</published>
    <updated>2016-08-06T02:51:54.000Z</updated>
    
    <content type="html"><![CDATA[<p>Oauth2やOpenID Connectなどすでに導入されているJWT(JSON Web Token)。<br>今後IoTとかを考えると認証手法としては結構有効な認証方法だということで、改めて眺めてみた。</p>
<a id="more"></a>
<h2 id="JSON-Web-Token"><a href="#JSON-Web-Token" class="headerlink" title="JSON Web Token"></a>JSON Web Token</h2><p>JSON Web Token(JWT) jot(ジョット)と発音する。<br>JSONを電子署名したurl-safe(URLで使用できない文字が含まれる)なclaimのことを指す。<a href="https://tools.ietf.org/html/rfc7519" target="_blank" rel="external">rfc7519</a><br>また同じような言葉もあるので一旦整理する。</p>
<ul>
<li>JWS は署名したもの</li>
<li>JWE はEncryptしたもの</li>
</ul>
<p>一般的にJWTというとJWSのことをいう。</p>
<p>電子署名(公開鍵+秘密鍵方式)をしているため、データの読み出し、書き込みができる。<br>しかし、その内容の改竄はチェックできる。<br>JSONの内容を秘匿化するわけではないので、内容は誰でも見ることはできるという点は注意が必要。</p>
<p><a href="https://jwt.io/" target="_blank" rel="external">jwt.io</a>というサービスを使うことでdebugすることができるので、試してみると見ての通り、PAYLOADの内容は見ることができる。</p>
<p>JWTの形式は</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">[ HEADER ] . [ PAYLOAD ] . [ SIGNATURE ]</div></pre></td></tr></table></figure>
<p>という形で構成され、HEADERとPAYLOADはbase64エンコードされている。</p>
<hr>
<p>使い方として、認証時にトークンを発行し、必要に応じて検証することで認証済みとして扱うようにするとか。<br>同じことはSessionを使うことでもできるが、sessionを使う場合との違いは、サーバーが状態(state)を持たないでいいので、<br>token発行ホストと認証ホストが異なっていても問題ない。(まさにステートレス)<br>JWTを使うと、CSRFの攻撃を考えなくて良くなる。</p>
<p>また、JWTは</p>
<ul>
<li>Base64エンコーダー・デコーダー</li>
<li>jsonパーサー</li>
<li>署名検証機能</li>
</ul>
<p>上記のがあれば利用できるため、汎用性が高い。</p>
<p>デバイスによってはjsonを保持しておけば、認証できるという意味ではIoTとかを考慮すると重宝する。<br>クライアント側で永続化はメモリキャッシュでも、DBでもブラウザのLocalStrageも良い。<br>認証が必要な時に、tokenをポストするかhttpヘッダーで送る形となる。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">Authorization: bearer &lt;token&gt;</div></pre></td></tr></table></figure>
<h2 id="JSON-Web-Token-の中身"><a href="#JSON-Web-Token-の中身" class="headerlink" title="JSON Web Token の中身"></a>JSON Web Token の中身</h2><h3 id="HEADER"><a href="#HEADER" class="headerlink" title="HEADER"></a>HEADER</h3><p>タイプとハッシュアルゴリズムを保持しており、これをBase64している</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"alg"</span>: <span class="string">"HS256"</span>,</div><div class="line">  <span class="attr">"typ"</span>: <span class="string">"JWT"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>HMAC SHA-256のJWTを表す。これはBase64で</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Base64.encode64(<span class="string">'&#123;"alg": "HS256", "typ": "JWT"&#125;'</span>)</div><div class="line"><span class="comment"># =&gt; eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9</span></div></pre></td></tr></table></figure>
<p>となる。</p>
<h3 id="PAYLOAD"><a href="#PAYLOAD" class="headerlink" title="PAYLOAD"></a>PAYLOAD</h3><p>JWTクレーム。トークンの本体となる部分で、幾つかのクレーム名はあらかじめ予約されている。<br>詳細は<a href="https://tools.ietf.org/html/draft-ietf-oauth-json-web-token-19#section-4" target="_blank" rel="external">RFCを参照</a><br>クレーム名はJWT作成者側で自由に作成も出来る。</p>
<p>例えば以下のようなクレーム</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">  <span class="attr">"sub"</span>: <span class="string">"1234567890"</span>,</div><div class="line">  <span class="attr">"name"</span>: <span class="string">"John Doe"</span>,</div><div class="line">  <span class="attr">"admin"</span>: <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>こちらもBase64で</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">Base64.encode64(<span class="string">'&#123;"sub":"1234567890","name":"John Doe","admin":true&#125;'</span>)</div><div class="line"><span class="comment"># =&gt; eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9</span></div></pre></td></tr></table></figure>
<h3 id="SIGNATURE"><a href="#SIGNATURE" class="headerlink" title="SIGNATURE"></a>SIGNATURE</h3><p>最終パートはSIGNATURE。HEADERとPAYLOADをSecretKeyで署名。</p>
<p>SecretKeyをsecretとすると、ここまでの結果から署名は</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</div></pre></td></tr></table></figure>
<p>となる。</p>
<p>最終的な結果としてJWTは</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">eyJhbGciOiAiSFMyNTYiLCAidHlwIjogIkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</div></pre></td></tr></table></figure>
<p>このtokenを使って認証を行うことなる。</p>
<h3 id="アプリケーションで試してみた"><a href="#アプリケーションで試してみた" class="headerlink" title="アプリケーションで試してみた"></a>アプリケーションで試してみた</h3><p>Expressをつかって簡単なサーバーでJWT認証を試してみる。</p>
<p><a href="https://github.com/kazu69/jwt-express-example" target="_blank" rel="external">jwt-express-example</a> というExpress + MySQLなアプリケーションを作成して試してみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># dockerコンテナを起動して</span></div><div class="line"><span class="comment"># 任意のパスワードでユーザー作成</span></div><div class="line">$ curl -X POST http://127.0.0.1:3000/user -d <span class="string">'name=testuser'</span> -d <span class="string">'password=secretpassword'</span></div><div class="line">&#123;<span class="string">"id"</span>:2,<span class="string">"name"</span>:<span class="string">"testuser"</span>,<span class="string">"password"</span>:<span class="string">"secretpassword"</span>,<span class="string">"updated_at"</span>:<span class="string">"2016-08-03T14:02:08.000Z"</span>,<span class="string">"created_at"</span>:<span class="string">"2016-08-03T14:02:08.000Z"</span>&#125;</div><div class="line"></div><div class="line"><span class="comment"># ユーザー認証をパスワードで行う</span></div><div class="line">$ curl -X POST http://127.0.0.1:3000/authentication -d <span class="string">'name=testuser'</span> -d <span class="string">'password=secretpassword'</span></div><div class="line">&#123;<span class="string">"token"</span>:<span class="string">"CREATED-JSON-WEB-TOKEN"</span>,<span class="string">"message"</span>:<span class="string">"Authentication successfully finished."</span>&#125;%</div><div class="line"></div><div class="line"><span class="comment"># 別のホストでログインする</span></div><div class="line">$ curl -X POST http://127.0.0.1:8000/login -d <span class="string">'access_token=CREATED-JSON-WEB-TOKEN"'</span></div><div class="line">&#123;<span class="string">"id"</span>:2,<span class="string">"name"</span>:<span class="string">"testuser"</span>&#125;</div></pre></td></tr></table></figure>
<p>という感じになる。</p>
<h3 id="結論"><a href="#結論" class="headerlink" title="結論"></a>結論</h3><p>ウェブサービスでの認証は複数のドメイン間で行われることが多い。そのため、クロスドメインを考える必要があり、<br>複雑化していくことなる。JWTのような機構を使うことで、サービス提供側はtokenを認証するということだに注力できるため、<br>仕様もシンプルにできる。<br>IoTなデバイスが増える中で、JWTな事案は今後もっと増えてくるんだろうなぁ。</p>
<h3 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h3><ul>
<li><a href="https://github.com/dwyl/learn-json-web-tokens" target="_blank" rel="external">dwyl/learn-json-web-tokens</a></li>
<li><a href="https://float-middle.com/json-web-tokens-jwt-vs-sessions/" target="_blank" rel="external">JSON Web Tokens (JWT) vs Sessions</a></li>
<li><a href="https://jwt.io/" target="_blank" rel="external">jwt.io</a></li>
<li><a href="http://hiyosi.tumblr.com/post/70073770678/jwt%E3%81%AB%E3%81%A4%E3%81%84%E3%81%A6%E7%B0%A1%E5%8D%98%E3%81%AB%E3%81%BE%E3%81%A8%E3%82%81%E3%81%A6%E3%81%BF%E3%81%9F" target="_blank" rel="external">JWTについて簡単にまとめてみた</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Oauth2やOpenID Connectなどすでに導入されているJWT(JSON Web Token)。&lt;br&gt;今後IoTとかを考えると認証手法としては結構有効な認証方法だということで、改めて眺めてみた。&lt;/p&gt;
    
    </summary>
    
      <category term="web" scheme="http://blog.kazu69.net/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>seccompプロファイルを使ってdockerのシステムコールを制御</title>
    <link href="http://blog.kazu69.net/2016/06/27/control_system_callof_docker_using_secomp/"/>
    <id>http://blog.kazu69.net/2016/06/27/control_system_callof_docker_using_secomp/</id>
    <published>2016-06-27T13:14:24.000Z</published>
    <updated>2016-06-27T23:26:17.000Z</updated>
    
    <content type="html"><![CDATA[<p>Dockerコンテナでアプリケーションのプロセスをdebugするためにstraceをすると<br>Operation not permittedで怒られた。</p>
<a id="more"></a>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">strace -f -p 1</div><div class="line">strace: attach: ptrace(PTRACE_ATTACH, ...): Operation not permitted</div></pre></td></tr></table></figure>
<p>エラー内容から調べてみると、どうやらセキュリティ的にコンテナ内のシステムコールへのアクセスが制限されていると思われる。<br>dockerのリポジトリのdocumentを見ると<a href="https://github.com/docker/docker/blob/master/docs/security/seccomp.md" target="_blank" rel="external">Seccomp security profiles for Docker</a>という項目がある。<br>どうやら<a href="https://github.com/docker/docker/pull/17989" target="_blank" rel="external">このPR(#17989)</a>で追加されてるようだ。</p>
<p>seccompを設定しているprofileがあるようで、これを変更することでシステムコールを制御できるようす。</p>
<h2 id="seccomp"><a href="#seccomp" class="headerlink" title="seccomp"></a>seccomp</h2><p>そもそもseccomp(secure computing mode)はプロセスのexit, sigreturn, read, writeを行うシステムコールを制御する。<br>また、seccomp-bpf(seccomp mode filter)は、システムコールのフィルタにBPFを実装しており、<br>システムコールの番号と引数をフィルタリングすることでより柔軟に扱うことができる。</p>
<p>というもの。</p>
<h2 id="docker-seccomp-profile"><a href="#docker-seccomp-profile" class="headerlink" title="docker seccomp profile"></a>docker seccomp profile</h2><p>dockerではseccompの設定は<a href="https://github.com/docker/docker/blob/master/profiles/seccomp/default.json" target="_blank" rel="external">このようなdefault.json</a>で定義されている。<br>適当なシステムコールプロファイルをjsonで作成し、–security-optオプションで実行してみる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">docker version</div><div class="line">Client:</div><div class="line"> Version:      1.11.0</div><div class="line"> API version:  1.23</div><div class="line"> Go version:   go1.5.4</div><div class="line"> Git commit:   4dc5990</div><div class="line"> Built:        Wed Apr 13 18:13:28 2016</div><div class="line"> OS/Arch:      darwin/amd64</div><div class="line"></div><div class="line">Server:</div><div class="line"> Version:      1.11.0</div><div class="line"> API version:  1.23</div><div class="line"> Go version:   go1.5.4</div><div class="line"> Git commit:   4dc5990</div><div class="line"> Built:        Wed Apr 13 19:36:04 2016</div><div class="line"> OS/Arch:      linux/amd64</div><div class="line"></div><div class="line">cat seccomp.json | jq .</div><div class="line">&#123;</div><div class="line">  <span class="string">"defaultAction"</span>: <span class="string">"SCMP_ACT_ALLOW"</span>,</div><div class="line">  <span class="string">"syscalls"</span>: [</div><div class="line">    &#123;</div><div class="line">      <span class="string">"name"</span>: <span class="string">"mkdir"</span>,</div><div class="line">      <span class="string">"action"</span>: <span class="string">"SCMP_ACT_ERRNO"</span>,</div><div class="line">      <span class="string">"args"</span>: []</div><div class="line">    &#125;</div><div class="line">  ]</div><div class="line">&#125;</div><div class="line"></div><div class="line">docker run -it --security-opt seccomp:seccomp.json alpine sh</div><div class="line">/ <span class="comment"># mkdir -p tmp/test</span></div><div class="line">mkdir: can<span class="string">'t create directory '</span>tmp/<span class="string">': Operation not permitted</span></div><div class="line">/ # apk update</div><div class="line">fetch http://dl-cdn.alpinelinux.org/alpine/v3.4/main/x86_64/APKINDEX.tar.gz</div><div class="line">fetch http://dl-cdn.alpinelinux.org/alpine/v3.4/community/x86_64/APKINDEX.tar.gz</div><div class="line">v3.4.0-84-g5967d51 [http://dl-cdn.alpinelinux.org/alpine/v3.4/main]</div><div class="line">v3.4.0-75-g8d1dc52 [http://dl-cdn.alpinelinux.org/alpine/v3.4/community]</div><div class="line">OK: 5958 distinct packages available</div><div class="line">/ # apk add strace</div><div class="line">(1/1) Installing strace (4.11-r2)</div><div class="line">Executing busybox-1.24.2-r9.trigger</div><div class="line">OK: 6 MiB in 12 packages</div><div class="line">/ # ls</div><div class="line">bin      dev      etc      home     lib      linuxrc  media    mnt      proc     root     run      sbin     srv      sys      tmp      usr      var</div><div class="line">/ # strace ls home</div><div class="line">execve("/bin/ls", ["ls", "home"], [/* 6 vars */]) = 0</div><div class="line">arch_prctl(ARCH_SET_FS, 0x7f2a390e3c28) = 0</div><div class="line">set_tid_address(0x7f2a390e3c60)         = 14</div><div class="line">mprotect(0x7f2a390e0000, 4096, PROT_READ) = 0</div><div class="line">mprotect(0x55ab364b6000, 16384, PROT_READ) = 0</div><div class="line">getuid()                                = 0</div><div class="line">ioctl(0, TIOCGWINSZ, &#123;ws_row=45, ws_col=181, ws_xpixel=0, ws_ypixel=0&#125;) = 0</div><div class="line">ioctl(1, TIOCGWINSZ, &#123;ws_row=45, ws_col=181, ws_xpixel=0, ws_ypixel=0&#125;) = 0</div><div class="line">ioctl(1, TIOCGWINSZ, &#123;ws_row=45, ws_col=181, ws_xpixel=0, ws_ypixel=0&#125;) = 0</div><div class="line">stat("home", &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">open("home", O_RDONLY|O_DIRECTORY|O_CLOEXEC) = 3</div><div class="line">fcntl(3, F_SETFD, FD_CLOEXEC)           = 0</div><div class="line">getdents64(3, /* 2 entries */, 2048)    = 48</div><div class="line">getdents64(3, /* 0 entries */, 2048)    = 0</div><div class="line">close(3)                                = 0</div><div class="line">exit_group(0)                           = ?</div><div class="line">+++ exited with 0 +++</div></pre></td></tr></table></figure>
<p>SCMP_ACT_ALLOW は許可。SCMP_ACT_ERRNOは拒否となるので、<br>SCMP_ACT_ALLOW でフィルターに一致しない場合は許可。<br>mkdirを呼び出すとSCMP_ACT_ERRNOでエラーが返る。</p>
<p>mkdir以外は許可されているのでstraceも問題ない。</p>
<p>また、デフォルトのseccomp profileなしで使うなら–security-optオプションにunconfinedを渡してあげると良い。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">docker run -it --security-opt seccomp=unconfined alpine sh</div><div class="line">/ <span class="comment"># apk update</span></div><div class="line">fetch http://dl-cdn.alpinelinux.org/alpine/v3.4/main/x86_64/APKINDEX.tar.gz</div><div class="line">fetch http://dl-cdn.alpinelinux.org/alpine/v3.4/community/x86_64/APKINDEX.tar.gz</div><div class="line">v3.4.0-84-g5967d51 [http://dl-cdn.alpinelinux.org/alpine/v3.4/main]</div><div class="line">v3.4.0-75-g8d1dc52 [http://dl-cdn.alpinelinux.org/alpine/v3.4/community]</div><div class="line">OK: 5958 distinct packages available</div><div class="line">/ <span class="comment"># apk add strace</span></div><div class="line">(1/1) Installing strace (4.11-r2)</div><div class="line">Executing busybox-1.24.2-r9.trigger</div><div class="line">OK: 6 MiB <span class="keyword">in</span> 12 packages</div><div class="line">/ <span class="comment"># ls</span></div><div class="line">bin      dev      etc      home     lib      linuxrc  media    mnt      proc     root     run      sbin     srv      sys      tmp      usr      var</div><div class="line">/ <span class="comment"># strace ls home</span></div><div class="line">execve(<span class="string">"/bin/ls"</span>, [<span class="string">"ls"</span>, <span class="string">"home"</span>], [/* 6 vars */]) = 0</div><div class="line">arch_prctl(ARCH_SET_FS, 0x7feb31d3ec28) = 0</div><div class="line">set_tid_address(0x7feb31d3ec60)         = 14</div><div class="line">mprotect(0x7feb31d3b000, 4096, PROT_READ) = 0</div><div class="line">mprotect(0x559a8af6c000, 16384, PROT_READ) = 0</div><div class="line">getuid()                                = 0</div><div class="line">ioctl(0, TIOCGWINSZ, &#123;ws_row=45, ws_col=181, ws_xpixel=0, ws_ypixel=0&#125;) = 0</div><div class="line">ioctl(1, TIOCGWINSZ, &#123;ws_row=45, ws_col=181, ws_xpixel=0, ws_ypixel=0&#125;) = 0</div><div class="line">ioctl(1, TIOCGWINSZ, &#123;ws_row=45, ws_col=181, ws_xpixel=0, ws_ypixel=0&#125;) = 0</div><div class="line"><span class="built_in">stat</span>(<span class="string">"home"</span>, &#123;st_mode=S_IFDIR|0755, st_size=4096, ...&#125;) = 0</div><div class="line">open(<span class="string">"home"</span>, O_RDONLY|O_DIRECTORY|O_CLOEXEC) = 3</div><div class="line">fcntl(3, F_SETFD, FD_CLOEXEC)           = 0</div><div class="line">getdents64(3, /* 2 entries */, 2048)    = 48</div><div class="line">getdents64(3, /* 0 entries */, 2048)    = 0</div><div class="line">close(3)                                = 0</div><div class="line">exit_group(0)                           = ?</div><div class="line">+++ exited with 0 +++</div></pre></td></tr></table></figure>
<p>ちなみに v1.11だとLinux kernel が 4.3の場合、–pids-limitオプションで<a href="https://github.com/docker/docker/pull/18697" target="_blank" rel="external">リソース制限もできる</a>ようになってるみたい。</p>
<h2 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h2><p><a href="https://github.com/docker/docker/blob/master/docs/security/seccomp.md" target="_blank" rel="external">Seccomp security profiles for Docker</a><br><a href="https://blog.docker.com/2016/02/docker-engine-1-10-security/" target="_blank" rel="external">DOCKER ENGINE 1.10 SECURITY IMPROVEMENTS</a><br><a href="https://github.com/docker/docker/pull/17989" target="_blank" rel="external">Phase 1: Initial seccomp support</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Dockerコンテナでアプリケーションのプロセスをdebugするためにstraceをすると&lt;br&gt;Operation not permittedで怒られた。&lt;/p&gt;
    
    </summary>
    
      <category term="tec" scheme="http://blog.kazu69.net/categories/tec/"/>
    
    
  </entry>
  
  <entry>
    <title>ネットワークのアーミーナイフnetcatを使ってみる</title>
    <link href="http://blog.kazu69.net/2016/06/19/using_army_knife_netcat_of_network/"/>
    <id>http://blog.kazu69.net/2016/06/19/using_army_knife_netcat_of_network/</id>
    <published>2016-06-19T11:26:02.000Z</published>
    <updated>2016-06-27T16:38:45.000Z</updated>
    
    <content type="html"><![CDATA[<p>サーバーの死活確認やモックレスポンスが欲しい時など、手元で簡単に実現出来るnetcatコマンド。<br>ソフトウェア開発しているときに活用できそうな機能をまとめてみた。<br>netcatはunixだけでなくwindowsでも使える。</p>
<a id="more"></a>
<p><a href="https://ja.wikipedia.org/wiki/Netcat" target="_blank" rel="external">wikipedia</a>には以下のようにある。</p>
<blockquote>
<p>TCPやUDPを扱う万能ツールとして知られ、しばしばネットワークのスイスアーミーナイフ、<br>TCP/IPのアーミーナイフ、ハッカーのアーミーナイフなどのように評される。</p>
</blockquote>
<p>ということで、簡単に普段の開発で使いそうなことを試してみる。</p>
<h2 id="httpリクエスト"><a href="#httpリクエスト" class="headerlink" title="httpリクエスト"></a>httpリクエスト</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="built_in">echo</span> <span class="string">'GET / HTTP/1.1\n\n'</span> | nc google.com 80</div><div class="line">HTTP/1.1 302 Found</div><div class="line">Cache-Control: private</div><div class="line">Content-Type: text/html; charset=UTF-8</div><div class="line">Location: http://www.google.co.jp/?gfe_rd=cr&amp;ei=5clkV-DkHbLK8geW87zIAw</div><div class="line">Content-Length: 261</div><div class="line">Date: Sat, 18 Jun 2016 04:11:17 GMT</div><div class="line"></div><div class="line">&lt;HTML&gt;&lt;HEAD&gt;&lt;meta http-equiv=<span class="string">"content-type"</span> content=<span class="string">"text/html;charset=utf-8"</span>&gt;</div><div class="line">&lt;TITLE&gt;302 Moved&lt;/TITLE&gt;&lt;/HEAD&gt;&lt;BODY&gt;</div><div class="line">&lt;H1&gt;302 Moved&lt;/H1&gt;</div><div class="line">The document has moved</div><div class="line">&lt;A HREF=<span class="string">"http://www.google.co.jp/?gfe_rd=cr&amp;amp;ei=5clkV-DkHbLK8geW87zIAw"</span>&gt;here&lt;/A&gt;.</div><div class="line">&lt;/BODY&gt;&lt;/HTML&gt;</div></pre></td></tr></table></figure>
<h2 id="簡易サーバー"><a href="#簡易サーバー" class="headerlink" title="簡易サーバー"></a>簡易サーバー</h2><p>単純なレスポンスを返すだけのサーバーならnetcatを使うことで実現出来る。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">while</span> <span class="literal">true</span>; <span class="keyword">do</span> ( <span class="built_in">echo</span> <span class="string">"HTTP/1.0 200 OK;\nHello World"</span> ) | nc -l 8080; [ $? != 0 ] &amp;&amp; <span class="built_in">break</span>; <span class="keyword">done</span></div><div class="line">HEAD / HTTP/1.1</div><div class="line">Host: localhost:8080</div><div class="line">User-Agent: curl/7.43.0</div><div class="line">Accept: */*</div><div class="line"></div><div class="line"><span class="comment"># 別プロセスから</span></div><div class="line">curl -I localhost:8080</div><div class="line">HTTP/1.0 200 OK;</div><div class="line">Hello World</div></pre></td></tr></table></figure>
<p>適当なhtmlファイルを返してみる。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">title</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">            This is Test</div><div class="line">        <span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">netcat -lp 3000 &lt; index.html</div><div class="line">GET / HTTP/1.1</div><div class="line">Host: localhost:3000</div><div class="line">User-Agent: curl/7.43.0</div><div class="line">Accept: */*</div><div class="line"></div><div class="line"><span class="comment"># 別プロセスから</span></div><div class="line">curl http://localhost:3000</div><div class="line">&lt;html&gt;</div><div class="line">        &lt;head&gt;</div><div class="line">            &lt;title&gt;Test&lt;/title&gt;</div><div class="line">        &lt;/head&gt;</div><div class="line">        &lt;body&gt;</div><div class="line">            This is Test</div><div class="line">        &lt;/body&gt;</div></pre></td></tr></table></figure>
<h2 id="バックドア"><a href="#バックドア" class="headerlink" title="バックドア"></a>バックドア</h2><p>e オプションはバックドアとして機能する。GNU, OpenBSDバージョンでは利用できないようにしてることがある。<br>その場合はソースを取得してコンパイルが必要。<br>Macだとbrewでインストールすることで利用出来る。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># バックドアを開けておく</span></div><div class="line">nc -l -p 8080 -e /bin/bash</div><div class="line"></div><div class="line"><span class="comment"># 別プロセスから</span></div><div class="line">nc localhost 8080</div><div class="line"></div><div class="line">ls</div><div class="line"><span class="comment"># netcatの実行ディレクトリのファイル一覧</span></div><div class="line">whoami</div><div class="line"><span class="comment"># netcatの実行ユーザー</span></div></pre></td></tr></table></figure>
<h2 id="サーバー間通信"><a href="#サーバー間通信" class="headerlink" title="サーバー間通信"></a>サーバー間通信</h2><p>ポート番号を指定して、待ち受けることでサーバー間でコミュニケーションできる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># ホスト側でport 4000をlisten</span></div><div class="line">nc -lp 4000</div><div class="line"></div><div class="line"><span class="comment"># 別プロセスで400にアクセス</span></div><div class="line">nc localhost 4000</div><div class="line"></div><div class="line"><span class="comment"># 入力内容がホスト側に出力される</span></div></pre></td></tr></table></figure>
<p>バックドアはeオプションが使えないが、サーバー間通信を活用することで同じことが実現出来る。<br>出力、エラーをclien側に出力するためにmkfifoを使う。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># host側</span></div><div class="line">mkdir tmp/; rm -f tmp/f; mkfifo tmp/f</div><div class="line">cat tmp/f | /bin/sh -i 2&gt;&amp;1 | nc -lp 4000 &gt; tmp/f</div><div class="line"></div><div class="line"><span class="comment"># client側</span></div><div class="line">nc localhost 4000</div><div class="line"><span class="comment"># /bin/sh が実行できる</span></div></pre></td></tr></table></figure>
<h2 id="ポートスキャン"><a href="#ポートスキャン" class="headerlink" title="ポートスキャン"></a>ポートスキャン</h2><p>z オプションでポート確認だけをする</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">nc -zv localhost 80</div><div class="line">found 0 associations</div><div class="line">found 1 connections:</div><div class="line">     1: flags=82&lt;CONNECTED,PREFERRED&gt;</div><div class="line">    outif en0</div><div class="line">    src 192.168.1.4 port 56855</div><div class="line">    dst 0.0.0.0 port 80</div><div class="line">    rank info not available</div><div class="line">    TCP aux info available</div><div class="line"></div><div class="line">Connection to google.com port 80 [tcp/http] succeeded!</div></pre></td></tr></table></figure>
<p>ちなみにportのレンジを指定して、ポートの確認もできる。<br>(AWSなどはポートスキャンできない)</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">nc -zv localhost 75-85</div><div class="line">nc: connectx to localhost port 75 (tcp) failed: Connection refused</div><div class="line">nc: connectx to localhost port 76 (tcp) failed: Connection refused</div><div class="line">nc: connectx to localhost port 77 (tcp) failed: Connection refused</div><div class="line">nc: connectx to localhost port 78 (tcp) failed: Connection refused</div><div class="line">nc: connectx to localhost port 79 (tcp) failed: Connection refused</div><div class="line">found 0 associations</div><div class="line">found 1 connections:</div><div class="line">     1: flags=82&lt;CONNECTED,PREFERRED&gt;</div><div class="line">    outif en0</div><div class="line">    src 192.168.1.4 port 57809</div><div class="line">    dst 0.0.0.0 port 80</div><div class="line">    rank info not available</div><div class="line">    TCP aux info available</div><div class="line"></div><div class="line">Connection to localhost port 80 [tcp/http] succeeded!</div><div class="line">nc: connectx to localhost port 81 (tcp) failed: Connection refused</div><div class="line">nc: connectx to localhost port 82 (tcp) failed: Connection refused</div><div class="line">nc: connectx to localhost port 83 (tcp) failed: Connection refused</div><div class="line">nc: connectx to localhost port 84 (tcp) failed: Connection refused</div><div class="line">nc: connectx to localhost port 85 (tcp) failed: Connection refused</div></pre></td></tr></table></figure>
<p>このポートスキャンの機能を使うことでアプリケーションの死活監視をすることで実現出来る。<br>ドメイン名だけでなくIPアドレスでも可能。</p>
<h2 id="ファイル転送"><a href="#ファイル転送" class="headerlink" title="ファイル転送"></a>ファイル転送</h2><p>送信する側では標準入力で送信するファイルを指定する。<br>受信する側で送られてきた内容(標準出力)をリダイレクトして、ファイル保存</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># receiving</span></div><div class="line">nc -lp 4000 &gt; test.txt</div><div class="line"></div><div class="line"><span class="comment"># sending</span></div><div class="line">nc -lp 4000 &gt; test.txt</div></pre></td></tr></table></figure>
<p>送信完了しても、特になにもおきない。<br>受信側でmd5 hashなどをつかって、ファイルの同一性をチェックしたほうが良い。</p>
<h2 id="tunnel"><a href="#tunnel" class="headerlink" title="tunnel"></a>tunnel</h2><p>L オプションでリモートのアドレスに転送する</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">nc -L google.com:80 -p 3000</div><div class="line"></div><div class="line"><span class="comment"># 別プロセスから</span></div><div class="line">curl http://localhost:3000</div><div class="line">&lt;!DOCTYPE html&gt;</div><div class="line">&lt;html lang=en&gt;</div><div class="line">  &lt;meta charset=utf-8&gt;</div><div class="line">  &lt;meta name=viewport content=<span class="string">"initial-scale=1, minimum-scale=1, width=device-width"</span>&gt;</div><div class="line">  &lt;title&gt;Error 404 (Not Found)!!1&lt;/title&gt;</div><div class="line">  &lt;style&gt;</div><div class="line">    *&#123;margin:0;padding:0&#125;html,code&#123;font:15px/22px arial,sans-serif&#125;html&#123;background:<span class="comment">#fff;color:#222;padding:15px&#125;body&#123;margin:7% auto 0;max-width:390px;min-height:180px;padding:30px 0 15px&#125;* &gt; body&#123;background:url(//www.google.com/images/errors/robot.png) 100% 5px no-repeat;padding-right:205px&#125;p&#123;margin:11px 0 22px;overflow:hidden&#125;ins&#123;color:#777;text-decoration:none&#125;a img&#123;border:0&#125;@media screen and (max-width:772px)&#123;body&#123;background:none;margin-top:0;max-width:none;padding-right:0&#125;&#125;#logo&#123;background:url(//www.google.com/images/branding/googlelogo/1x/googlelogo_color_150x54dp.png) no-repeat;margin-left:-5px&#125;@media only screen and (min-resolution:192dpi)&#123;#logo&#123;background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat 0% 0%/100% 100%;-moz-border-image:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) 0&#125;&#125;@media only screen and (-webkit-min-device-pixel-ratio:2)&#123;#logo&#123;background:url(//www.google.com/images/branding/googlelogo/2x/googlelogo_color_150x54dp.png) no-repeat;-webkit-background-size:100% 100%&#125;&#125;#logo&#123;display:inline-block;height:54px;width:150px&#125;</span></div><div class="line">  &lt;/style&gt;</div><div class="line">  &lt;a href=//www.google.com/&gt;&lt;span id=logo aria-label=Google&gt;&lt;/span&gt;&lt;/a&gt;</div><div class="line">  &lt;p&gt;&lt;b&gt;404.&lt;/b&gt; &lt;ins&gt;That’s an error.&lt;/ins&gt;</div><div class="line">  &lt;p&gt;The requested URL &lt;code&gt;/&lt;/code&gt; was not found on this server.  &lt;ins&gt;That’s all we know.&lt;/ins&gt;</div></pre></td></tr></table></figure>
<p>ざっとみただけで、さすが高機能だ。<br>まだまだ奥深い活用方法がありあそうだが、現在のところ自分にはこれでも十分。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;サーバーの死活確認やモックレスポンスが欲しい時など、手元で簡単に実現出来るnetcatコマンド。&lt;br&gt;ソフトウェア開発しているときに活用できそうな機能をまとめてみた。&lt;br&gt;netcatはunixだけでなくwindowsでも使える。&lt;/p&gt;
    
    </summary>
    
      <category term="memo" scheme="http://blog.kazu69.net/categories/memo/"/>
    
    
  </entry>
  
  <entry>
    <title>systemdを使ってnodejsサーバー起動する</title>
    <link href="http://blog.kazu69.net/2016/06/06/start-node-server-with-systemd/"/>
    <id>http://blog.kazu69.net/2016/06/06/start-node-server-with-systemd/</id>
    <published>2016-06-06T10:26:02.000Z</published>
    <updated>2016-06-06T23:29:11.000Z</updated>
    
    <content type="html"><![CDATA[<p>nodejsのプロセスバックグラウンドで実行する(デーモン化)する場合、だいたい<a href="https://www.npmjs.com/package/forever" target="_blank" rel="external">forever</a>などが選択されると思う。<br>今回は、Fedora、CentOS 7のデーモンとなるsystemdを使ってデーモン化してみた。<br><a id="more"></a></p>
<p>まずforeverでプロセスをバックグランドで実行させる。</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">npm i -g forever</div><div class="line">forever start server.js</div><div class="line">info:    Forever processing file: server.js</div><div class="line"></div><div class="line">node]<span class="comment"># forever list</span></div><div class="line">info:    Forever processes running</div><div class="line">data:        uid  <span class="built_in">command</span>       script    forever pid id logfile                 uptime</div><div class="line">data:    [0] OhQD /usr/bin/node server.js 97      102    /root/.forever/OhQD.log 0:0:0:19.532</div></pre></td></tr></table></figure>
<p>実際はこのようにforeverを実行する起動ファイルを作成し、自動起動できるようにしないといけない。<br>場合によっては、起動順序やプロセスの依存関係などを考慮しないといけないため、起動スクリプトは複雑になることが考えられる。</p>
<p>これをsystemdに置き換えることで、</p>
<ul>
<li>起動スクリプトを設定ファイルで記述できる</li>
<li>依存関係や起動順序など複雑さを回避できる</li>
<li>起動処理をできる限り並列化するとのことで起動にかかk流時間が短縮できる</li>
</ul>
<p>などが実現する様子。</p>
<p>さっそく適当なDocker環境でsystemdを使ってnodejsサーバーのデーモン化を試してみた。</p>
<h2 id="NodeJsサーバー作成"><a href="#NodeJsサーバー作成" class="headerlink" title="NodeJsサーバー作成"></a>NodeJsサーバー作成</h2><p>ミニマムなサーバーを作成</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">const</span> http = <span class="built_in">require</span>(<span class="string">'http'</span>);</div><div class="line"></div><div class="line"><span class="keyword">const</span> hostname = <span class="string">'0.0.0.0'</span>;</div><div class="line"><span class="keyword">const</span> port = <span class="number">3000</span>;</div><div class="line"></div><div class="line"><span class="keyword">const</span> server = http.createServer(<span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</div><div class="line">    res.statusCode = <span class="number">200</span>;</div><div class="line">    res.setHeader(<span class="string">'Content-Type'</span>, <span class="string">'text/plain'</span>);</div><div class="line">    res.end(<span class="string">'Hello World\n'</span>);</div><div class="line">&#125;)</div><div class="line"></div><div class="line">server.listen(port, hostname, () =&gt; &#123;</div><div class="line">    <span class="built_in">console</span>.log(<span class="string">`Server running at http://<span class="subst">$&#123;hostname&#125;</span>:<span class="subst">$&#123;port&#125;</span>/`</span>);</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h2 id="systemd-の設定ファイル"><a href="#systemd-の設定ファイル" class="headerlink" title="systemd の設定ファイル"></a>systemd の設定ファイル</h2><p>systemdでは起動処理を<strong>Unit</strong>という単位で管理している。<br>Unitには幾つかのタイプ(service, socketやdebviceなど）が存在するが、それらはすべてファイルの拡張子で判別されている。</p>
<p>設定ファイルにはUnit, Install, Service(serviceであれば)セクションで構成される。</p>
<p>それぞれの設定項目に関しては<a href="https://www.freedesktop.org/software/systemd/man/systemd.html" target="_blank" rel="external">manページ</a>に詳しくあるので、必要そうなものをかいつまんでみる。</p>
<h3 id="Unitセクション"><a href="#Unitセクション" class="headerlink" title="Unitセクション"></a>Unitセクション</h3><p>起動サービスの依存・順序関係を解決する。</p>
<table>
<thead>
<tr>
<th>ディレクティブ</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>Description</td>
<td>ユニットの説明</td>
</tr>
<tr>
<td>Documentation</td>
<td>ドキュメントのURI</td>
</tr>
<tr>
<td>After/Before</td>
<td>実行順番の設定</td>
</tr>
<tr>
<td>Requires/Wants</td>
<td>依存関係の定義。(順序は関係なく並列起動されるべきサービス)<br>RequiresとWantsの違い。Requiresは依存するサービス起動失敗した時は、サービスの起動を中断とする</td>
</tr>
</tbody>
</table>
<h3 id="Serviceセクション"><a href="#Serviceセクション" class="headerlink" title="Serviceセクション"></a>Serviceセクション</h3><p>起動サービスの設定</p>
<table>
<thead>
<tr>
<th>ディレクティブ</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>ExecStart</td>
<td>実行するサービスの起動コマンド</td>
</tr>
<tr>
<td>ExecReload</td>
<td>サービスのリロードコマンド</td>
</tr>
<tr>
<td>ExecStop</td>
<td>サービスの停止コマンド</td>
</tr>
<tr>
<td>Restart</td>
<td>プロセス停止時の再起動の有無<br>always 常に再起動<br>no 再起動しない<br>on-success 終了ステータスコード 0 (exit code 0) で終了時に再起動<br>on-failure 終了ステータスコード 0以外 (exit code 0以外) で終了時に再起動</td>
</tr>
<tr>
<td>Type</td>
<td>プロセスの起動方法<br>フォアグラウンドで実行する場合はsimple<br>プロセスをforkして実行する場合はforking</td>
</tr>
<tr>
<td>Environment</td>
<td>環境変数</td>
</tr>
<tr>
<td>RestartSec</td>
<td>再起動までのスリープ時間</td>
</tr>
<tr>
<td>StandardOutput,StandardError</td>
<td>ログ、エラー出力の設定</td>
</tr>
</tbody>
</table>
<h3 id="Installセクション"><a href="#Installセクション" class="headerlink" title="Installセクション"></a>Installセクション</h3><p>ユニットの自動起動に関する設定。</p>
<table>
<thead>
<tr>
<th>ディレクティブ</th>
<th>内容</th>
</tr>
</thead>
<tbody>
<tr>
<td>WantedBy</td>
<td>systemctl enable でインストールされるとき、 .wants/にシンボリックを作成</td>
</tr>
<tr>
<td>RequiredBy</td>
<td>systemctl enable でインストールされるとき、 .requires/にシンボリックを作成</td>
</tr>
</tbody>
</table>
<p>wantsとrequiresはの違いは、wantsはUnitの依存関係のユニットが失敗すると起動を中断する。<br>requiresは依存関係のユニットが失敗すると起動を継続する。</p>
<hr>
<p>ということで、今回はサービスの起動を行うため<strong>.service</strong>を使う。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=Node.js Server</div><div class="line"></div><div class="line">[Service]</div><div class="line">WorkingDirectory=/home/node</div><div class="line">Type=simple</div><div class="line">ExecStart=/usr/bin/node server.js</div><div class="line">Restart=always</div><div class="line">RestartSec=10</div><div class="line">StandardOutput=syslog</div><div class="line">StandardError=syslog</div><div class="line">SyslogIdentifier=node-server</div><div class="line">Environment=NODE_ENV=production PORT=3000</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<p>上記を使ってDockerfileを作成。<br>centos7でNodeJs 4.x を入れるのが大変だったので、<a href="https://nodesource.com/" target="_blank" rel="external">nodesource</a>からセットアップすることにした。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">FROM centos:7</div><div class="line"></div><div class="line">RUN yum -y update &amp;&amp; \</div><div class="line">    yum -y install epel-release.noarch curl make gcc gcc-c++ tree which &amp;&amp; \</div><div class="line">    yum repolist</div><div class="line"></div><div class="line">RUN curl -sL https://rpm.nodesource.com/setup_4.x | bash - &amp;&amp; \</div><div class="line">    yum -y install nodejs</div><div class="line"></div><div class="line">RUN mkdir /home/node/</div><div class="line">ADD server.js /home/node/server.js</div><div class="line"></div><div class="line">ADD node_server.service /etc/systemd/system/node_server.service</div></pre></td></tr></table></figure>
<h2 id="systemdを試してみる"><a href="#systemdを試してみる" class="headerlink" title="systemdを試してみる"></a>systemdを試してみる</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">docker build -t server .</div></pre></td></tr></table></figure>
<p>Dockerコンテナ内でDocker daemonの起動はできないので、privilegedオプションで起動する。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">docker run --privileged -d -p 3000:3000 server:latest /sbin/init</div><div class="line">72956dbd3cdf37268a0fa9678922f116e48d1730dd5c69771fa7abffe4affd49</div><div class="line">docker ps</div><div class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS                    NAMES</div><div class="line">72956dbd3cdf        server:latest       &quot;/sbin/init&quot;        10 seconds ago      Up 9 seconds        0.0.0.0:3000-&gt;3000/tcp   silly_pike</div><div class="line"></div><div class="line">docker exec -it silly_pike /bin/bash</div></pre></td></tr></table></figure>
<p>色々と確認する</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"># 起動unitの確認</div><div class="line">systemctl list-units --type=service</div><div class="line"></div><div class="line">  UNIT                                   LOAD   ACTIVE SUB     DESCRIPTION</div><div class="line">  dbus.service                           loaded active running D-Bus System Message Bus</div><div class="line">  getty@tty1.service                     loaded active running Getty on tty1</div><div class="line">  ldconfig.service                       loaded active exited  Rebuild Dynamic Linker Cache</div><div class="line">  systemd-hwdb-update.service            loaded active exited  Rebuild Hardware Database</div><div class="line">  systemd-journal-catalog-update.service loaded active exited  Rebuild Journal Catalog</div><div class="line">  systemd-journal-flush.service          loaded active exited  Flush Journal to Persistent Storage</div><div class="line">  systemd-journald.service               loaded active running Journal Service</div><div class="line">  systemd-logind.service                 loaded active running Login Service</div><div class="line">  systemd-random-seed.service            loaded active exited  Load/Save Random Seed</div><div class="line">● systemd-remount-fs.service             loaded failed failed  Remount Root and Kernel File Systems</div><div class="line">  systemd-sysctl.service                 loaded active exited  Apply Kernel Variables</div><div class="line">  systemd-tmpfiles-setup-dev.service     loaded active exited  Create Static Device Nodes in /dev</div><div class="line">iles and Directoriesetup.service         loaded active exited  Create Volatile</div><div class="line">FDevicesd-udev-trigger.service           loaded active exited  udev Coldplug</div><div class="line">e Manager-udevd.service                  loaded active running udev Kernel Devic</div><div class="line">ed      d-update-done.service            loaded active exited  Update is Complet</div><div class="line"> System Boot/Shutdown.service            loaded active exited  Update UTMP about</div><div class="line">ons     d-user-sessions.service          loaded active exited  Permit User Sessi</div><div class="line">sole    d-vconsole-setup.service         loaded active exited  Setup Virtual Con</div><div class="line"></div><div class="line">LOAD   = Reflects whether the unit definition was properly loaded.</div><div class="line">ACTIVE = The high-level unit activation state, i.e. generalization of SUB.</div><div class="line">SUB    = The low-level unit activation state, values depend on unit type.</div><div class="line"></div><div class="line">o.      d units listed. Pass --all to see loaded but inactive units, to--More--</div><div class="line">To show all installed unit files use &apos;systemctl list-unit-files&apos;.</div><div class="line"></div><div class="line"># 起動の有無に関係なくunitの一覧表示する</div><div class="line">systemctl list-unit-files --type=service</div><div class="line"></div><div class="line">UNIT FILE                              STATE</div><div class="line">proc-sys-fs-binfmt_misc.automount      static</div><div class="line">dev-hugepages.mount                    static</div><div class="line">dev-mqueue.mount                       static</div><div class="line">proc-sys-fs-binfmt_misc.mount          static</div><div class="line">sys-fs-fuse-connections.mount          static</div><div class="line">sys-kernel-config.mount                static</div><div class="line">sys-kernel-debug.mount                 static</div><div class="line">tmp.mount                              disabled</div><div class="line">systemd-ask-password-console.path      static</div><div class="line">systemd-ask-password-wall.path         static</div><div class="line">autovt@.service                        disabled</div><div class="line">blk-availability.service               disabled</div><div class="line">console-getty.service                  disabled</div><div class="line">console-shell.service                  disabled</div><div class="line">container-getty@.service               static</div><div class="line">dbus-org.freedesktop.hostname1.service static</div><div class="line">dbus-org.freedesktop.locale1.service   static</div><div class="line">dbus-org.freedesktop.login1.service    static</div><div class="line">dbus-org.freedesktop.machine1.service  static</div><div class="line">dbus-org.freedesktop.network1.service  invalid</div><div class="line">dbus-org.freedesktop.timedate1.service static</div><div class="line">dbus.service                           static</div><div class="line">...</div><div class="line">...</div></pre></td></tr></table></figure>
<p>staticはInstallを持たないので、単体で起動できない(他のUnitに依存)する。<br>enabled/disabled はシステム起動時の自動起動の有効/無効を意味する。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"># 自動起動を有効にする</div><div class="line">systemctl enable node_server.service</div><div class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/node_server.service to /etc/systemd/system/node_server.service.</div><div class="line"></div><div class="line"># 自動起動を無効にする</div><div class="line">systemctl disable node_server.service</div><div class="line">Removed symlink /etc/systemd/system/multi-user.target.wants/node_server.service.</div></pre></td></tr></table></figure>
<p>systemd/system にシンボリックリンクを作ることがわかる。</p>
<p>自動起動を有効にする</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">systemctl enable node_server.service</div><div class="line">Created symlink from /etc/systemd/system/multi-user.target.wants/node.service to /etc/systemd/system/node.service.</div><div class="line"></div><div class="line">systemctl list-unit-files --type=service | grep node_server.service</div><div class="line">node_server.service                    enabled</div></pre></td></tr></table></figure>
<p>サービスをスタートする</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start node_server.service</div></pre></td></tr></table></figure>
<p>起動を確認する</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">systemctl status node_server.service</div><div class="line">● node_server.service - Node.js Server</div><div class="line">   Loaded: loaded (/etc/systemd/system/node_server.service; enabled; vendor preset: disabled)</div><div class="line">   Active: active (running) since Sun 2016-06-06 20:11:11 UTC; 4s ago</div><div class="line"> Main PID: 90 (node)</div><div class="line">   CGroup: /system.slice/node_server.service</div><div class="line">           └─90 /usr/bin/node /home/node/server.js</div><div class="line"></div><div class="line">Jun 06 20:11:11 5bb4328b5c84 systemd[1]: Started Node.js Server.</div><div class="line">Jun 06 20:11:11 5bb4328b5c84 systemd[1]: Starting Node.js Server...</div><div class="line">Jun 06 20:11:11 5bb4328b5c84 node-server[90]: Server running at http://0.0.0.0:3000/</div></pre></td></tr></table></figure>
<p>アクセス確認する</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">curl http://$(docker-machine ip dev):3000/</div><div class="line">Hello World</div></pre></td></tr></table></figure>
<p>.serveceファイルの再読み込み</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl daemon-reload</div></pre></td></tr></table></figure>
<p>ついでに再起動</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart node_server.service</div></pre></td></tr></table></figure>
<h2 id="まとめ"><a href="#まとめ" class="headerlink" title="まとめ"></a>まとめ</h2><p>起動スクリプトの依存性や順序などは場合によっては複雑化するが、systemdを使うことで設定ファイルに落としこめることは、<br>メリットになるのではないだろうか。<br>ただ、systemdは全体像が大きいため把握できていないが、まだまだ落とし穴も多い様子。<br>iniからsystemdに置き換わっているのは事実なので、さらに使用して理解する必要がありそうだ。</p>
<h2 id="参考にしたページ"><a href="#参考にしたページ" class="headerlink" title="参考にしたページ"></a>参考にしたページ</h2><ul>
<li><a href="http://dev.classmethod.jp/cloud/aws/systemd-getting-started/" target="_blank" rel="external">systemd超入門</a></li>
<li><a href="https://wiki.archlinuxjp.org/index.php/Systemd" target="_blank" rel="external">wiki.archlinuxjp.org systemd</a></li>
<li><a href="https://blog.docker.com/2013/09/docker-can-now-run-within-docker/" target="_blank" rel="external">Docker can now run within Docker</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;nodejsのプロセスバックグラウンドで実行する(デーモン化)する場合、だいたい&lt;a href=&quot;https://www.npmjs.com/package/forever&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;forever&lt;/a&gt;などが選択されると思う。&lt;br&gt;今回は、Fedora、CentOS 7のデーモンとなるsystemdを使ってデーモン化してみた。&lt;br&gt;
    
    </summary>
    
      <category term="tec" scheme="http://blog.kazu69.net/categories/tec/"/>
    
    
  </entry>
  
</feed>
